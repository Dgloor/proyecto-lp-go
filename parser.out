Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BOOLEAN
    BREAK
    CASE
    CHAN
    CONST
    CONTINUE
    DEFAULT
    DEFER
    DOS_PUNTOS
    D_CORCHETE
    D_LLAVE
    ELSE
    ELSEIF
    FALLTHROUGH
    FOR
    FUNC
    GO
    GOTO
    IDENTIFICADOR
    IF
    IMPORT
    INTERFACE
    I_CORCHETE
    I_LLAVE
    MAP
    NOT
    OR
    PACKAGE
    PUNTO
    PUNTO_COMA
    RANGE
    RETURN
    SELECT
    STRUCT
    SWITCH
    TYPE

Grammar

Rule 0     S' -> instruccion
Rule 1     instruccion -> print I_PARENTESIS arg D_PARENTESIS
Rule 2     instruccion -> VAR ID type ASIGNACION valor
Rule 3     instruccion -> ID asignacion valor
Rule 4     instruccion -> ID operador_matematico
Rule 5     valor -> valor operacion_binaria valor
Rule 6     arg -> valor
Rule 7     arg -> valor COMA valor
Rule 8     print -> PRINTLN
Rule 9     print -> PRINTF
Rule 10    print -> PRINT
Rule 11    type -> BOOL
Rule 12    type -> STRINGTYPE
Rule 13    type -> INTEGER
Rule 14    type -> FLOAT32
Rule 15    type -> FLOAT64
Rule 16    operador_matematico -> INCREMENTO
Rule 17    operador_matematico -> DECREMENTO
Rule 18    asignacion -> ASIGNACION
Rule 19    asignacion -> ASIGNACION_ADICION
Rule 20    asignacion -> ASIGNACION_RESTA
Rule 21    asignacion -> ASIGNACION_MULTI
Rule 22    asignacion -> DECLARACION_ASIGNACION
Rule 23    asignacion -> ASIGNACION_DIVISION
Rule 24    asignacion -> ASIGNACION_MODULO
Rule 25    operacion_binaria -> ADICION
Rule 26    operacion_binaria -> RESTA
Rule 27    operacion_binaria -> MULTIPLICACION
Rule 28    operacion_binaria -> DIVISION
Rule 29    operacion_binaria -> MODULO
Rule 30    operacion_binaria -> MENOR_IGUAL
Rule 31    operacion_binaria -> IGUAL
Rule 32    operacion_binaria -> DIFERENTE
Rule 33    operacion_binaria -> MAYOR
Rule 34    operacion_binaria -> MAYOR_IGUAL
Rule 35    operacion_binaria -> MENOR
Rule 36    valor -> INT
Rule 37    valor -> DOUBLE
Rule 38    valor -> STRING
Rule 39    valor -> ID

Terminals, with rules where they appear

ADICION              : 25
AND                  : 
ASIGNACION           : 2 18
ASIGNACION_ADICION   : 19
ASIGNACION_DIVISION  : 23
ASIGNACION_MODULO    : 24
ASIGNACION_MULTI     : 21
ASIGNACION_RESTA     : 20
BOOL                 : 11
BOOLEAN              : 
BREAK                : 
CASE                 : 
CHAN                 : 
COMA                 : 7
CONST                : 
CONTINUE             : 
DECLARACION_ASIGNACION : 22
DECREMENTO           : 17
DEFAULT              : 
DEFER                : 
DIFERENTE            : 32
DIVISION             : 28
DOS_PUNTOS           : 
DOUBLE               : 37
D_CORCHETE           : 
D_LLAVE              : 
D_PARENTESIS         : 1
ELSE                 : 
ELSEIF               : 
FALLTHROUGH          : 
FLOAT32              : 14
FLOAT64              : 15
FOR                  : 
FUNC                 : 
GO                   : 
GOTO                 : 
ID                   : 2 3 4 39
IDENTIFICADOR        : 
IF                   : 
IGUAL                : 31
IMPORT               : 
INCREMENTO           : 16
INT                  : 36
INTEGER              : 13
INTERFACE            : 
I_CORCHETE           : 
I_LLAVE              : 
I_PARENTESIS         : 1
MAP                  : 
MAYOR                : 33
MAYOR_IGUAL          : 34
MENOR                : 35
MENOR_IGUAL          : 30
MODULO               : 29
MULTIPLICACION       : 27
NOT                  : 
OR                   : 
PACKAGE              : 
PRINT                : 10
PRINTF               : 9
PRINTLN              : 8
PUNTO                : 
PUNTO_COMA           : 
RANGE                : 
RESTA                : 26
RETURN               : 
SELECT               : 
STRING               : 38
STRINGTYPE           : 12
STRUCT               : 
SWITCH               : 
TYPE                 : 
VAR                  : 2
error                : 

Nonterminals, with rules where they appear

arg                  : 1
asignacion           : 3
instruccion          : 0
operacion_binaria    : 5
operador_matematico  : 4
print                : 1
type                 : 2
valor                : 2 3 5 5 6 7 7

Parsing method: LALR

state 0

    (0) S' -> . instruccion
    (1) instruccion -> . print I_PARENTESIS arg D_PARENTESIS
    (2) instruccion -> . VAR ID type ASIGNACION valor
    (3) instruccion -> . ID asignacion valor
    (4) instruccion -> . ID operador_matematico
    (8) print -> . PRINTLN
    (9) print -> . PRINTF
    (10) print -> . PRINT

    VAR             shift and go to state 3
    ID              shift and go to state 4
    PRINTLN         shift and go to state 5
    PRINTF          shift and go to state 6
    PRINT           shift and go to state 7

    instruccion                    shift and go to state 1
    print                          shift and go to state 2

state 1

    (0) S' -> instruccion .



state 2

    (1) instruccion -> print . I_PARENTESIS arg D_PARENTESIS

    I_PARENTESIS    shift and go to state 8


state 3

    (2) instruccion -> VAR . ID type ASIGNACION valor

    ID              shift and go to state 9


state 4

    (3) instruccion -> ID . asignacion valor
    (4) instruccion -> ID . operador_matematico
    (18) asignacion -> . ASIGNACION
    (19) asignacion -> . ASIGNACION_ADICION
    (20) asignacion -> . ASIGNACION_RESTA
    (21) asignacion -> . ASIGNACION_MULTI
    (22) asignacion -> . DECLARACION_ASIGNACION
    (23) asignacion -> . ASIGNACION_DIVISION
    (24) asignacion -> . ASIGNACION_MODULO
    (16) operador_matematico -> . INCREMENTO
    (17) operador_matematico -> . DECREMENTO

    ASIGNACION      shift and go to state 12
    ASIGNACION_ADICION shift and go to state 13
    ASIGNACION_RESTA shift and go to state 14
    ASIGNACION_MULTI shift and go to state 15
    DECLARACION_ASIGNACION shift and go to state 16
    ASIGNACION_DIVISION shift and go to state 17
    ASIGNACION_MODULO shift and go to state 18
    INCREMENTO      shift and go to state 19
    DECREMENTO      shift and go to state 20

    asignacion                     shift and go to state 10
    operador_matematico            shift and go to state 11

state 5

    (8) print -> PRINTLN .

    I_PARENTESIS    reduce using rule 8 (print -> PRINTLN .)


state 6

    (9) print -> PRINTF .

    I_PARENTESIS    reduce using rule 9 (print -> PRINTF .)


state 7

    (10) print -> PRINT .

    I_PARENTESIS    reduce using rule 10 (print -> PRINT .)


state 8

    (1) instruccion -> print I_PARENTESIS . arg D_PARENTESIS
    (6) arg -> . valor
    (7) arg -> . valor COMA valor
    (5) valor -> . valor operacion_binaria valor
    (36) valor -> . INT
    (37) valor -> . DOUBLE
    (38) valor -> . STRING
    (39) valor -> . ID

    INT             shift and go to state 23
    DOUBLE          shift and go to state 24
    STRING          shift and go to state 25
    ID              shift and go to state 26

    arg                            shift and go to state 21
    valor                          shift and go to state 22

state 9

    (2) instruccion -> VAR ID . type ASIGNACION valor
    (11) type -> . BOOL
    (12) type -> . STRINGTYPE
    (13) type -> . INTEGER
    (14) type -> . FLOAT32
    (15) type -> . FLOAT64

    BOOL            shift and go to state 28
    STRINGTYPE      shift and go to state 29
    INTEGER         shift and go to state 30
    FLOAT32         shift and go to state 31
    FLOAT64         shift and go to state 32

    type                           shift and go to state 27

state 10

    (3) instruccion -> ID asignacion . valor
    (5) valor -> . valor operacion_binaria valor
    (36) valor -> . INT
    (37) valor -> . DOUBLE
    (38) valor -> . STRING
    (39) valor -> . ID

    INT             shift and go to state 23
    DOUBLE          shift and go to state 24
    STRING          shift and go to state 25
    ID              shift and go to state 26

    valor                          shift and go to state 33

state 11

    (4) instruccion -> ID operador_matematico .

    $end            reduce using rule 4 (instruccion -> ID operador_matematico .)


state 12

    (18) asignacion -> ASIGNACION .

    INT             reduce using rule 18 (asignacion -> ASIGNACION .)
    DOUBLE          reduce using rule 18 (asignacion -> ASIGNACION .)
    STRING          reduce using rule 18 (asignacion -> ASIGNACION .)
    ID              reduce using rule 18 (asignacion -> ASIGNACION .)


state 13

    (19) asignacion -> ASIGNACION_ADICION .

    INT             reduce using rule 19 (asignacion -> ASIGNACION_ADICION .)
    DOUBLE          reduce using rule 19 (asignacion -> ASIGNACION_ADICION .)
    STRING          reduce using rule 19 (asignacion -> ASIGNACION_ADICION .)
    ID              reduce using rule 19 (asignacion -> ASIGNACION_ADICION .)


state 14

    (20) asignacion -> ASIGNACION_RESTA .

    INT             reduce using rule 20 (asignacion -> ASIGNACION_RESTA .)
    DOUBLE          reduce using rule 20 (asignacion -> ASIGNACION_RESTA .)
    STRING          reduce using rule 20 (asignacion -> ASIGNACION_RESTA .)
    ID              reduce using rule 20 (asignacion -> ASIGNACION_RESTA .)


state 15

    (21) asignacion -> ASIGNACION_MULTI .

    INT             reduce using rule 21 (asignacion -> ASIGNACION_MULTI .)
    DOUBLE          reduce using rule 21 (asignacion -> ASIGNACION_MULTI .)
    STRING          reduce using rule 21 (asignacion -> ASIGNACION_MULTI .)
    ID              reduce using rule 21 (asignacion -> ASIGNACION_MULTI .)


state 16

    (22) asignacion -> DECLARACION_ASIGNACION .

    INT             reduce using rule 22 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 22 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 22 (asignacion -> DECLARACION_ASIGNACION .)
    ID              reduce using rule 22 (asignacion -> DECLARACION_ASIGNACION .)


state 17

    (23) asignacion -> ASIGNACION_DIVISION .

    INT             reduce using rule 23 (asignacion -> ASIGNACION_DIVISION .)
    DOUBLE          reduce using rule 23 (asignacion -> ASIGNACION_DIVISION .)
    STRING          reduce using rule 23 (asignacion -> ASIGNACION_DIVISION .)
    ID              reduce using rule 23 (asignacion -> ASIGNACION_DIVISION .)


state 18

    (24) asignacion -> ASIGNACION_MODULO .

    INT             reduce using rule 24 (asignacion -> ASIGNACION_MODULO .)
    DOUBLE          reduce using rule 24 (asignacion -> ASIGNACION_MODULO .)
    STRING          reduce using rule 24 (asignacion -> ASIGNACION_MODULO .)
    ID              reduce using rule 24 (asignacion -> ASIGNACION_MODULO .)


state 19

    (16) operador_matematico -> INCREMENTO .

    $end            reduce using rule 16 (operador_matematico -> INCREMENTO .)


state 20

    (17) operador_matematico -> DECREMENTO .

    $end            reduce using rule 17 (operador_matematico -> DECREMENTO .)


state 21

    (1) instruccion -> print I_PARENTESIS arg . D_PARENTESIS

    D_PARENTESIS    shift and go to state 34


state 22

    (6) arg -> valor .
    (7) arg -> valor . COMA valor
    (5) valor -> valor . operacion_binaria valor
    (25) operacion_binaria -> . ADICION
    (26) operacion_binaria -> . RESTA
    (27) operacion_binaria -> . MULTIPLICACION
    (28) operacion_binaria -> . DIVISION
    (29) operacion_binaria -> . MODULO
    (30) operacion_binaria -> . MENOR_IGUAL
    (31) operacion_binaria -> . IGUAL
    (32) operacion_binaria -> . DIFERENTE
    (33) operacion_binaria -> . MAYOR
    (34) operacion_binaria -> . MAYOR_IGUAL
    (35) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 6 (arg -> valor .)
    COMA            shift and go to state 35
    ADICION         shift and go to state 37
    RESTA           shift and go to state 38
    MULTIPLICACION  shift and go to state 39
    DIVISION        shift and go to state 40
    MODULO          shift and go to state 41
    MENOR_IGUAL     shift and go to state 42
    IGUAL           shift and go to state 43
    DIFERENTE       shift and go to state 44
    MAYOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR           shift and go to state 47

    operacion_binaria              shift and go to state 36

state 23

    (36) valor -> INT .

    COMA            reduce using rule 36 (valor -> INT .)
    ADICION         reduce using rule 36 (valor -> INT .)
    RESTA           reduce using rule 36 (valor -> INT .)
    MULTIPLICACION  reduce using rule 36 (valor -> INT .)
    DIVISION        reduce using rule 36 (valor -> INT .)
    MODULO          reduce using rule 36 (valor -> INT .)
    MENOR_IGUAL     reduce using rule 36 (valor -> INT .)
    IGUAL           reduce using rule 36 (valor -> INT .)
    DIFERENTE       reduce using rule 36 (valor -> INT .)
    MAYOR           reduce using rule 36 (valor -> INT .)
    MAYOR_IGUAL     reduce using rule 36 (valor -> INT .)
    MENOR           reduce using rule 36 (valor -> INT .)
    D_PARENTESIS    reduce using rule 36 (valor -> INT .)
    $end            reduce using rule 36 (valor -> INT .)


state 24

    (37) valor -> DOUBLE .

    COMA            reduce using rule 37 (valor -> DOUBLE .)
    ADICION         reduce using rule 37 (valor -> DOUBLE .)
    RESTA           reduce using rule 37 (valor -> DOUBLE .)
    MULTIPLICACION  reduce using rule 37 (valor -> DOUBLE .)
    DIVISION        reduce using rule 37 (valor -> DOUBLE .)
    MODULO          reduce using rule 37 (valor -> DOUBLE .)
    MENOR_IGUAL     reduce using rule 37 (valor -> DOUBLE .)
    IGUAL           reduce using rule 37 (valor -> DOUBLE .)
    DIFERENTE       reduce using rule 37 (valor -> DOUBLE .)
    MAYOR           reduce using rule 37 (valor -> DOUBLE .)
    MAYOR_IGUAL     reduce using rule 37 (valor -> DOUBLE .)
    MENOR           reduce using rule 37 (valor -> DOUBLE .)
    D_PARENTESIS    reduce using rule 37 (valor -> DOUBLE .)
    $end            reduce using rule 37 (valor -> DOUBLE .)


state 25

    (38) valor -> STRING .

    COMA            reduce using rule 38 (valor -> STRING .)
    ADICION         reduce using rule 38 (valor -> STRING .)
    RESTA           reduce using rule 38 (valor -> STRING .)
    MULTIPLICACION  reduce using rule 38 (valor -> STRING .)
    DIVISION        reduce using rule 38 (valor -> STRING .)
    MODULO          reduce using rule 38 (valor -> STRING .)
    MENOR_IGUAL     reduce using rule 38 (valor -> STRING .)
    IGUAL           reduce using rule 38 (valor -> STRING .)
    DIFERENTE       reduce using rule 38 (valor -> STRING .)
    MAYOR           reduce using rule 38 (valor -> STRING .)
    MAYOR_IGUAL     reduce using rule 38 (valor -> STRING .)
    MENOR           reduce using rule 38 (valor -> STRING .)
    D_PARENTESIS    reduce using rule 38 (valor -> STRING .)
    $end            reduce using rule 38 (valor -> STRING .)


state 26

    (39) valor -> ID .

    COMA            reduce using rule 39 (valor -> ID .)
    ADICION         reduce using rule 39 (valor -> ID .)
    RESTA           reduce using rule 39 (valor -> ID .)
    MULTIPLICACION  reduce using rule 39 (valor -> ID .)
    DIVISION        reduce using rule 39 (valor -> ID .)
    MODULO          reduce using rule 39 (valor -> ID .)
    MENOR_IGUAL     reduce using rule 39 (valor -> ID .)
    IGUAL           reduce using rule 39 (valor -> ID .)
    DIFERENTE       reduce using rule 39 (valor -> ID .)
    MAYOR           reduce using rule 39 (valor -> ID .)
    MAYOR_IGUAL     reduce using rule 39 (valor -> ID .)
    MENOR           reduce using rule 39 (valor -> ID .)
    D_PARENTESIS    reduce using rule 39 (valor -> ID .)
    $end            reduce using rule 39 (valor -> ID .)


state 27

    (2) instruccion -> VAR ID type . ASIGNACION valor

    ASIGNACION      shift and go to state 48


state 28

    (11) type -> BOOL .

    ASIGNACION      reduce using rule 11 (type -> BOOL .)


state 29

    (12) type -> STRINGTYPE .

    ASIGNACION      reduce using rule 12 (type -> STRINGTYPE .)


state 30

    (13) type -> INTEGER .

    ASIGNACION      reduce using rule 13 (type -> INTEGER .)


state 31

    (14) type -> FLOAT32 .

    ASIGNACION      reduce using rule 14 (type -> FLOAT32 .)


state 32

    (15) type -> FLOAT64 .

    ASIGNACION      reduce using rule 15 (type -> FLOAT64 .)


state 33

    (3) instruccion -> ID asignacion valor .
    (5) valor -> valor . operacion_binaria valor
    (25) operacion_binaria -> . ADICION
    (26) operacion_binaria -> . RESTA
    (27) operacion_binaria -> . MULTIPLICACION
    (28) operacion_binaria -> . DIVISION
    (29) operacion_binaria -> . MODULO
    (30) operacion_binaria -> . MENOR_IGUAL
    (31) operacion_binaria -> . IGUAL
    (32) operacion_binaria -> . DIFERENTE
    (33) operacion_binaria -> . MAYOR
    (34) operacion_binaria -> . MAYOR_IGUAL
    (35) operacion_binaria -> . MENOR

    $end            reduce using rule 3 (instruccion -> ID asignacion valor .)
    ADICION         shift and go to state 37
    RESTA           shift and go to state 38
    MULTIPLICACION  shift and go to state 39
    DIVISION        shift and go to state 40
    MODULO          shift and go to state 41
    MENOR_IGUAL     shift and go to state 42
    IGUAL           shift and go to state 43
    DIFERENTE       shift and go to state 44
    MAYOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR           shift and go to state 47

    operacion_binaria              shift and go to state 36

state 34

    (1) instruccion -> print I_PARENTESIS arg D_PARENTESIS .

    $end            reduce using rule 1 (instruccion -> print I_PARENTESIS arg D_PARENTESIS .)


state 35

    (7) arg -> valor COMA . valor
    (5) valor -> . valor operacion_binaria valor
    (36) valor -> . INT
    (37) valor -> . DOUBLE
    (38) valor -> . STRING
    (39) valor -> . ID

    INT             shift and go to state 23
    DOUBLE          shift and go to state 24
    STRING          shift and go to state 25
    ID              shift and go to state 26

    valor                          shift and go to state 49

state 36

    (5) valor -> valor operacion_binaria . valor
    (5) valor -> . valor operacion_binaria valor
    (36) valor -> . INT
    (37) valor -> . DOUBLE
    (38) valor -> . STRING
    (39) valor -> . ID

    INT             shift and go to state 23
    DOUBLE          shift and go to state 24
    STRING          shift and go to state 25
    ID              shift and go to state 26

    valor                          shift and go to state 50

state 37

    (25) operacion_binaria -> ADICION .

    INT             reduce using rule 25 (operacion_binaria -> ADICION .)
    DOUBLE          reduce using rule 25 (operacion_binaria -> ADICION .)
    STRING          reduce using rule 25 (operacion_binaria -> ADICION .)
    ID              reduce using rule 25 (operacion_binaria -> ADICION .)


state 38

    (26) operacion_binaria -> RESTA .

    INT             reduce using rule 26 (operacion_binaria -> RESTA .)
    DOUBLE          reduce using rule 26 (operacion_binaria -> RESTA .)
    STRING          reduce using rule 26 (operacion_binaria -> RESTA .)
    ID              reduce using rule 26 (operacion_binaria -> RESTA .)


state 39

    (27) operacion_binaria -> MULTIPLICACION .

    INT             reduce using rule 27 (operacion_binaria -> MULTIPLICACION .)
    DOUBLE          reduce using rule 27 (operacion_binaria -> MULTIPLICACION .)
    STRING          reduce using rule 27 (operacion_binaria -> MULTIPLICACION .)
    ID              reduce using rule 27 (operacion_binaria -> MULTIPLICACION .)


state 40

    (28) operacion_binaria -> DIVISION .

    INT             reduce using rule 28 (operacion_binaria -> DIVISION .)
    DOUBLE          reduce using rule 28 (operacion_binaria -> DIVISION .)
    STRING          reduce using rule 28 (operacion_binaria -> DIVISION .)
    ID              reduce using rule 28 (operacion_binaria -> DIVISION .)


state 41

    (29) operacion_binaria -> MODULO .

    INT             reduce using rule 29 (operacion_binaria -> MODULO .)
    DOUBLE          reduce using rule 29 (operacion_binaria -> MODULO .)
    STRING          reduce using rule 29 (operacion_binaria -> MODULO .)
    ID              reduce using rule 29 (operacion_binaria -> MODULO .)


state 42

    (30) operacion_binaria -> MENOR_IGUAL .

    INT             reduce using rule 30 (operacion_binaria -> MENOR_IGUAL .)
    DOUBLE          reduce using rule 30 (operacion_binaria -> MENOR_IGUAL .)
    STRING          reduce using rule 30 (operacion_binaria -> MENOR_IGUAL .)
    ID              reduce using rule 30 (operacion_binaria -> MENOR_IGUAL .)


state 43

    (31) operacion_binaria -> IGUAL .

    INT             reduce using rule 31 (operacion_binaria -> IGUAL .)
    DOUBLE          reduce using rule 31 (operacion_binaria -> IGUAL .)
    STRING          reduce using rule 31 (operacion_binaria -> IGUAL .)
    ID              reduce using rule 31 (operacion_binaria -> IGUAL .)


state 44

    (32) operacion_binaria -> DIFERENTE .

    INT             reduce using rule 32 (operacion_binaria -> DIFERENTE .)
    DOUBLE          reduce using rule 32 (operacion_binaria -> DIFERENTE .)
    STRING          reduce using rule 32 (operacion_binaria -> DIFERENTE .)
    ID              reduce using rule 32 (operacion_binaria -> DIFERENTE .)


state 45

    (33) operacion_binaria -> MAYOR .

    INT             reduce using rule 33 (operacion_binaria -> MAYOR .)
    DOUBLE          reduce using rule 33 (operacion_binaria -> MAYOR .)
    STRING          reduce using rule 33 (operacion_binaria -> MAYOR .)
    ID              reduce using rule 33 (operacion_binaria -> MAYOR .)


state 46

    (34) operacion_binaria -> MAYOR_IGUAL .

    INT             reduce using rule 34 (operacion_binaria -> MAYOR_IGUAL .)
    DOUBLE          reduce using rule 34 (operacion_binaria -> MAYOR_IGUAL .)
    STRING          reduce using rule 34 (operacion_binaria -> MAYOR_IGUAL .)
    ID              reduce using rule 34 (operacion_binaria -> MAYOR_IGUAL .)


state 47

    (35) operacion_binaria -> MENOR .

    INT             reduce using rule 35 (operacion_binaria -> MENOR .)
    DOUBLE          reduce using rule 35 (operacion_binaria -> MENOR .)
    STRING          reduce using rule 35 (operacion_binaria -> MENOR .)
    ID              reduce using rule 35 (operacion_binaria -> MENOR .)


state 48

    (2) instruccion -> VAR ID type ASIGNACION . valor
    (5) valor -> . valor operacion_binaria valor
    (36) valor -> . INT
    (37) valor -> . DOUBLE
    (38) valor -> . STRING
    (39) valor -> . ID

    INT             shift and go to state 23
    DOUBLE          shift and go to state 24
    STRING          shift and go to state 25
    ID              shift and go to state 26

    valor                          shift and go to state 51

state 49

    (7) arg -> valor COMA valor .
    (5) valor -> valor . operacion_binaria valor
    (25) operacion_binaria -> . ADICION
    (26) operacion_binaria -> . RESTA
    (27) operacion_binaria -> . MULTIPLICACION
    (28) operacion_binaria -> . DIVISION
    (29) operacion_binaria -> . MODULO
    (30) operacion_binaria -> . MENOR_IGUAL
    (31) operacion_binaria -> . IGUAL
    (32) operacion_binaria -> . DIFERENTE
    (33) operacion_binaria -> . MAYOR
    (34) operacion_binaria -> . MAYOR_IGUAL
    (35) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 7 (arg -> valor COMA valor .)
    ADICION         shift and go to state 37
    RESTA           shift and go to state 38
    MULTIPLICACION  shift and go to state 39
    DIVISION        shift and go to state 40
    MODULO          shift and go to state 41
    MENOR_IGUAL     shift and go to state 42
    IGUAL           shift and go to state 43
    DIFERENTE       shift and go to state 44
    MAYOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR           shift and go to state 47

    operacion_binaria              shift and go to state 36

state 50

    (5) valor -> valor operacion_binaria valor .
    (5) valor -> valor . operacion_binaria valor
    (25) operacion_binaria -> . ADICION
    (26) operacion_binaria -> . RESTA
    (27) operacion_binaria -> . MULTIPLICACION
    (28) operacion_binaria -> . DIVISION
    (29) operacion_binaria -> . MODULO
    (30) operacion_binaria -> . MENOR_IGUAL
    (31) operacion_binaria -> . IGUAL
    (32) operacion_binaria -> . DIFERENTE
    (33) operacion_binaria -> . MAYOR
    (34) operacion_binaria -> . MAYOR_IGUAL
    (35) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    COMA            reduce using rule 5 (valor -> valor operacion_binaria valor .)
    D_PARENTESIS    reduce using rule 5 (valor -> valor operacion_binaria valor .)
    $end            reduce using rule 5 (valor -> valor operacion_binaria valor .)
    ADICION         shift and go to state 37
    RESTA           shift and go to state 38
    MULTIPLICACION  shift and go to state 39
    DIVISION        shift and go to state 40
    MODULO          shift and go to state 41
    MENOR_IGUAL     shift and go to state 42
    IGUAL           shift and go to state 43
    DIFERENTE       shift and go to state 44
    MAYOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR           shift and go to state 47

  ! ADICION         [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! RESTA           [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! MULTIPLICACION  [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! DIVISION        [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! MODULO          [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! IGUAL           [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! DIFERENTE       [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR           [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]
  ! MENOR           [ reduce using rule 5 (valor -> valor operacion_binaria valor .) ]

    operacion_binaria              shift and go to state 36

state 51

    (2) instruccion -> VAR ID type ASIGNACION valor .
    (5) valor -> valor . operacion_binaria valor
    (25) operacion_binaria -> . ADICION
    (26) operacion_binaria -> . RESTA
    (27) operacion_binaria -> . MULTIPLICACION
    (28) operacion_binaria -> . DIVISION
    (29) operacion_binaria -> . MODULO
    (30) operacion_binaria -> . MENOR_IGUAL
    (31) operacion_binaria -> . IGUAL
    (32) operacion_binaria -> . DIFERENTE
    (33) operacion_binaria -> . MAYOR
    (34) operacion_binaria -> . MAYOR_IGUAL
    (35) operacion_binaria -> . MENOR

    $end            reduce using rule 2 (instruccion -> VAR ID type ASIGNACION valor .)
    ADICION         shift and go to state 37
    RESTA           shift and go to state 38
    MULTIPLICACION  shift and go to state 39
    DIVISION        shift and go to state 40
    MODULO          shift and go to state 41
    MENOR_IGUAL     shift and go to state 42
    IGUAL           shift and go to state 43
    DIFERENTE       shift and go to state 44
    MAYOR           shift and go to state 45
    MAYOR_IGUAL     shift and go to state 46
    MENOR           shift and go to state 47

    operacion_binaria              shift and go to state 36
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADICION in state 50 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 50 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 50 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 50 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 50 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 50 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 50 resolved as shift
