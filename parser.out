Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    CASE
    CHAN
    CONST
    CONTINUE
    DEFAULT
    DEFER
    FALLTHROUGH
    FUNC
    GO
    GOTO
    IDENTIFICADOR
    IMPORT
    INTERFACE
    NOT
    OR
    PACKAGE
    PUNTO
    RETURN
    SELECT
    SWITCH

Grammar

Rule 0     S' -> body
Rule 1     body -> instruccion
Rule 2     instruccion -> print I_PARENTESIS valores D_PARENTESIS
Rule 3     instruccion -> VAR ID type ASIGNACION valor
Rule 4     instruccion -> VAR ID ASIGNACION valor
Rule 5     instruccion -> VAR ID ASIGNACION instruccion
Rule 6     instruccion -> ID asignacion valor
Rule 7     instruccion -> ID asignacion instruccion
Rule 8     instruccion -> ID operador_matematico
Rule 9     instruccion -> IF condicion I_LLAVE body D_LLAVE
Rule 10    instruccion -> ELSE I_LLAVE body D_LLAVE
Rule 11    instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE
Rule 12    instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
Rule 13    instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
Rule 14    instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
Rule 15    instruccion -> array_int
Rule 16    instruccion -> array_double
Rule 17    instruccion -> array_string
Rule 18    instruccion -> array_boolean
Rule 19    instruccion -> array_length_int
Rule 20    instruccion -> array_length_double
Rule 21    instruccion -> array_length_string
Rule 22    instruccion -> array_length_boolean
Rule 23    instruccion -> array_con_valores_int
Rule 24    instruccion -> array_con_valores_double
Rule 25    instruccion -> array_con_valores_string
Rule 26    instruccion -> array_con_valores_boolean
Rule 27    instruccion -> array_length_con_valores_int
Rule 28    instruccion -> array_length_con_valores_double
Rule 29    instruccion -> array_length_con_valores_string
Rule 30    instruccion -> array_length_con_valores_boolean
Rule 31    array_int -> I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
Rule 32    array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
Rule 33    array_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
Rule 34    array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
Rule 35    array_length_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
Rule 36    array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
Rule 37    array_length_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
Rule 38    array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
Rule 39    array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
Rule 40    array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
Rule 41    array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
Rule 42    array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
Rule 43    array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
Rule 44    array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
Rule 45    array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
Rule 46    array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
Rule 47    instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
Rule 48    instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
Rule 49    instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
Rule 50    instruccion -> TYPE ID STRUCT I_LLAVE atributos D_LLAVE
Rule 51    atributos -> atributo
Rule 52    atributos -> atributo atributos
Rule 53    atributo -> ID type
Rule 54    instruccion -> init_struct
Rule 55    init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
Rule 56    init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
Rule 57    clave_valor -> valor DOS_PUNTOS valor
Rule 58    claves_valores -> clave_valor
Rule 59    claves_valores -> clave_valor COMA claves_valores
Rule 60    condicion -> valor
Rule 61    condicion -> I_PARENTESIS valor D_PARENTESIS
Rule 62    iteracion_for -> ID
Rule 63    valores -> valor
Rule 64    valores -> valor COMA valores
Rule 65    valores_int -> valor_int
Rule 66    valores_int -> valor_int COMA valores_int
Rule 67    valores_double -> valor_double
Rule 68    valores_double -> valor_double COMA valores_double
Rule 69    valores_string -> valor_string
Rule 70    valores_string -> valor_string COMA valores_string
Rule 71    valores_boolean -> valor_boolean
Rule 72    valores_boolean -> valor_boolean COMA valores_boolean
Rule 73    valor -> valor operacion_binaria valor
Rule 74    print -> PRINTLN
Rule 75    print -> PRINTF
Rule 76    print -> PRINT
Rule 77    type -> BOOL
Rule 78    type -> STRINGTYPE
Rule 79    type -> INTEGER
Rule 80    type -> FLOAT32
Rule 81    type -> FLOAT64
Rule 82    operador_matematico -> INCREMENTO
Rule 83    operador_matematico -> DECREMENTO
Rule 84    asignacion -> ASIGNACION
Rule 85    asignacion -> ASIGNACION_ADICION
Rule 86    asignacion -> ASIGNACION_RESTA
Rule 87    asignacion -> ASIGNACION_MULTI
Rule 88    asignacion -> DECLARACION_ASIGNACION
Rule 89    asignacion -> ASIGNACION_DIVISION
Rule 90    asignacion -> ASIGNACION_MODULO
Rule 91    operacion_binaria -> ADICION
Rule 92    operacion_binaria -> RESTA
Rule 93    operacion_binaria -> MULTIPLICACION
Rule 94    operacion_binaria -> DIVISION
Rule 95    operacion_binaria -> MODULO
Rule 96    operacion_binaria -> MENOR_IGUAL
Rule 97    operacion_binaria -> IGUAL
Rule 98    operacion_binaria -> DIFERENTE
Rule 99    operacion_binaria -> MAYOR
Rule 100   operacion_binaria -> MAYOR_IGUAL
Rule 101   operacion_binaria -> MENOR
Rule 102   valor -> valor_int
Rule 103   valor -> valor_double
Rule 104   valor -> valor_string
Rule 105   valor -> valor_boolean
Rule 106   valor -> valor_variable
Rule 107   valor_int -> INT
Rule 108   valor_double -> DOUBLE
Rule 109   valor_string -> STRING
Rule 110   valor_boolean -> BOOLEAN
Rule 111   valor_variable -> ID

Terminals, with rules where they appear

ADICION              : 91
AND                  : 
ASIGNACION           : 3 4 5 55 84
ASIGNACION_ADICION   : 85
ASIGNACION_DIVISION  : 89
ASIGNACION_MODULO    : 90
ASIGNACION_MULTI     : 87
ASIGNACION_RESTA     : 86
BOOL                 : 77
BOOLEAN              : 34 38 42 46 110
BREAK                : 
CASE                 : 
CHAN                 : 
COMA                 : 14 59 64 66 68 70 72
CONST                : 
CONTINUE             : 
DECLARACION_ASIGNACION : 12 14 56 88
DECREMENTO           : 83
DEFAULT              : 
DEFER                : 
DIFERENTE            : 98
DIVISION             : 94
DOS_PUNTOS           : 57
DOUBLE               : 32 36 40 44 108
D_CORCHETE           : 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
D_LLAVE              : 9 10 11 12 13 14 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 50 55 56
D_PARENTESIS         : 2 48 61
ELSE                 : 10
ELSEIF               : 11
FALLTHROUGH          : 
FLOAT32              : 80
FLOAT64              : 81
FOR                  : 12 13 14
FUNC                 : 
GO                   : 
GOTO                 : 
ID                   : 3 4 5 6 7 8 12 12 13 14 14 14 50 53 55 55 55 56 56 62 111
IDENTIFICADOR        : 
IF                   : 9
IGUAL                : 97
IMPORT               : 
INCREMENTO           : 82
INT                  : 31 35 35 36 37 38 39 43 43 44 45 46 107
INTEGER              : 79
INTERFACE            : 
I_CORCHETE           : 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49
I_LLAVE              : 9 10 11 12 13 14 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 50 55 56
I_PARENTESIS         : 2 48 61
MAKE                 : 48
MAP                  : 47 48 49
MAYOR                : 99
MAYOR_IGUAL          : 100
MENOR                : 101
MENOR_IGUAL          : 96
MODULO               : 95
MULTIPLICACION       : 93
NOT                  : 
OR                   : 
PACKAGE              : 
PRINT                : 76
PRINTF               : 75
PRINTLN              : 74
PUNTO                : 
PUNTO_COMA           : 13 13
RANGE                : 12 14
RESTA                : 92
RETURN               : 
SELECT               : 
STRING               : 33 37 41 45 109
STRINGTYPE           : 78
STRUCT               : 50
SWITCH               : 
TYPE                 : 50
VAR                  : 3 4 5 55
error                : 

Nonterminals, with rules where they appear

array_boolean        : 18
array_con_valores_boolean : 26
array_con_valores_double : 24
array_con_valores_int : 23
array_con_valores_string : 25
array_double         : 16
array_int            : 15
array_length_boolean : 22
array_length_con_valores_boolean : 30
array_length_con_valores_double : 28
array_length_con_valores_int : 27
array_length_con_valores_string : 29
array_length_double  : 20
array_length_int     : 19
array_length_string  : 21
array_string         : 17
asignacion           : 6 7
atributo             : 51 52
atributos            : 50 52
body                 : 9 10 11 12 13 14 0
clave_valor          : 58 59
claves_valores       : 49 59
condicion            : 9 11
init_struct          : 54
instruccion          : 1 5 7 13
iteracion_for        : 
operacion_binaria    : 73
operador_matematico  : 8 13
print                : 2
type                 : 3 47 47 48 48 49 49 53
valor                : 3 4 6 13 57 57 60 61 63 64 73 73
valor_boolean        : 71 72 105
valor_double         : 67 68 103
valor_int            : 65 66 102
valor_string         : 69 70 104
valor_variable       : 106
valores              : 2 55 56 64
valores_boolean      : 42 46 72
valores_double       : 40 44 68
valores_int          : 39 43 66
valores_string       : 41 45 70

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . instruccion
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 5
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    body                           shift and go to state 1
    instruccion                    shift and go to state 2
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 1

    (0) S' -> body .



state 2

    (1) body -> instruccion .

    $end            reduce using rule 1 (body -> instruccion .)
    D_LLAVE         reduce using rule 1 (body -> instruccion .)


state 3

    (2) instruccion -> print . I_PARENTESIS valores D_PARENTESIS

    I_PARENTESIS    shift and go to state 34


state 4

    (3) instruccion -> VAR . ID type ASIGNACION valor
    (4) instruccion -> VAR . ID ASIGNACION valor
    (5) instruccion -> VAR . ID ASIGNACION instruccion
    (55) init_struct -> VAR . ID ID ASIGNACION ID I_LLAVE valores D_LLAVE

    ID              shift and go to state 35


state 5

    (6) instruccion -> ID . asignacion valor
    (7) instruccion -> ID . asignacion instruccion
    (8) instruccion -> ID . operador_matematico
    (56) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (84) asignacion -> . ASIGNACION
    (85) asignacion -> . ASIGNACION_ADICION
    (86) asignacion -> . ASIGNACION_RESTA
    (87) asignacion -> . ASIGNACION_MULTI
    (88) asignacion -> . DECLARACION_ASIGNACION
    (89) asignacion -> . ASIGNACION_DIVISION
    (90) asignacion -> . ASIGNACION_MODULO
    (82) operador_matematico -> . INCREMENTO
    (83) operador_matematico -> . DECREMENTO

    DECLARACION_ASIGNACION shift and go to state 38
    ASIGNACION      shift and go to state 39
    ASIGNACION_ADICION shift and go to state 40
    ASIGNACION_RESTA shift and go to state 41
    ASIGNACION_MULTI shift and go to state 42
    ASIGNACION_DIVISION shift and go to state 43
    ASIGNACION_MODULO shift and go to state 44
    INCREMENTO      shift and go to state 45
    DECREMENTO      shift and go to state 46

    asignacion                     shift and go to state 36
    operador_matematico            shift and go to state 37

state 6

    (9) instruccion -> IF . condicion I_LLAVE body D_LLAVE
    (60) condicion -> . valor
    (61) condicion -> . I_PARENTESIS valor D_PARENTESIS
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    I_PARENTESIS    shift and go to state 49
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    condicion                      shift and go to state 47
    valor                          shift and go to state 48
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 7

    (10) instruccion -> ELSE . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 60


state 8

    (11) instruccion -> ELSEIF . condicion I_LLAVE body D_LLAVE
    (60) condicion -> . valor
    (61) condicion -> . I_PARENTESIS valor D_PARENTESIS
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    I_PARENTESIS    shift and go to state 49
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    condicion                      shift and go to state 61
    valor                          shift and go to state 48
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 9

    (12) instruccion -> FOR . ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> FOR . instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> FOR . ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    ID              shift and go to state 62
    VAR             shift and go to state 4
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    instruccion                    shift and go to state 63
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 10

    (15) instruccion -> array_int .

    $end            reduce using rule 15 (instruccion -> array_int .)
    PUNTO_COMA      reduce using rule 15 (instruccion -> array_int .)
    D_LLAVE         reduce using rule 15 (instruccion -> array_int .)


state 11

    (16) instruccion -> array_double .

    $end            reduce using rule 16 (instruccion -> array_double .)
    PUNTO_COMA      reduce using rule 16 (instruccion -> array_double .)
    D_LLAVE         reduce using rule 16 (instruccion -> array_double .)


state 12

    (17) instruccion -> array_string .

    $end            reduce using rule 17 (instruccion -> array_string .)
    PUNTO_COMA      reduce using rule 17 (instruccion -> array_string .)
    D_LLAVE         reduce using rule 17 (instruccion -> array_string .)


state 13

    (18) instruccion -> array_boolean .

    $end            reduce using rule 18 (instruccion -> array_boolean .)
    PUNTO_COMA      reduce using rule 18 (instruccion -> array_boolean .)
    D_LLAVE         reduce using rule 18 (instruccion -> array_boolean .)


state 14

    (19) instruccion -> array_length_int .

    $end            reduce using rule 19 (instruccion -> array_length_int .)
    PUNTO_COMA      reduce using rule 19 (instruccion -> array_length_int .)
    D_LLAVE         reduce using rule 19 (instruccion -> array_length_int .)


state 15

    (20) instruccion -> array_length_double .

    $end            reduce using rule 20 (instruccion -> array_length_double .)
    PUNTO_COMA      reduce using rule 20 (instruccion -> array_length_double .)
    D_LLAVE         reduce using rule 20 (instruccion -> array_length_double .)


state 16

    (21) instruccion -> array_length_string .

    $end            reduce using rule 21 (instruccion -> array_length_string .)
    PUNTO_COMA      reduce using rule 21 (instruccion -> array_length_string .)
    D_LLAVE         reduce using rule 21 (instruccion -> array_length_string .)


state 17

    (22) instruccion -> array_length_boolean .

    $end            reduce using rule 22 (instruccion -> array_length_boolean .)
    PUNTO_COMA      reduce using rule 22 (instruccion -> array_length_boolean .)
    D_LLAVE         reduce using rule 22 (instruccion -> array_length_boolean .)


state 18

    (23) instruccion -> array_con_valores_int .

    $end            reduce using rule 23 (instruccion -> array_con_valores_int .)
    PUNTO_COMA      reduce using rule 23 (instruccion -> array_con_valores_int .)
    D_LLAVE         reduce using rule 23 (instruccion -> array_con_valores_int .)


state 19

    (24) instruccion -> array_con_valores_double .

    $end            reduce using rule 24 (instruccion -> array_con_valores_double .)
    PUNTO_COMA      reduce using rule 24 (instruccion -> array_con_valores_double .)
    D_LLAVE         reduce using rule 24 (instruccion -> array_con_valores_double .)


state 20

    (25) instruccion -> array_con_valores_string .

    $end            reduce using rule 25 (instruccion -> array_con_valores_string .)
    PUNTO_COMA      reduce using rule 25 (instruccion -> array_con_valores_string .)
    D_LLAVE         reduce using rule 25 (instruccion -> array_con_valores_string .)


state 21

    (26) instruccion -> array_con_valores_boolean .

    $end            reduce using rule 26 (instruccion -> array_con_valores_boolean .)
    PUNTO_COMA      reduce using rule 26 (instruccion -> array_con_valores_boolean .)
    D_LLAVE         reduce using rule 26 (instruccion -> array_con_valores_boolean .)


state 22

    (27) instruccion -> array_length_con_valores_int .

    $end            reduce using rule 27 (instruccion -> array_length_con_valores_int .)
    PUNTO_COMA      reduce using rule 27 (instruccion -> array_length_con_valores_int .)
    D_LLAVE         reduce using rule 27 (instruccion -> array_length_con_valores_int .)


state 23

    (28) instruccion -> array_length_con_valores_double .

    $end            reduce using rule 28 (instruccion -> array_length_con_valores_double .)
    PUNTO_COMA      reduce using rule 28 (instruccion -> array_length_con_valores_double .)
    D_LLAVE         reduce using rule 28 (instruccion -> array_length_con_valores_double .)


state 24

    (29) instruccion -> array_length_con_valores_string .

    $end            reduce using rule 29 (instruccion -> array_length_con_valores_string .)
    PUNTO_COMA      reduce using rule 29 (instruccion -> array_length_con_valores_string .)
    D_LLAVE         reduce using rule 29 (instruccion -> array_length_con_valores_string .)


state 25

    (30) instruccion -> array_length_con_valores_boolean .

    $end            reduce using rule 30 (instruccion -> array_length_con_valores_boolean .)
    PUNTO_COMA      reduce using rule 30 (instruccion -> array_length_con_valores_boolean .)
    D_LLAVE         reduce using rule 30 (instruccion -> array_length_con_valores_boolean .)


state 26

    (47) instruccion -> MAP . I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (49) instruccion -> MAP . I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE

    I_CORCHETE      shift and go to state 64


state 27

    (31) array_int -> I_CORCHETE . D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> I_CORCHETE . D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> I_CORCHETE . D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> I_CORCHETE . D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> I_CORCHETE . INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> I_CORCHETE . INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> I_CORCHETE . INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> I_CORCHETE . INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> I_CORCHETE . D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> I_CORCHETE . D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> I_CORCHETE . D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> I_CORCHETE . D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> I_CORCHETE . INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> I_CORCHETE . INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> I_CORCHETE . INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> I_CORCHETE . INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE

    D_CORCHETE      shift and go to state 65
    INT             shift and go to state 66


state 28

    (48) instruccion -> MAKE . I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS

    I_PARENTESIS    shift and go to state 67


state 29

    (50) instruccion -> TYPE . ID STRUCT I_LLAVE atributos D_LLAVE

    ID              shift and go to state 68


state 30

    (54) instruccion -> init_struct .

    $end            reduce using rule 54 (instruccion -> init_struct .)
    PUNTO_COMA      reduce using rule 54 (instruccion -> init_struct .)
    D_LLAVE         reduce using rule 54 (instruccion -> init_struct .)


state 31

    (74) print -> PRINTLN .

    I_PARENTESIS    reduce using rule 74 (print -> PRINTLN .)


state 32

    (75) print -> PRINTF .

    I_PARENTESIS    reduce using rule 75 (print -> PRINTF .)


state 33

    (76) print -> PRINT .

    I_PARENTESIS    reduce using rule 76 (print -> PRINT .)


state 34

    (2) instruccion -> print I_PARENTESIS . valores D_PARENTESIS
    (63) valores -> . valor
    (64) valores -> . valor COMA valores
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valores                        shift and go to state 69
    valor                          shift and go to state 70
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 35

    (3) instruccion -> VAR ID . type ASIGNACION valor
    (4) instruccion -> VAR ID . ASIGNACION valor
    (5) instruccion -> VAR ID . ASIGNACION instruccion
    (55) init_struct -> VAR ID . ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (77) type -> . BOOL
    (78) type -> . STRINGTYPE
    (79) type -> . INTEGER
    (80) type -> . FLOAT32
    (81) type -> . FLOAT64

    ASIGNACION      shift and go to state 73
    ID              shift and go to state 71
    BOOL            shift and go to state 74
    STRINGTYPE      shift and go to state 75
    INTEGER         shift and go to state 76
    FLOAT32         shift and go to state 77
    FLOAT64         shift and go to state 78

    type                           shift and go to state 72

state 36

    (6) instruccion -> ID asignacion . valor
    (7) instruccion -> ID asignacion . instruccion
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 79
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    valor                          shift and go to state 80
    instruccion                    shift and go to state 81
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 37

    (8) instruccion -> ID operador_matematico .

    $end            reduce using rule 8 (instruccion -> ID operador_matematico .)
    PUNTO_COMA      reduce using rule 8 (instruccion -> ID operador_matematico .)
    D_LLAVE         reduce using rule 8 (instruccion -> ID operador_matematico .)


state 38

    (56) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE valores D_LLAVE
    (88) asignacion -> DECLARACION_ASIGNACION .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 82
    VAR             reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    IF              reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    ELSE            reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    ELSEIF          reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    FOR             reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    MAP             reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    MAKE            reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    TYPE            reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    INT             reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    BOOLEAN         reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTLN         reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTF          reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    PRINT           reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    I_CORCHETE      reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)

  ! ID              [ reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .) ]


state 39

    (84) asignacion -> ASIGNACION .

    VAR             reduce using rule 84 (asignacion -> ASIGNACION .)
    ID              reduce using rule 84 (asignacion -> ASIGNACION .)
    IF              reduce using rule 84 (asignacion -> ASIGNACION .)
    ELSE            reduce using rule 84 (asignacion -> ASIGNACION .)
    ELSEIF          reduce using rule 84 (asignacion -> ASIGNACION .)
    FOR             reduce using rule 84 (asignacion -> ASIGNACION .)
    MAP             reduce using rule 84 (asignacion -> ASIGNACION .)
    MAKE            reduce using rule 84 (asignacion -> ASIGNACION .)
    TYPE            reduce using rule 84 (asignacion -> ASIGNACION .)
    INT             reduce using rule 84 (asignacion -> ASIGNACION .)
    DOUBLE          reduce using rule 84 (asignacion -> ASIGNACION .)
    STRING          reduce using rule 84 (asignacion -> ASIGNACION .)
    BOOLEAN         reduce using rule 84 (asignacion -> ASIGNACION .)
    PRINTLN         reduce using rule 84 (asignacion -> ASIGNACION .)
    PRINTF          reduce using rule 84 (asignacion -> ASIGNACION .)
    PRINT           reduce using rule 84 (asignacion -> ASIGNACION .)
    I_CORCHETE      reduce using rule 84 (asignacion -> ASIGNACION .)


state 40

    (85) asignacion -> ASIGNACION_ADICION .

    VAR             reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    ID              reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    IF              reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    ELSE            reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    ELSEIF          reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    FOR             reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    MAP             reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    MAKE            reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    TYPE            reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    INT             reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    DOUBLE          reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    STRING          reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    BOOLEAN         reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    PRINTLN         reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    PRINTF          reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    PRINT           reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)
    I_CORCHETE      reduce using rule 85 (asignacion -> ASIGNACION_ADICION .)


state 41

    (86) asignacion -> ASIGNACION_RESTA .

    VAR             reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    ID              reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    IF              reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    ELSE            reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    ELSEIF          reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    FOR             reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    MAP             reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    MAKE            reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    TYPE            reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    INT             reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    DOUBLE          reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    STRING          reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    BOOLEAN         reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    PRINTLN         reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    PRINTF          reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    PRINT           reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)
    I_CORCHETE      reduce using rule 86 (asignacion -> ASIGNACION_RESTA .)


state 42

    (87) asignacion -> ASIGNACION_MULTI .

    VAR             reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    ID              reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    IF              reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    ELSE            reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    ELSEIF          reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    FOR             reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    MAP             reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    MAKE            reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    TYPE            reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    INT             reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    DOUBLE          reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    STRING          reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    BOOLEAN         reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    PRINTLN         reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    PRINTF          reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    PRINT           reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)
    I_CORCHETE      reduce using rule 87 (asignacion -> ASIGNACION_MULTI .)


state 43

    (89) asignacion -> ASIGNACION_DIVISION .

    VAR             reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    ID              reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    IF              reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    ELSE            reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    ELSEIF          reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    FOR             reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    MAP             reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    MAKE            reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    TYPE            reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    INT             reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    DOUBLE          reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    STRING          reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    BOOLEAN         reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    PRINTLN         reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    PRINTF          reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    PRINT           reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)
    I_CORCHETE      reduce using rule 89 (asignacion -> ASIGNACION_DIVISION .)


state 44

    (90) asignacion -> ASIGNACION_MODULO .

    VAR             reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    ID              reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    IF              reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    ELSE            reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    ELSEIF          reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    FOR             reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    MAP             reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    MAKE            reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    TYPE            reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    INT             reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    DOUBLE          reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    STRING          reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    BOOLEAN         reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    PRINTLN         reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    PRINTF          reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    PRINT           reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)
    I_CORCHETE      reduce using rule 90 (asignacion -> ASIGNACION_MODULO .)


state 45

    (82) operador_matematico -> INCREMENTO .

    $end            reduce using rule 82 (operador_matematico -> INCREMENTO .)
    D_LLAVE         reduce using rule 82 (operador_matematico -> INCREMENTO .)
    PUNTO_COMA      reduce using rule 82 (operador_matematico -> INCREMENTO .)
    I_LLAVE         reduce using rule 82 (operador_matematico -> INCREMENTO .)


state 46

    (83) operador_matematico -> DECREMENTO .

    $end            reduce using rule 83 (operador_matematico -> DECREMENTO .)
    D_LLAVE         reduce using rule 83 (operador_matematico -> DECREMENTO .)
    PUNTO_COMA      reduce using rule 83 (operador_matematico -> DECREMENTO .)
    I_LLAVE         reduce using rule 83 (operador_matematico -> DECREMENTO .)


state 47

    (9) instruccion -> IF condicion . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 83


state 48

    (60) condicion -> valor .
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    I_LLAVE         reduce using rule 60 (condicion -> valor .)
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 49

    (61) condicion -> I_PARENTESIS . valor D_PARENTESIS
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valor                          shift and go to state 96
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 50

    (102) valor -> valor_int .

    ADICION         reduce using rule 102 (valor -> valor_int .)
    RESTA           reduce using rule 102 (valor -> valor_int .)
    MULTIPLICACION  reduce using rule 102 (valor -> valor_int .)
    DIVISION        reduce using rule 102 (valor -> valor_int .)
    MODULO          reduce using rule 102 (valor -> valor_int .)
    MENOR_IGUAL     reduce using rule 102 (valor -> valor_int .)
    IGUAL           reduce using rule 102 (valor -> valor_int .)
    DIFERENTE       reduce using rule 102 (valor -> valor_int .)
    MAYOR           reduce using rule 102 (valor -> valor_int .)
    MAYOR_IGUAL     reduce using rule 102 (valor -> valor_int .)
    MENOR           reduce using rule 102 (valor -> valor_int .)
    I_LLAVE         reduce using rule 102 (valor -> valor_int .)
    COMA            reduce using rule 102 (valor -> valor_int .)
    D_PARENTESIS    reduce using rule 102 (valor -> valor_int .)
    $end            reduce using rule 102 (valor -> valor_int .)
    PUNTO_COMA      reduce using rule 102 (valor -> valor_int .)
    D_LLAVE         reduce using rule 102 (valor -> valor_int .)
    DOS_PUNTOS      reduce using rule 102 (valor -> valor_int .)


state 51

    (103) valor -> valor_double .

    ADICION         reduce using rule 103 (valor -> valor_double .)
    RESTA           reduce using rule 103 (valor -> valor_double .)
    MULTIPLICACION  reduce using rule 103 (valor -> valor_double .)
    DIVISION        reduce using rule 103 (valor -> valor_double .)
    MODULO          reduce using rule 103 (valor -> valor_double .)
    MENOR_IGUAL     reduce using rule 103 (valor -> valor_double .)
    IGUAL           reduce using rule 103 (valor -> valor_double .)
    DIFERENTE       reduce using rule 103 (valor -> valor_double .)
    MAYOR           reduce using rule 103 (valor -> valor_double .)
    MAYOR_IGUAL     reduce using rule 103 (valor -> valor_double .)
    MENOR           reduce using rule 103 (valor -> valor_double .)
    I_LLAVE         reduce using rule 103 (valor -> valor_double .)
    COMA            reduce using rule 103 (valor -> valor_double .)
    D_PARENTESIS    reduce using rule 103 (valor -> valor_double .)
    $end            reduce using rule 103 (valor -> valor_double .)
    PUNTO_COMA      reduce using rule 103 (valor -> valor_double .)
    D_LLAVE         reduce using rule 103 (valor -> valor_double .)
    DOS_PUNTOS      reduce using rule 103 (valor -> valor_double .)


state 52

    (104) valor -> valor_string .

    ADICION         reduce using rule 104 (valor -> valor_string .)
    RESTA           reduce using rule 104 (valor -> valor_string .)
    MULTIPLICACION  reduce using rule 104 (valor -> valor_string .)
    DIVISION        reduce using rule 104 (valor -> valor_string .)
    MODULO          reduce using rule 104 (valor -> valor_string .)
    MENOR_IGUAL     reduce using rule 104 (valor -> valor_string .)
    IGUAL           reduce using rule 104 (valor -> valor_string .)
    DIFERENTE       reduce using rule 104 (valor -> valor_string .)
    MAYOR           reduce using rule 104 (valor -> valor_string .)
    MAYOR_IGUAL     reduce using rule 104 (valor -> valor_string .)
    MENOR           reduce using rule 104 (valor -> valor_string .)
    I_LLAVE         reduce using rule 104 (valor -> valor_string .)
    COMA            reduce using rule 104 (valor -> valor_string .)
    D_PARENTESIS    reduce using rule 104 (valor -> valor_string .)
    $end            reduce using rule 104 (valor -> valor_string .)
    PUNTO_COMA      reduce using rule 104 (valor -> valor_string .)
    D_LLAVE         reduce using rule 104 (valor -> valor_string .)
    DOS_PUNTOS      reduce using rule 104 (valor -> valor_string .)


state 53

    (105) valor -> valor_boolean .

    ADICION         reduce using rule 105 (valor -> valor_boolean .)
    RESTA           reduce using rule 105 (valor -> valor_boolean .)
    MULTIPLICACION  reduce using rule 105 (valor -> valor_boolean .)
    DIVISION        reduce using rule 105 (valor -> valor_boolean .)
    MODULO          reduce using rule 105 (valor -> valor_boolean .)
    MENOR_IGUAL     reduce using rule 105 (valor -> valor_boolean .)
    IGUAL           reduce using rule 105 (valor -> valor_boolean .)
    DIFERENTE       reduce using rule 105 (valor -> valor_boolean .)
    MAYOR           reduce using rule 105 (valor -> valor_boolean .)
    MAYOR_IGUAL     reduce using rule 105 (valor -> valor_boolean .)
    MENOR           reduce using rule 105 (valor -> valor_boolean .)
    I_LLAVE         reduce using rule 105 (valor -> valor_boolean .)
    COMA            reduce using rule 105 (valor -> valor_boolean .)
    D_PARENTESIS    reduce using rule 105 (valor -> valor_boolean .)
    $end            reduce using rule 105 (valor -> valor_boolean .)
    PUNTO_COMA      reduce using rule 105 (valor -> valor_boolean .)
    D_LLAVE         reduce using rule 105 (valor -> valor_boolean .)
    DOS_PUNTOS      reduce using rule 105 (valor -> valor_boolean .)


state 54

    (106) valor -> valor_variable .

    ADICION         reduce using rule 106 (valor -> valor_variable .)
    RESTA           reduce using rule 106 (valor -> valor_variable .)
    MULTIPLICACION  reduce using rule 106 (valor -> valor_variable .)
    DIVISION        reduce using rule 106 (valor -> valor_variable .)
    MODULO          reduce using rule 106 (valor -> valor_variable .)
    MENOR_IGUAL     reduce using rule 106 (valor -> valor_variable .)
    IGUAL           reduce using rule 106 (valor -> valor_variable .)
    DIFERENTE       reduce using rule 106 (valor -> valor_variable .)
    MAYOR           reduce using rule 106 (valor -> valor_variable .)
    MAYOR_IGUAL     reduce using rule 106 (valor -> valor_variable .)
    MENOR           reduce using rule 106 (valor -> valor_variable .)
    I_LLAVE         reduce using rule 106 (valor -> valor_variable .)
    COMA            reduce using rule 106 (valor -> valor_variable .)
    D_PARENTESIS    reduce using rule 106 (valor -> valor_variable .)
    $end            reduce using rule 106 (valor -> valor_variable .)
    PUNTO_COMA      reduce using rule 106 (valor -> valor_variable .)
    D_LLAVE         reduce using rule 106 (valor -> valor_variable .)
    DOS_PUNTOS      reduce using rule 106 (valor -> valor_variable .)


state 55

    (107) valor_int -> INT .

    ADICION         reduce using rule 107 (valor_int -> INT .)
    RESTA           reduce using rule 107 (valor_int -> INT .)
    MULTIPLICACION  reduce using rule 107 (valor_int -> INT .)
    DIVISION        reduce using rule 107 (valor_int -> INT .)
    MODULO          reduce using rule 107 (valor_int -> INT .)
    MENOR_IGUAL     reduce using rule 107 (valor_int -> INT .)
    IGUAL           reduce using rule 107 (valor_int -> INT .)
    DIFERENTE       reduce using rule 107 (valor_int -> INT .)
    MAYOR           reduce using rule 107 (valor_int -> INT .)
    MAYOR_IGUAL     reduce using rule 107 (valor_int -> INT .)
    MENOR           reduce using rule 107 (valor_int -> INT .)
    I_LLAVE         reduce using rule 107 (valor_int -> INT .)
    COMA            reduce using rule 107 (valor_int -> INT .)
    D_PARENTESIS    reduce using rule 107 (valor_int -> INT .)
    $end            reduce using rule 107 (valor_int -> INT .)
    PUNTO_COMA      reduce using rule 107 (valor_int -> INT .)
    D_LLAVE         reduce using rule 107 (valor_int -> INT .)
    DOS_PUNTOS      reduce using rule 107 (valor_int -> INT .)


state 56

    (108) valor_double -> DOUBLE .

    ADICION         reduce using rule 108 (valor_double -> DOUBLE .)
    RESTA           reduce using rule 108 (valor_double -> DOUBLE .)
    MULTIPLICACION  reduce using rule 108 (valor_double -> DOUBLE .)
    DIVISION        reduce using rule 108 (valor_double -> DOUBLE .)
    MODULO          reduce using rule 108 (valor_double -> DOUBLE .)
    MENOR_IGUAL     reduce using rule 108 (valor_double -> DOUBLE .)
    IGUAL           reduce using rule 108 (valor_double -> DOUBLE .)
    DIFERENTE       reduce using rule 108 (valor_double -> DOUBLE .)
    MAYOR           reduce using rule 108 (valor_double -> DOUBLE .)
    MAYOR_IGUAL     reduce using rule 108 (valor_double -> DOUBLE .)
    MENOR           reduce using rule 108 (valor_double -> DOUBLE .)
    I_LLAVE         reduce using rule 108 (valor_double -> DOUBLE .)
    COMA            reduce using rule 108 (valor_double -> DOUBLE .)
    D_PARENTESIS    reduce using rule 108 (valor_double -> DOUBLE .)
    $end            reduce using rule 108 (valor_double -> DOUBLE .)
    PUNTO_COMA      reduce using rule 108 (valor_double -> DOUBLE .)
    D_LLAVE         reduce using rule 108 (valor_double -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 108 (valor_double -> DOUBLE .)


state 57

    (109) valor_string -> STRING .

    ADICION         reduce using rule 109 (valor_string -> STRING .)
    RESTA           reduce using rule 109 (valor_string -> STRING .)
    MULTIPLICACION  reduce using rule 109 (valor_string -> STRING .)
    DIVISION        reduce using rule 109 (valor_string -> STRING .)
    MODULO          reduce using rule 109 (valor_string -> STRING .)
    MENOR_IGUAL     reduce using rule 109 (valor_string -> STRING .)
    IGUAL           reduce using rule 109 (valor_string -> STRING .)
    DIFERENTE       reduce using rule 109 (valor_string -> STRING .)
    MAYOR           reduce using rule 109 (valor_string -> STRING .)
    MAYOR_IGUAL     reduce using rule 109 (valor_string -> STRING .)
    MENOR           reduce using rule 109 (valor_string -> STRING .)
    I_LLAVE         reduce using rule 109 (valor_string -> STRING .)
    COMA            reduce using rule 109 (valor_string -> STRING .)
    D_PARENTESIS    reduce using rule 109 (valor_string -> STRING .)
    $end            reduce using rule 109 (valor_string -> STRING .)
    PUNTO_COMA      reduce using rule 109 (valor_string -> STRING .)
    D_LLAVE         reduce using rule 109 (valor_string -> STRING .)
    DOS_PUNTOS      reduce using rule 109 (valor_string -> STRING .)


state 58

    (110) valor_boolean -> BOOLEAN .

    ADICION         reduce using rule 110 (valor_boolean -> BOOLEAN .)
    RESTA           reduce using rule 110 (valor_boolean -> BOOLEAN .)
    MULTIPLICACION  reduce using rule 110 (valor_boolean -> BOOLEAN .)
    DIVISION        reduce using rule 110 (valor_boolean -> BOOLEAN .)
    MODULO          reduce using rule 110 (valor_boolean -> BOOLEAN .)
    MENOR_IGUAL     reduce using rule 110 (valor_boolean -> BOOLEAN .)
    IGUAL           reduce using rule 110 (valor_boolean -> BOOLEAN .)
    DIFERENTE       reduce using rule 110 (valor_boolean -> BOOLEAN .)
    MAYOR           reduce using rule 110 (valor_boolean -> BOOLEAN .)
    MAYOR_IGUAL     reduce using rule 110 (valor_boolean -> BOOLEAN .)
    MENOR           reduce using rule 110 (valor_boolean -> BOOLEAN .)
    I_LLAVE         reduce using rule 110 (valor_boolean -> BOOLEAN .)
    COMA            reduce using rule 110 (valor_boolean -> BOOLEAN .)
    D_PARENTESIS    reduce using rule 110 (valor_boolean -> BOOLEAN .)
    $end            reduce using rule 110 (valor_boolean -> BOOLEAN .)
    PUNTO_COMA      reduce using rule 110 (valor_boolean -> BOOLEAN .)
    D_LLAVE         reduce using rule 110 (valor_boolean -> BOOLEAN .)
    DOS_PUNTOS      reduce using rule 110 (valor_boolean -> BOOLEAN .)


state 59

    (111) valor_variable -> ID .

    ADICION         reduce using rule 111 (valor_variable -> ID .)
    RESTA           reduce using rule 111 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 111 (valor_variable -> ID .)
    DIVISION        reduce using rule 111 (valor_variable -> ID .)
    MODULO          reduce using rule 111 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 111 (valor_variable -> ID .)
    IGUAL           reduce using rule 111 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 111 (valor_variable -> ID .)
    MAYOR           reduce using rule 111 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 111 (valor_variable -> ID .)
    MENOR           reduce using rule 111 (valor_variable -> ID .)
    I_LLAVE         reduce using rule 111 (valor_variable -> ID .)
    COMA            reduce using rule 111 (valor_variable -> ID .)
    D_PARENTESIS    reduce using rule 111 (valor_variable -> ID .)
    $end            reduce using rule 111 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 111 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 111 (valor_variable -> ID .)
    DOS_PUNTOS      reduce using rule 111 (valor_variable -> ID .)


state 60

    (10) instruccion -> ELSE I_LLAVE . body D_LLAVE
    (1) body -> . instruccion
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 5
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    body                           shift and go to state 97
    instruccion                    shift and go to state 2
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 61

    (11) instruccion -> ELSEIF condicion . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 98


state 62

    (12) instruccion -> FOR ID . DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (14) instruccion -> FOR ID . COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (6) instruccion -> ID . asignacion valor
    (7) instruccion -> ID . asignacion instruccion
    (8) instruccion -> ID . operador_matematico
    (56) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (84) asignacion -> . ASIGNACION
    (85) asignacion -> . ASIGNACION_ADICION
    (86) asignacion -> . ASIGNACION_RESTA
    (87) asignacion -> . ASIGNACION_MULTI
    (88) asignacion -> . DECLARACION_ASIGNACION
    (89) asignacion -> . ASIGNACION_DIVISION
    (90) asignacion -> . ASIGNACION_MODULO
    (82) operador_matematico -> . INCREMENTO
    (83) operador_matematico -> . DECREMENTO

    DECLARACION_ASIGNACION shift and go to state 99
    COMA            shift and go to state 100
    ASIGNACION      shift and go to state 39
    ASIGNACION_ADICION shift and go to state 40
    ASIGNACION_RESTA shift and go to state 41
    ASIGNACION_MULTI shift and go to state 42
    ASIGNACION_DIVISION shift and go to state 43
    ASIGNACION_MODULO shift and go to state 44
    INCREMENTO      shift and go to state 45
    DECREMENTO      shift and go to state 46

    asignacion                     shift and go to state 36
    operador_matematico            shift and go to state 37

state 63

    (13) instruccion -> FOR instruccion . PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE

    PUNTO_COMA      shift and go to state 101


state 64

    (47) instruccion -> MAP I_CORCHETE . type D_CORCHETE type I_LLAVE D_LLAVE
    (49) instruccion -> MAP I_CORCHETE . type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (77) type -> . BOOL
    (78) type -> . STRINGTYPE
    (79) type -> . INTEGER
    (80) type -> . FLOAT32
    (81) type -> . FLOAT64

    BOOL            shift and go to state 74
    STRINGTYPE      shift and go to state 75
    INTEGER         shift and go to state 76
    FLOAT32         shift and go to state 77
    FLOAT64         shift and go to state 78

    type                           shift and go to state 102

state 65

    (31) array_int -> I_CORCHETE D_CORCHETE . INT I_LLAVE D_LLAVE
    (32) array_double -> I_CORCHETE D_CORCHETE . DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> I_CORCHETE D_CORCHETE . STRING I_LLAVE D_LLAVE
    (34) array_boolean -> I_CORCHETE D_CORCHETE . BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> I_CORCHETE D_CORCHETE . INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> I_CORCHETE D_CORCHETE . DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> I_CORCHETE D_CORCHETE . STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> I_CORCHETE D_CORCHETE . BOOLEAN I_LLAVE valores_boolean D_LLAVE

    INT             shift and go to state 103
    DOUBLE          shift and go to state 104
    STRING          shift and go to state 105
    BOOLEAN         shift and go to state 106


state 66

    (35) array_length_int -> I_CORCHETE INT . D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> I_CORCHETE INT . D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> I_CORCHETE INT . D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> I_CORCHETE INT . D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (43) array_length_con_valores_int -> I_CORCHETE INT . D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> I_CORCHETE INT . D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> I_CORCHETE INT . D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> I_CORCHETE INT . D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE

    D_CORCHETE      shift and go to state 107


state 67

    (48) instruccion -> MAKE I_PARENTESIS . MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS

    MAP             shift and go to state 108


state 68

    (50) instruccion -> TYPE ID . STRUCT I_LLAVE atributos D_LLAVE

    STRUCT          shift and go to state 109


state 69

    (2) instruccion -> print I_PARENTESIS valores . D_PARENTESIS

    D_PARENTESIS    shift and go to state 110


state 70

    (63) valores -> valor .
    (64) valores -> valor . COMA valores
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 63 (valores -> valor .)
    D_LLAVE         reduce using rule 63 (valores -> valor .)
    COMA            shift and go to state 111
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 71

    (55) init_struct -> VAR ID ID . ASIGNACION ID I_LLAVE valores D_LLAVE

    ASIGNACION      shift and go to state 112


state 72

    (3) instruccion -> VAR ID type . ASIGNACION valor

    ASIGNACION      shift and go to state 113


state 73

    (4) instruccion -> VAR ID ASIGNACION . valor
    (5) instruccion -> VAR ID ASIGNACION . instruccion
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 79
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    valor                          shift and go to state 114
    instruccion                    shift and go to state 115
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 74

    (77) type -> BOOL .

    ASIGNACION      reduce using rule 77 (type -> BOOL .)
    D_CORCHETE      reduce using rule 77 (type -> BOOL .)
    I_LLAVE         reduce using rule 77 (type -> BOOL .)
    ID              reduce using rule 77 (type -> BOOL .)
    D_LLAVE         reduce using rule 77 (type -> BOOL .)
    D_PARENTESIS    reduce using rule 77 (type -> BOOL .)


state 75

    (78) type -> STRINGTYPE .

    ASIGNACION      reduce using rule 78 (type -> STRINGTYPE .)
    D_CORCHETE      reduce using rule 78 (type -> STRINGTYPE .)
    I_LLAVE         reduce using rule 78 (type -> STRINGTYPE .)
    ID              reduce using rule 78 (type -> STRINGTYPE .)
    D_LLAVE         reduce using rule 78 (type -> STRINGTYPE .)
    D_PARENTESIS    reduce using rule 78 (type -> STRINGTYPE .)


state 76

    (79) type -> INTEGER .

    ASIGNACION      reduce using rule 79 (type -> INTEGER .)
    D_CORCHETE      reduce using rule 79 (type -> INTEGER .)
    I_LLAVE         reduce using rule 79 (type -> INTEGER .)
    ID              reduce using rule 79 (type -> INTEGER .)
    D_LLAVE         reduce using rule 79 (type -> INTEGER .)
    D_PARENTESIS    reduce using rule 79 (type -> INTEGER .)


state 77

    (80) type -> FLOAT32 .

    ASIGNACION      reduce using rule 80 (type -> FLOAT32 .)
    D_CORCHETE      reduce using rule 80 (type -> FLOAT32 .)
    I_LLAVE         reduce using rule 80 (type -> FLOAT32 .)
    ID              reduce using rule 80 (type -> FLOAT32 .)
    D_LLAVE         reduce using rule 80 (type -> FLOAT32 .)
    D_PARENTESIS    reduce using rule 80 (type -> FLOAT32 .)


state 78

    (81) type -> FLOAT64 .

    ASIGNACION      reduce using rule 81 (type -> FLOAT64 .)
    D_CORCHETE      reduce using rule 81 (type -> FLOAT64 .)
    I_LLAVE         reduce using rule 81 (type -> FLOAT64 .)
    ID              reduce using rule 81 (type -> FLOAT64 .)
    D_LLAVE         reduce using rule 81 (type -> FLOAT64 .)
    D_PARENTESIS    reduce using rule 81 (type -> FLOAT64 .)


state 79

    (6) instruccion -> ID . asignacion valor
    (7) instruccion -> ID . asignacion instruccion
    (8) instruccion -> ID . operador_matematico
    (111) valor_variable -> ID .
    (56) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (84) asignacion -> . ASIGNACION
    (85) asignacion -> . ASIGNACION_ADICION
    (86) asignacion -> . ASIGNACION_RESTA
    (87) asignacion -> . ASIGNACION_MULTI
    (88) asignacion -> . DECLARACION_ASIGNACION
    (89) asignacion -> . ASIGNACION_DIVISION
    (90) asignacion -> . ASIGNACION_MODULO
    (82) operador_matematico -> . INCREMENTO
    (83) operador_matematico -> . DECREMENTO

    ADICION         reduce using rule 111 (valor_variable -> ID .)
    RESTA           reduce using rule 111 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 111 (valor_variable -> ID .)
    DIVISION        reduce using rule 111 (valor_variable -> ID .)
    MODULO          reduce using rule 111 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 111 (valor_variable -> ID .)
    IGUAL           reduce using rule 111 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 111 (valor_variable -> ID .)
    MAYOR           reduce using rule 111 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 111 (valor_variable -> ID .)
    MENOR           reduce using rule 111 (valor_variable -> ID .)
    $end            reduce using rule 111 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 111 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 111 (valor_variable -> ID .)
    DECLARACION_ASIGNACION shift and go to state 38
    ASIGNACION      shift and go to state 39
    ASIGNACION_ADICION shift and go to state 40
    ASIGNACION_RESTA shift and go to state 41
    ASIGNACION_MULTI shift and go to state 42
    ASIGNACION_DIVISION shift and go to state 43
    ASIGNACION_MODULO shift and go to state 44
    INCREMENTO      shift and go to state 45
    DECREMENTO      shift and go to state 46

    asignacion                     shift and go to state 36
    operador_matematico            shift and go to state 37

state 80

    (6) instruccion -> ID asignacion valor .
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    $end            reduce using rule 6 (instruccion -> ID asignacion valor .)
    PUNTO_COMA      reduce using rule 6 (instruccion -> ID asignacion valor .)
    D_LLAVE         reduce using rule 6 (instruccion -> ID asignacion valor .)
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 81

    (7) instruccion -> ID asignacion instruccion .

    $end            reduce using rule 7 (instruccion -> ID asignacion instruccion .)
    PUNTO_COMA      reduce using rule 7 (instruccion -> ID asignacion instruccion .)
    D_LLAVE         reduce using rule 7 (instruccion -> ID asignacion instruccion .)


state 82

    (56) init_struct -> ID DECLARACION_ASIGNACION ID . I_LLAVE valores D_LLAVE

    I_LLAVE         shift and go to state 116


state 83

    (9) instruccion -> IF condicion I_LLAVE . body D_LLAVE
    (1) body -> . instruccion
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 5
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    body                           shift and go to state 117
    instruccion                    shift and go to state 2
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 84

    (73) valor -> valor operacion_binaria . valor
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valor                          shift and go to state 118
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 85

    (91) operacion_binaria -> ADICION .

    INT             reduce using rule 91 (operacion_binaria -> ADICION .)
    DOUBLE          reduce using rule 91 (operacion_binaria -> ADICION .)
    STRING          reduce using rule 91 (operacion_binaria -> ADICION .)
    BOOLEAN         reduce using rule 91 (operacion_binaria -> ADICION .)
    ID              reduce using rule 91 (operacion_binaria -> ADICION .)


state 86

    (92) operacion_binaria -> RESTA .

    INT             reduce using rule 92 (operacion_binaria -> RESTA .)
    DOUBLE          reduce using rule 92 (operacion_binaria -> RESTA .)
    STRING          reduce using rule 92 (operacion_binaria -> RESTA .)
    BOOLEAN         reduce using rule 92 (operacion_binaria -> RESTA .)
    ID              reduce using rule 92 (operacion_binaria -> RESTA .)


state 87

    (93) operacion_binaria -> MULTIPLICACION .

    INT             reduce using rule 93 (operacion_binaria -> MULTIPLICACION .)
    DOUBLE          reduce using rule 93 (operacion_binaria -> MULTIPLICACION .)
    STRING          reduce using rule 93 (operacion_binaria -> MULTIPLICACION .)
    BOOLEAN         reduce using rule 93 (operacion_binaria -> MULTIPLICACION .)
    ID              reduce using rule 93 (operacion_binaria -> MULTIPLICACION .)


state 88

    (94) operacion_binaria -> DIVISION .

    INT             reduce using rule 94 (operacion_binaria -> DIVISION .)
    DOUBLE          reduce using rule 94 (operacion_binaria -> DIVISION .)
    STRING          reduce using rule 94 (operacion_binaria -> DIVISION .)
    BOOLEAN         reduce using rule 94 (operacion_binaria -> DIVISION .)
    ID              reduce using rule 94 (operacion_binaria -> DIVISION .)


state 89

    (95) operacion_binaria -> MODULO .

    INT             reduce using rule 95 (operacion_binaria -> MODULO .)
    DOUBLE          reduce using rule 95 (operacion_binaria -> MODULO .)
    STRING          reduce using rule 95 (operacion_binaria -> MODULO .)
    BOOLEAN         reduce using rule 95 (operacion_binaria -> MODULO .)
    ID              reduce using rule 95 (operacion_binaria -> MODULO .)


state 90

    (96) operacion_binaria -> MENOR_IGUAL .

    INT             reduce using rule 96 (operacion_binaria -> MENOR_IGUAL .)
    DOUBLE          reduce using rule 96 (operacion_binaria -> MENOR_IGUAL .)
    STRING          reduce using rule 96 (operacion_binaria -> MENOR_IGUAL .)
    BOOLEAN         reduce using rule 96 (operacion_binaria -> MENOR_IGUAL .)
    ID              reduce using rule 96 (operacion_binaria -> MENOR_IGUAL .)


state 91

    (97) operacion_binaria -> IGUAL .

    INT             reduce using rule 97 (operacion_binaria -> IGUAL .)
    DOUBLE          reduce using rule 97 (operacion_binaria -> IGUAL .)
    STRING          reduce using rule 97 (operacion_binaria -> IGUAL .)
    BOOLEAN         reduce using rule 97 (operacion_binaria -> IGUAL .)
    ID              reduce using rule 97 (operacion_binaria -> IGUAL .)


state 92

    (98) operacion_binaria -> DIFERENTE .

    INT             reduce using rule 98 (operacion_binaria -> DIFERENTE .)
    DOUBLE          reduce using rule 98 (operacion_binaria -> DIFERENTE .)
    STRING          reduce using rule 98 (operacion_binaria -> DIFERENTE .)
    BOOLEAN         reduce using rule 98 (operacion_binaria -> DIFERENTE .)
    ID              reduce using rule 98 (operacion_binaria -> DIFERENTE .)


state 93

    (99) operacion_binaria -> MAYOR .

    INT             reduce using rule 99 (operacion_binaria -> MAYOR .)
    DOUBLE          reduce using rule 99 (operacion_binaria -> MAYOR .)
    STRING          reduce using rule 99 (operacion_binaria -> MAYOR .)
    BOOLEAN         reduce using rule 99 (operacion_binaria -> MAYOR .)
    ID              reduce using rule 99 (operacion_binaria -> MAYOR .)


state 94

    (100) operacion_binaria -> MAYOR_IGUAL .

    INT             reduce using rule 100 (operacion_binaria -> MAYOR_IGUAL .)
    DOUBLE          reduce using rule 100 (operacion_binaria -> MAYOR_IGUAL .)
    STRING          reduce using rule 100 (operacion_binaria -> MAYOR_IGUAL .)
    BOOLEAN         reduce using rule 100 (operacion_binaria -> MAYOR_IGUAL .)
    ID              reduce using rule 100 (operacion_binaria -> MAYOR_IGUAL .)


state 95

    (101) operacion_binaria -> MENOR .

    INT             reduce using rule 101 (operacion_binaria -> MENOR .)
    DOUBLE          reduce using rule 101 (operacion_binaria -> MENOR .)
    STRING          reduce using rule 101 (operacion_binaria -> MENOR .)
    BOOLEAN         reduce using rule 101 (operacion_binaria -> MENOR .)
    ID              reduce using rule 101 (operacion_binaria -> MENOR .)


state 96

    (61) condicion -> I_PARENTESIS valor . D_PARENTESIS
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    D_PARENTESIS    shift and go to state 119
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 97

    (10) instruccion -> ELSE I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 120


state 98

    (11) instruccion -> ELSEIF condicion I_LLAVE . body D_LLAVE
    (1) body -> . instruccion
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 5
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    body                           shift and go to state 121
    instruccion                    shift and go to state 2
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 99

    (12) instruccion -> FOR ID DECLARACION_ASIGNACION . RANGE ID I_LLAVE body D_LLAVE
    (56) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE valores D_LLAVE
    (88) asignacion -> DECLARACION_ASIGNACION .

  ! shift/reduce conflict for ID resolved as shift
    RANGE           shift and go to state 122
    ID              shift and go to state 82
    VAR             reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    IF              reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    ELSE            reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    ELSEIF          reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    FOR             reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    MAP             reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    MAKE            reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    TYPE            reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    INT             reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    BOOLEAN         reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTLN         reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTF          reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    PRINT           reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)
    I_CORCHETE      reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .)

  ! ID              [ reduce using rule 88 (asignacion -> DECLARACION_ASIGNACION .) ]


state 100

    (14) instruccion -> FOR ID COMA . ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE

    ID              shift and go to state 123


state 101

    (13) instruccion -> FOR instruccion PUNTO_COMA . valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valor                          shift and go to state 124
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 102

    (47) instruccion -> MAP I_CORCHETE type . D_CORCHETE type I_LLAVE D_LLAVE
    (49) instruccion -> MAP I_CORCHETE type . D_CORCHETE type I_LLAVE claves_valores D_LLAVE

    D_CORCHETE      shift and go to state 125


state 103

    (31) array_int -> I_CORCHETE D_CORCHETE INT . I_LLAVE D_LLAVE
    (39) array_con_valores_int -> I_CORCHETE D_CORCHETE INT . I_LLAVE valores_int D_LLAVE

    I_LLAVE         shift and go to state 126


state 104

    (32) array_double -> I_CORCHETE D_CORCHETE DOUBLE . I_LLAVE D_LLAVE
    (40) array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE . I_LLAVE valores_double D_LLAVE

    I_LLAVE         shift and go to state 127


state 105

    (33) array_string -> I_CORCHETE D_CORCHETE STRING . I_LLAVE D_LLAVE
    (41) array_con_valores_string -> I_CORCHETE D_CORCHETE STRING . I_LLAVE valores_string D_LLAVE

    I_LLAVE         shift and go to state 128


state 106

    (34) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN . I_LLAVE D_LLAVE
    (42) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN . I_LLAVE valores_boolean D_LLAVE

    I_LLAVE         shift and go to state 129


state 107

    (35) array_length_int -> I_CORCHETE INT D_CORCHETE . INT I_LLAVE D_LLAVE
    (36) array_length_double -> I_CORCHETE INT D_CORCHETE . DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> I_CORCHETE INT D_CORCHETE . STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> I_CORCHETE INT D_CORCHETE . BOOLEAN I_LLAVE D_LLAVE
    (43) array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE . INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE . DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE . STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE . BOOLEAN I_LLAVE valores_boolean D_LLAVE

    INT             shift and go to state 130
    DOUBLE          shift and go to state 131
    STRING          shift and go to state 132
    BOOLEAN         shift and go to state 133


state 108

    (48) instruccion -> MAKE I_PARENTESIS MAP . I_CORCHETE type D_CORCHETE type D_PARENTESIS

    I_CORCHETE      shift and go to state 134


state 109

    (50) instruccion -> TYPE ID STRUCT . I_LLAVE atributos D_LLAVE

    I_LLAVE         shift and go to state 135


state 110

    (2) instruccion -> print I_PARENTESIS valores D_PARENTESIS .

    $end            reduce using rule 2 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 2 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    D_LLAVE         reduce using rule 2 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)


state 111

    (64) valores -> valor COMA . valores
    (63) valores -> . valor
    (64) valores -> . valor COMA valores
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valor                          shift and go to state 70
    valores                        shift and go to state 136
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 112

    (55) init_struct -> VAR ID ID ASIGNACION . ID I_LLAVE valores D_LLAVE

    ID              shift and go to state 137


state 113

    (3) instruccion -> VAR ID type ASIGNACION . valor
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valor                          shift and go to state 138
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 114

    (4) instruccion -> VAR ID ASIGNACION valor .
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    $end            reduce using rule 4 (instruccion -> VAR ID ASIGNACION valor .)
    PUNTO_COMA      reduce using rule 4 (instruccion -> VAR ID ASIGNACION valor .)
    D_LLAVE         reduce using rule 4 (instruccion -> VAR ID ASIGNACION valor .)
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 115

    (5) instruccion -> VAR ID ASIGNACION instruccion .

    $end            reduce using rule 5 (instruccion -> VAR ID ASIGNACION instruccion .)
    PUNTO_COMA      reduce using rule 5 (instruccion -> VAR ID ASIGNACION instruccion .)
    D_LLAVE         reduce using rule 5 (instruccion -> VAR ID ASIGNACION instruccion .)


state 116

    (56) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE . valores D_LLAVE
    (63) valores -> . valor
    (64) valores -> . valor COMA valores
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valores                        shift and go to state 139
    valor                          shift and go to state 70
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 117

    (9) instruccion -> IF condicion I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 140


state 118

    (73) valor -> valor operacion_binaria valor .
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    I_LLAVE         reduce using rule 73 (valor -> valor operacion_binaria valor .)
    COMA            reduce using rule 73 (valor -> valor operacion_binaria valor .)
    D_PARENTESIS    reduce using rule 73 (valor -> valor operacion_binaria valor .)
    $end            reduce using rule 73 (valor -> valor operacion_binaria valor .)
    PUNTO_COMA      reduce using rule 73 (valor -> valor operacion_binaria valor .)
    D_LLAVE         reduce using rule 73 (valor -> valor operacion_binaria valor .)
    DOS_PUNTOS      reduce using rule 73 (valor -> valor operacion_binaria valor .)
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

  ! ADICION         [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! RESTA           [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! MULTIPLICACION  [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! DIVISION        [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! MODULO          [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! IGUAL           [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! DIFERENTE       [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR           [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]
  ! MENOR           [ reduce using rule 73 (valor -> valor operacion_binaria valor .) ]

    operacion_binaria              shift and go to state 84

state 119

    (61) condicion -> I_PARENTESIS valor D_PARENTESIS .

    I_LLAVE         reduce using rule 61 (condicion -> I_PARENTESIS valor D_PARENTESIS .)


state 120

    (10) instruccion -> ELSE I_LLAVE body D_LLAVE .

    $end            reduce using rule 10 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 10 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 10 (instruccion -> ELSE I_LLAVE body D_LLAVE .)


state 121

    (11) instruccion -> ELSEIF condicion I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 141


state 122

    (12) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE . ID I_LLAVE body D_LLAVE

    ID              shift and go to state 142


state 123

    (14) instruccion -> FOR ID COMA ID . DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE

    DECLARACION_ASIGNACION shift and go to state 143


state 124

    (13) instruccion -> FOR instruccion PUNTO_COMA valor . PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    PUNTO_COMA      shift and go to state 144
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 125

    (47) instruccion -> MAP I_CORCHETE type D_CORCHETE . type I_LLAVE D_LLAVE
    (49) instruccion -> MAP I_CORCHETE type D_CORCHETE . type I_LLAVE claves_valores D_LLAVE
    (77) type -> . BOOL
    (78) type -> . STRINGTYPE
    (79) type -> . INTEGER
    (80) type -> . FLOAT32
    (81) type -> . FLOAT64

    BOOL            shift and go to state 74
    STRINGTYPE      shift and go to state 75
    INTEGER         shift and go to state 76
    FLOAT32         shift and go to state 77
    FLOAT64         shift and go to state 78

    type                           shift and go to state 145

state 126

    (31) array_int -> I_CORCHETE D_CORCHETE INT I_LLAVE . D_LLAVE
    (39) array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE . valores_int D_LLAVE
    (65) valores_int -> . valor_int
    (66) valores_int -> . valor_int COMA valores_int
    (107) valor_int -> . INT

    D_LLAVE         shift and go to state 146
    INT             shift and go to state 55

    valores_int                    shift and go to state 147
    valor_int                      shift and go to state 148

state 127

    (32) array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE . D_LLAVE
    (40) array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE . valores_double D_LLAVE
    (67) valores_double -> . valor_double
    (68) valores_double -> . valor_double COMA valores_double
    (108) valor_double -> . DOUBLE

    D_LLAVE         shift and go to state 149
    DOUBLE          shift and go to state 56

    valores_double                 shift and go to state 150
    valor_double                   shift and go to state 151

state 128

    (33) array_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE . D_LLAVE
    (41) array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE . valores_string D_LLAVE
    (69) valores_string -> . valor_string
    (70) valores_string -> . valor_string COMA valores_string
    (109) valor_string -> . STRING

    D_LLAVE         shift and go to state 152
    STRING          shift and go to state 57

    valores_string                 shift and go to state 153
    valor_string                   shift and go to state 154

state 129

    (34) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE . D_LLAVE
    (42) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE . valores_boolean D_LLAVE
    (71) valores_boolean -> . valor_boolean
    (72) valores_boolean -> . valor_boolean COMA valores_boolean
    (110) valor_boolean -> . BOOLEAN

    D_LLAVE         shift and go to state 155
    BOOLEAN         shift and go to state 58

    valores_boolean                shift and go to state 156
    valor_boolean                  shift and go to state 157

state 130

    (35) array_length_int -> I_CORCHETE INT D_CORCHETE INT . I_LLAVE D_LLAVE
    (43) array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT . I_LLAVE valores_int D_LLAVE

    I_LLAVE         shift and go to state 158


state 131

    (36) array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE . I_LLAVE D_LLAVE
    (44) array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE . I_LLAVE valores_double D_LLAVE

    I_LLAVE         shift and go to state 159


state 132

    (37) array_length_string -> I_CORCHETE INT D_CORCHETE STRING . I_LLAVE D_LLAVE
    (45) array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING . I_LLAVE valores_string D_LLAVE

    I_LLAVE         shift and go to state 160


state 133

    (38) array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN . I_LLAVE D_LLAVE
    (46) array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN . I_LLAVE valores_boolean D_LLAVE

    I_LLAVE         shift and go to state 161


state 134

    (48) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE . type D_CORCHETE type D_PARENTESIS
    (77) type -> . BOOL
    (78) type -> . STRINGTYPE
    (79) type -> . INTEGER
    (80) type -> . FLOAT32
    (81) type -> . FLOAT64

    BOOL            shift and go to state 74
    STRINGTYPE      shift and go to state 75
    INTEGER         shift and go to state 76
    FLOAT32         shift and go to state 77
    FLOAT64         shift and go to state 78

    type                           shift and go to state 162

state 135

    (50) instruccion -> TYPE ID STRUCT I_LLAVE . atributos D_LLAVE
    (51) atributos -> . atributo
    (52) atributos -> . atributo atributos
    (53) atributo -> . ID type

    ID              shift and go to state 163

    atributos                      shift and go to state 164
    atributo                       shift and go to state 165

state 136

    (64) valores -> valor COMA valores .

    D_PARENTESIS    reduce using rule 64 (valores -> valor COMA valores .)
    D_LLAVE         reduce using rule 64 (valores -> valor COMA valores .)


state 137

    (55) init_struct -> VAR ID ID ASIGNACION ID . I_LLAVE valores D_LLAVE

    I_LLAVE         shift and go to state 166


state 138

    (3) instruccion -> VAR ID type ASIGNACION valor .
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    $end            reduce using rule 3 (instruccion -> VAR ID type ASIGNACION valor .)
    PUNTO_COMA      reduce using rule 3 (instruccion -> VAR ID type ASIGNACION valor .)
    D_LLAVE         reduce using rule 3 (instruccion -> VAR ID type ASIGNACION valor .)
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 139

    (56) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 167


state 140

    (9) instruccion -> IF condicion I_LLAVE body D_LLAVE .

    $end            reduce using rule 9 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 9 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 9 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)


state 141

    (11) instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .

    $end            reduce using rule 11 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 11 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 11 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)


state 142

    (12) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 168


state 143

    (14) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION . RANGE ID I_LLAVE body D_LLAVE

    RANGE           shift and go to state 169


state 144

    (13) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA . ID operador_matematico I_LLAVE body D_LLAVE

    ID              shift and go to state 170


state 145

    (47) instruccion -> MAP I_CORCHETE type D_CORCHETE type . I_LLAVE D_LLAVE
    (49) instruccion -> MAP I_CORCHETE type D_CORCHETE type . I_LLAVE claves_valores D_LLAVE

    I_LLAVE         shift and go to state 171


state 146

    (31) array_int -> I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE .

    $end            reduce using rule 31 (array_int -> I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 31 (array_int -> I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 31 (array_int -> I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE .)


state 147

    (39) array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE valores_int . D_LLAVE

    D_LLAVE         shift and go to state 172


state 148

    (65) valores_int -> valor_int .
    (66) valores_int -> valor_int . COMA valores_int

    D_LLAVE         reduce using rule 65 (valores_int -> valor_int .)
    COMA            shift and go to state 173


state 149

    (32) array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE .

    $end            reduce using rule 32 (array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 32 (array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 32 (array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE .)


state 150

    (40) array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double . D_LLAVE

    D_LLAVE         shift and go to state 174


state 151

    (67) valores_double -> valor_double .
    (68) valores_double -> valor_double . COMA valores_double

    D_LLAVE         reduce using rule 67 (valores_double -> valor_double .)
    COMA            shift and go to state 175


state 152

    (33) array_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE .

    $end            reduce using rule 33 (array_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 33 (array_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 33 (array_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE .)


state 153

    (41) array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string . D_LLAVE

    D_LLAVE         shift and go to state 176


state 154

    (69) valores_string -> valor_string .
    (70) valores_string -> valor_string . COMA valores_string

    D_LLAVE         reduce using rule 69 (valores_string -> valor_string .)
    COMA            shift and go to state 177


state 155

    (34) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .

    $end            reduce using rule 34 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 34 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 34 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)


state 156

    (42) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean . D_LLAVE

    D_LLAVE         shift and go to state 178


state 157

    (71) valores_boolean -> valor_boolean .
    (72) valores_boolean -> valor_boolean . COMA valores_boolean

    D_LLAVE         reduce using rule 71 (valores_boolean -> valor_boolean .)
    COMA            shift and go to state 179


state 158

    (35) array_length_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE . D_LLAVE
    (43) array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE . valores_int D_LLAVE
    (65) valores_int -> . valor_int
    (66) valores_int -> . valor_int COMA valores_int
    (107) valor_int -> . INT

    D_LLAVE         shift and go to state 180
    INT             shift and go to state 55

    valores_int                    shift and go to state 181
    valor_int                      shift and go to state 148

state 159

    (36) array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE . D_LLAVE
    (44) array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE . valores_double D_LLAVE
    (67) valores_double -> . valor_double
    (68) valores_double -> . valor_double COMA valores_double
    (108) valor_double -> . DOUBLE

    D_LLAVE         shift and go to state 182
    DOUBLE          shift and go to state 56

    valores_double                 shift and go to state 183
    valor_double                   shift and go to state 151

state 160

    (37) array_length_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE . D_LLAVE
    (45) array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE . valores_string D_LLAVE
    (69) valores_string -> . valor_string
    (70) valores_string -> . valor_string COMA valores_string
    (109) valor_string -> . STRING

    D_LLAVE         shift and go to state 184
    STRING          shift and go to state 57

    valores_string                 shift and go to state 185
    valor_string                   shift and go to state 154

state 161

    (38) array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE . D_LLAVE
    (46) array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE . valores_boolean D_LLAVE
    (71) valores_boolean -> . valor_boolean
    (72) valores_boolean -> . valor_boolean COMA valores_boolean
    (110) valor_boolean -> . BOOLEAN

    D_LLAVE         shift and go to state 186
    BOOLEAN         shift and go to state 58

    valores_boolean                shift and go to state 187
    valor_boolean                  shift and go to state 157

state 162

    (48) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type . D_CORCHETE type D_PARENTESIS

    D_CORCHETE      shift and go to state 188


state 163

    (53) atributo -> ID . type
    (77) type -> . BOOL
    (78) type -> . STRINGTYPE
    (79) type -> . INTEGER
    (80) type -> . FLOAT32
    (81) type -> . FLOAT64

    BOOL            shift and go to state 74
    STRINGTYPE      shift and go to state 75
    INTEGER         shift and go to state 76
    FLOAT32         shift and go to state 77
    FLOAT64         shift and go to state 78

    type                           shift and go to state 189

state 164

    (50) instruccion -> TYPE ID STRUCT I_LLAVE atributos . D_LLAVE

    D_LLAVE         shift and go to state 190


state 165

    (51) atributos -> atributo .
    (52) atributos -> atributo . atributos
    (51) atributos -> . atributo
    (52) atributos -> . atributo atributos
    (53) atributo -> . ID type

    D_LLAVE         reduce using rule 51 (atributos -> atributo .)
    ID              shift and go to state 163

    atributo                       shift and go to state 165
    atributos                      shift and go to state 191

state 166

    (55) init_struct -> VAR ID ID ASIGNACION ID I_LLAVE . valores D_LLAVE
    (63) valores -> . valor
    (64) valores -> . valor COMA valores
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valores                        shift and go to state 192
    valor                          shift and go to state 70
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 167

    (56) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .

    $end            reduce using rule 56 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 56 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    D_LLAVE         reduce using rule 56 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)


state 168

    (12) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE . body D_LLAVE
    (1) body -> . instruccion
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 5
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    body                           shift and go to state 193
    instruccion                    shift and go to state 2
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 169

    (14) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE . ID I_LLAVE body D_LLAVE

    ID              shift and go to state 194


state 170

    (13) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID . operador_matematico I_LLAVE body D_LLAVE
    (82) operador_matematico -> . INCREMENTO
    (83) operador_matematico -> . DECREMENTO

    INCREMENTO      shift and go to state 45
    DECREMENTO      shift and go to state 46

    operador_matematico            shift and go to state 195

state 171

    (47) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE . D_LLAVE
    (49) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE . claves_valores D_LLAVE
    (58) claves_valores -> . clave_valor
    (59) claves_valores -> . clave_valor COMA claves_valores
    (57) clave_valor -> . valor DOS_PUNTOS valor
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    D_LLAVE         shift and go to state 196
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    claves_valores                 shift and go to state 197
    clave_valor                    shift and go to state 198
    valor                          shift and go to state 199
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 172

    (39) array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE .

    $end            reduce using rule 39 (array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE .)
    PUNTO_COMA      reduce using rule 39 (array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE .)
    D_LLAVE         reduce using rule 39 (array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE .)


state 173

    (66) valores_int -> valor_int COMA . valores_int
    (65) valores_int -> . valor_int
    (66) valores_int -> . valor_int COMA valores_int
    (107) valor_int -> . INT

    INT             shift and go to state 55

    valor_int                      shift and go to state 148
    valores_int                    shift and go to state 200

state 174

    (40) array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE .

    $end            reduce using rule 40 (array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE .)
    PUNTO_COMA      reduce using rule 40 (array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE .)
    D_LLAVE         reduce using rule 40 (array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE .)


state 175

    (68) valores_double -> valor_double COMA . valores_double
    (67) valores_double -> . valor_double
    (68) valores_double -> . valor_double COMA valores_double
    (108) valor_double -> . DOUBLE

    DOUBLE          shift and go to state 56

    valor_double                   shift and go to state 151
    valores_double                 shift and go to state 201

state 176

    (41) array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE .

    $end            reduce using rule 41 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE .)
    PUNTO_COMA      reduce using rule 41 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE .)
    D_LLAVE         reduce using rule 41 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE .)


state 177

    (70) valores_string -> valor_string COMA . valores_string
    (69) valores_string -> . valor_string
    (70) valores_string -> . valor_string COMA valores_string
    (109) valor_string -> . STRING

    STRING          shift and go to state 57

    valor_string                   shift and go to state 154
    valores_string                 shift and go to state 202

state 178

    (42) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .

    $end            reduce using rule 42 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PUNTO_COMA      reduce using rule 42 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    D_LLAVE         reduce using rule 42 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)


state 179

    (72) valores_boolean -> valor_boolean COMA . valores_boolean
    (71) valores_boolean -> . valor_boolean
    (72) valores_boolean -> . valor_boolean COMA valores_boolean
    (110) valor_boolean -> . BOOLEAN

    BOOLEAN         shift and go to state 58

    valor_boolean                  shift and go to state 157
    valores_boolean                shift and go to state 203

state 180

    (35) array_length_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE .

    $end            reduce using rule 35 (array_length_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 35 (array_length_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 35 (array_length_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE .)


state 181

    (43) array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int . D_LLAVE

    D_LLAVE         shift and go to state 204


state 182

    (36) array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE .

    $end            reduce using rule 36 (array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 36 (array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 36 (array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE .)


state 183

    (44) array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double . D_LLAVE

    D_LLAVE         shift and go to state 205


state 184

    (37) array_length_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE .

    $end            reduce using rule 37 (array_length_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 37 (array_length_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 37 (array_length_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE .)


state 185

    (45) array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string . D_LLAVE

    D_LLAVE         shift and go to state 206


state 186

    (38) array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .

    $end            reduce using rule 38 (array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 38 (array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 38 (array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)


state 187

    (46) array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean . D_LLAVE

    D_LLAVE         shift and go to state 207


state 188

    (48) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE . type D_PARENTESIS
    (77) type -> . BOOL
    (78) type -> . STRINGTYPE
    (79) type -> . INTEGER
    (80) type -> . FLOAT32
    (81) type -> . FLOAT64

    BOOL            shift and go to state 74
    STRINGTYPE      shift and go to state 75
    INTEGER         shift and go to state 76
    FLOAT32         shift and go to state 77
    FLOAT64         shift and go to state 78

    type                           shift and go to state 208

state 189

    (53) atributo -> ID type .

    ID              reduce using rule 53 (atributo -> ID type .)
    D_LLAVE         reduce using rule 53 (atributo -> ID type .)


state 190

    (50) instruccion -> TYPE ID STRUCT I_LLAVE atributos D_LLAVE .

    $end            reduce using rule 50 (instruccion -> TYPE ID STRUCT I_LLAVE atributos D_LLAVE .)
    PUNTO_COMA      reduce using rule 50 (instruccion -> TYPE ID STRUCT I_LLAVE atributos D_LLAVE .)
    D_LLAVE         reduce using rule 50 (instruccion -> TYPE ID STRUCT I_LLAVE atributos D_LLAVE .)


state 191

    (52) atributos -> atributo atributos .

    D_LLAVE         reduce using rule 52 (atributos -> atributo atributos .)


state 192

    (55) init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 209


state 193

    (12) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 210


state 194

    (14) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 211


state 195

    (13) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 212


state 196

    (47) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .

    $end            reduce using rule 47 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 47 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 47 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)


state 197

    (49) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores . D_LLAVE

    D_LLAVE         shift and go to state 213


state 198

    (58) claves_valores -> clave_valor .
    (59) claves_valores -> clave_valor . COMA claves_valores

    D_LLAVE         reduce using rule 58 (claves_valores -> clave_valor .)
    COMA            shift and go to state 214


state 199

    (57) clave_valor -> valor . DOS_PUNTOS valor
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    DOS_PUNTOS      shift and go to state 215
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 200

    (66) valores_int -> valor_int COMA valores_int .

    D_LLAVE         reduce using rule 66 (valores_int -> valor_int COMA valores_int .)


state 201

    (68) valores_double -> valor_double COMA valores_double .

    D_LLAVE         reduce using rule 68 (valores_double -> valor_double COMA valores_double .)


state 202

    (70) valores_string -> valor_string COMA valores_string .

    D_LLAVE         reduce using rule 70 (valores_string -> valor_string COMA valores_string .)


state 203

    (72) valores_boolean -> valor_boolean COMA valores_boolean .

    D_LLAVE         reduce using rule 72 (valores_boolean -> valor_boolean COMA valores_boolean .)


state 204

    (43) array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE .

    $end            reduce using rule 43 (array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE .)
    PUNTO_COMA      reduce using rule 43 (array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE .)
    D_LLAVE         reduce using rule 43 (array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE .)


state 205

    (44) array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE .

    $end            reduce using rule 44 (array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE .)
    PUNTO_COMA      reduce using rule 44 (array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE .)
    D_LLAVE         reduce using rule 44 (array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE .)


state 206

    (45) array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE .

    $end            reduce using rule 45 (array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE .)
    PUNTO_COMA      reduce using rule 45 (array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE .)
    D_LLAVE         reduce using rule 45 (array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE .)


state 207

    (46) array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .

    $end            reduce using rule 46 (array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PUNTO_COMA      reduce using rule 46 (array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    D_LLAVE         reduce using rule 46 (array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)


state 208

    (48) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type . D_PARENTESIS

    D_PARENTESIS    shift and go to state 216


state 209

    (55) init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .

    $end            reduce using rule 55 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 55 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    D_LLAVE         reduce using rule 55 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)


state 210

    (12) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .

    $end            reduce using rule 12 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 12 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 12 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)


state 211

    (14) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE . body D_LLAVE
    (1) body -> . instruccion
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 5
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    body                           shift and go to state 217
    instruccion                    shift and go to state 2
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 212

    (13) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE . body D_LLAVE
    (1) body -> . instruccion
    (2) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (3) instruccion -> . VAR ID type ASIGNACION valor
    (4) instruccion -> . VAR ID ASIGNACION valor
    (5) instruccion -> . VAR ID ASIGNACION instruccion
    (6) instruccion -> . ID asignacion valor
    (7) instruccion -> . ID asignacion instruccion
    (8) instruccion -> . ID operador_matematico
    (9) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (10) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (11) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (12) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (14) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (15) instruccion -> . array_int
    (16) instruccion -> . array_double
    (17) instruccion -> . array_string
    (18) instruccion -> . array_boolean
    (19) instruccion -> . array_length_int
    (20) instruccion -> . array_length_double
    (21) instruccion -> . array_length_string
    (22) instruccion -> . array_length_boolean
    (23) instruccion -> . array_con_valores_int
    (24) instruccion -> . array_con_valores_double
    (25) instruccion -> . array_con_valores_string
    (26) instruccion -> . array_con_valores_boolean
    (27) instruccion -> . array_length_con_valores_int
    (28) instruccion -> . array_length_con_valores_double
    (29) instruccion -> . array_length_con_valores_string
    (30) instruccion -> . array_length_con_valores_boolean
    (47) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (48) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (49) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (50) instruccion -> . TYPE ID STRUCT I_LLAVE atributos D_LLAVE
    (54) instruccion -> . init_struct
    (74) print -> . PRINTLN
    (75) print -> . PRINTF
    (76) print -> . PRINT
    (31) array_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE
    (32) array_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (33) array_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE
    (34) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (35) array_length_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE
    (36) array_length_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE
    (37) array_length_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE
    (38) array_length_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (39) array_con_valores_int -> . I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (40) array_con_valores_double -> . I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (41) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (42) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (43) array_length_con_valores_int -> . I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE
    (44) array_length_con_valores_double -> . I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE
    (45) array_length_con_valores_string -> . I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE
    (46) array_length_con_valores_boolean -> . I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (55) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (56) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE

    VAR             shift and go to state 4
    ID              shift and go to state 5
    IF              shift and go to state 6
    ELSE            shift and go to state 7
    ELSEIF          shift and go to state 8
    FOR             shift and go to state 9
    MAP             shift and go to state 26
    MAKE            shift and go to state 28
    TYPE            shift and go to state 29
    PRINTLN         shift and go to state 31
    PRINTF          shift and go to state 32
    PRINT           shift and go to state 33
    I_CORCHETE      shift and go to state 27

    instruccion                    shift and go to state 2
    body                           shift and go to state 218
    print                          shift and go to state 3
    array_int                      shift and go to state 10
    array_double                   shift and go to state 11
    array_string                   shift and go to state 12
    array_boolean                  shift and go to state 13
    array_length_int               shift and go to state 14
    array_length_double            shift and go to state 15
    array_length_string            shift and go to state 16
    array_length_boolean           shift and go to state 17
    array_con_valores_int          shift and go to state 18
    array_con_valores_double       shift and go to state 19
    array_con_valores_string       shift and go to state 20
    array_con_valores_boolean      shift and go to state 21
    array_length_con_valores_int   shift and go to state 22
    array_length_con_valores_double shift and go to state 23
    array_length_con_valores_string shift and go to state 24
    array_length_con_valores_boolean shift and go to state 25
    init_struct                    shift and go to state 30

state 213

    (49) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .

    $end            reduce using rule 49 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 49 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    D_LLAVE         reduce using rule 49 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)


state 214

    (59) claves_valores -> clave_valor COMA . claves_valores
    (58) claves_valores -> . clave_valor
    (59) claves_valores -> . clave_valor COMA claves_valores
    (57) clave_valor -> . valor DOS_PUNTOS valor
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    clave_valor                    shift and go to state 198
    claves_valores                 shift and go to state 219
    valor                          shift and go to state 199
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 215

    (57) clave_valor -> valor DOS_PUNTOS . valor
    (73) valor -> . valor operacion_binaria valor
    (102) valor -> . valor_int
    (103) valor -> . valor_double
    (104) valor -> . valor_string
    (105) valor -> . valor_boolean
    (106) valor -> . valor_variable
    (107) valor_int -> . INT
    (108) valor_double -> . DOUBLE
    (109) valor_string -> . STRING
    (110) valor_boolean -> . BOOLEAN
    (111) valor_variable -> . ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 58
    ID              shift and go to state 59

    valor                          shift and go to state 220
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 216

    (48) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .

    $end            reduce using rule 48 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 48 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    D_LLAVE         reduce using rule 48 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)


state 217

    (14) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 221


state 218

    (13) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 222


state 219

    (59) claves_valores -> clave_valor COMA claves_valores .

    D_LLAVE         reduce using rule 59 (claves_valores -> clave_valor COMA claves_valores .)


state 220

    (57) clave_valor -> valor DOS_PUNTOS valor .
    (73) valor -> valor . operacion_binaria valor
    (91) operacion_binaria -> . ADICION
    (92) operacion_binaria -> . RESTA
    (93) operacion_binaria -> . MULTIPLICACION
    (94) operacion_binaria -> . DIVISION
    (95) operacion_binaria -> . MODULO
    (96) operacion_binaria -> . MENOR_IGUAL
    (97) operacion_binaria -> . IGUAL
    (98) operacion_binaria -> . DIFERENTE
    (99) operacion_binaria -> . MAYOR
    (100) operacion_binaria -> . MAYOR_IGUAL
    (101) operacion_binaria -> . MENOR

    COMA            reduce using rule 57 (clave_valor -> valor DOS_PUNTOS valor .)
    D_LLAVE         reduce using rule 57 (clave_valor -> valor DOS_PUNTOS valor .)
    ADICION         shift and go to state 85
    RESTA           shift and go to state 86
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88
    MODULO          shift and go to state 89
    MENOR_IGUAL     shift and go to state 90
    IGUAL           shift and go to state 91
    DIFERENTE       shift and go to state 92
    MAYOR           shift and go to state 93
    MAYOR_IGUAL     shift and go to state 94
    MENOR           shift and go to state 95

    operacion_binaria              shift and go to state 84

state 221

    (14) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .

    $end            reduce using rule 14 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 14 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 14 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)


state 222

    (13) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .

    $end            reduce using rule 13 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 13 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 13 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 38 resolved as shift
WARNING: shift/reduce conflict for ID in state 99 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 118 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 118 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 118 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 118 resolved as shift
