Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    CASE
    CHAN
    CONST
    CONTINUE
    DEFAULT
    DEFER
    FALLTHROUGH
    GO
    GOTO
    IDENTIFICADOR
    IMPORT
    INTERFACE
    NOT
    OR
    PACKAGE
    PUNTO
    SELECT
    SWITCH

Grammar

Rule 0     S' -> go
Rule 1     go -> instruccion
Rule 2     go -> funcion go
Rule 3     go -> funcion
Rule 4     body -> instruccion
Rule 5     body -> I_LLAVE instruct_expression D_LLAVE
Rule 6     body -> I_LLAVE varias_instrucciones D_LLAVE
Rule 7     body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE
Rule 8     body -> I_LLAVE D_LLAVE
Rule 9     varias_instrucciones -> instruccion
Rule 10    varias_instrucciones -> instruccion varias_instrucciones
Rule 11    instruct_expression -> RETURN valor
Rule 12    instruct_expression -> RETURN resultado
Rule 13    instruccion -> llamada_func
Rule 14    instruccion -> resultado_inc_dec
Rule 15    instruccion -> expression
Rule 16    instruccion -> print I_PARENTESIS valores D_PARENTESIS
Rule 17    instruccion -> VAR ID type ASIGNACION valor
Rule 18    instruccion -> VAR ID ASIGNACION valor
Rule 19    instruccion -> VAR ID ASIGNACION instruccion
Rule 20    instruccion -> VAR ID array_type_spec ASIGNACION instruccion
Rule 21    instruccion -> ID asignacion valor
Rule 22    instruccion -> ID asignacion instruccion
Rule 23    funcion -> FUNC ID cuerpo_fun
Rule 24    cuerpo_fun -> parametrosMetodo body
Rule 25    parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type
Rule 26    parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS
Rule 27    parametros -> atributo
Rule 28    parametros -> atributo COMA parametros
Rule 29    parametros -> <empty>
Rule 30    llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS
Rule 31    llamada_params -> expression
Rule 32    llamada_params -> expression COMA llamada_params
Rule 33    instruccion -> IF condicion I_LLAVE body D_LLAVE
Rule 34    instruccion -> ELSE I_LLAVE body D_LLAVE
Rule 35    instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE
Rule 36    instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
Rule 37    instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
Rule 38    instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
Rule 39    instruccion -> array_int
Rule 40    instruccion -> array_double
Rule 41    instruccion -> array_string
Rule 42    instruccion -> array_boolean
Rule 43    instruccion -> array_length_int
Rule 44    instruccion -> array_length_double
Rule 45    instruccion -> array_length_string
Rule 46    instruccion -> array_length_boolean
Rule 47    instruccion -> array_con_valores_int
Rule 48    instruccion -> array_con_valores_double
Rule 49    instruccion -> array_con_valores_string
Rule 50    instruccion -> array_con_valores_boolean
Rule 51    instruccion -> array_length_con_valores_int
Rule 52    instruccion -> array_length_con_valores_double
Rule 53    instruccion -> array_length_con_valores_string
Rule 54    instruccion -> array_length_con_valores_boolean
Rule 55    array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
Rule 56    array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
Rule 57    array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
Rule 58    array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
Rule 59    array_length_int -> array_length INTEGER I_LLAVE D_LLAVE
Rule 60    array_length_double -> array_length floating_type I_LLAVE D_LLAVE
Rule 61    array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE
Rule 62    array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE
Rule 63    array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
Rule 64    array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
Rule 65    array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
Rule 66    array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
Rule 67    array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE
Rule 68    array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE
Rule 69    array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
Rule 70    array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
Rule 71    instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
Rule 72    instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
Rule 73    instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
Rule 74    instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
Rule 75    atributos_struct -> atributo
Rule 76    atributos_struct -> atributo atributos_struct
Rule 77    atributo -> ID type
Rule 78    instruccion -> init_struct
Rule 79    init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
Rule 80    init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
Rule 81    clave_valor -> valor DOS_PUNTOS valor
Rule 82    claves_valores -> clave_valor
Rule 83    claves_valores -> clave_valor COMA claves_valores
Rule 84    condicion -> valor
Rule 85    condicion -> I_PARENTESIS valor D_PARENTESIS
Rule 86    iteracion_for -> ID
Rule 87    expression -> valores
Rule 88    expression -> resultado
Rule 89    expression -> llamada_func
Rule 90    expression -> I_PARENTESIS resultado D_PARENTESIS
Rule 91    resultado -> expression operacion_binaria expression
Rule 92    resultado_inc_dec -> ID operador_matematico
Rule 93    valores -> valor
Rule 94    valores -> valor COMA valores
Rule 95    valores_int -> valor_int
Rule 96    valores_int -> valor_int COMA valores_int
Rule 97    valores_double -> valor_double
Rule 98    valores_double -> valor_double COMA valores_double
Rule 99    valores_string -> valor_string
Rule 100   valores_string -> valor_string COMA valores_string
Rule 101   valores_boolean -> valor_boolean
Rule 102   valores_boolean -> valor_boolean COMA valores_boolean
Rule 103   valor -> valor operacion_binaria valor
Rule 104   print -> PRINTLN
Rule 105   print -> PRINTF
Rule 106   print -> PRINT
Rule 107   array_type_spec -> array_length INTEGER
Rule 108   array_type_spec -> array_length STRINGTYPE
Rule 109   array_type_spec -> array_length BOOLEAN
Rule 110   array_type_spec -> array_length floating_type
Rule 111   array_length -> I_CORCHETE INT D_CORCHETE
Rule 112   type -> BOOL
Rule 113   type -> STRINGTYPE
Rule 114   type -> INTEGER
Rule 115   type -> floating_type
Rule 116   floating_type -> FLOAT32
Rule 117   floating_type -> FLOAT64
Rule 118   operador_matematico -> INCREMENTO
Rule 119   operador_matematico -> DECREMENTO
Rule 120   asignacion -> ASIGNACION
Rule 121   asignacion -> ASIGNACION_ADICION
Rule 122   asignacion -> ASIGNACION_RESTA
Rule 123   asignacion -> ASIGNACION_MULTI
Rule 124   asignacion -> DECLARACION_ASIGNACION
Rule 125   asignacion -> ASIGNACION_DIVISION
Rule 126   asignacion -> ASIGNACION_MODULO
Rule 127   operacion_binaria -> ADICION
Rule 128   operacion_binaria -> RESTA
Rule 129   operacion_binaria -> MULTIPLICACION
Rule 130   operacion_binaria -> DIVISION
Rule 131   operacion_binaria -> MODULO
Rule 132   operacion_binaria -> MENOR_IGUAL
Rule 133   operacion_binaria -> IGUAL
Rule 134   operacion_binaria -> DIFERENTE
Rule 135   operacion_binaria -> MAYOR
Rule 136   operacion_binaria -> MAYOR_IGUAL
Rule 137   operacion_binaria -> MENOR
Rule 138   valor -> valor_int
Rule 139   valor -> valor_double
Rule 140   valor -> valor_string
Rule 141   valor -> valor_boolean
Rule 142   valor -> valor_variable
Rule 143   valor_int -> INT
Rule 144   valor_double -> DOUBLE
Rule 145   valor_string -> STRING
Rule 146   valor_boolean -> BOOLEAN
Rule 147   valor_variable -> ID

Terminals, with rules where they appear

ADICION              : 127
AND                  : 
ASIGNACION           : 17 18 19 20 79 120
ASIGNACION_ADICION   : 121
ASIGNACION_DIVISION  : 125
ASIGNACION_MODULO    : 126
ASIGNACION_MULTI     : 123
ASIGNACION_RESTA     : 122
BOOL                 : 112
BOOLEAN              : 58 62 66 70 109 146
BREAK                : 
CASE                 : 
CHAN                 : 
COMA                 : 28 32 38 83 94 96 98 100 102
CONST                : 
CONTINUE             : 
DECLARACION_ASIGNACION : 36 38 80 124
DECREMENTO           : 119
DEFAULT              : 
DEFER                : 
DIFERENTE            : 134
DIVISION             : 130
DOS_PUNTOS           : 81
DOUBLE               : 144
D_CORCHETE           : 55 56 57 58 63 64 65 66 71 72 73 111
D_LLAVE              : 5 6 7 8 33 34 35 36 37 38 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 73 74 79 80
D_PARENTESIS         : 16 25 26 30 72 85 90
ELSE                 : 34
ELSEIF               : 35
FALLTHROUGH          : 
FLOAT32              : 116
FLOAT64              : 117
FOR                  : 36 37 38
FUNC                 : 23
GO                   : 
GOTO                 : 
ID                   : 17 18 19 20 21 22 23 30 36 36 37 38 38 38 74 77 79 79 79 80 80 86 92 147
IDENTIFICADOR        : 
IF                   : 33
IGUAL                : 133
IMPORT               : 
INCREMENTO           : 118
INT                  : 111 143
INTEGER              : 55 59 63 67 107 114
INTERFACE            : 
I_CORCHETE           : 55 56 57 58 63 64 65 66 71 72 73 111
I_LLAVE              : 5 6 7 8 33 34 35 36 37 38 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 73 74 79 80
I_PARENTESIS         : 16 25 26 30 72 85 90
MAKE                 : 72
MAP                  : 71 72 73
MAYOR                : 135
MAYOR_IGUAL          : 136
MENOR                : 137
MENOR_IGUAL          : 132
MODULO               : 131
MULTIPLICACION       : 129
NOT                  : 
OR                   : 
PACKAGE              : 
PRINT                : 106
PRINTF               : 105
PRINTLN              : 104
PUNTO                : 
PUNTO_COMA           : 37 37
RANGE                : 36 38
RESTA                : 128
RETURN               : 11 12
SELECT               : 
STRING               : 145
STRINGTYPE           : 57 61 65 69 108 113
STRUCT               : 74
SWITCH               : 
TYPE                 : 74
VAR                  : 17 18 19 20 79
error                : 

Nonterminals, with rules where they appear

array_boolean        : 42
array_con_valores_boolean : 50
array_con_valores_double : 48
array_con_valores_int : 47
array_con_valores_string : 49
array_double         : 40
array_int            : 39
array_length         : 59 60 61 62 67 68 69 70 107 108 109 110
array_length_boolean : 46
array_length_con_valores_boolean : 54
array_length_con_valores_double : 52
array_length_con_valores_int : 51
array_length_con_valores_string : 53
array_length_double  : 44
array_length_int     : 43
array_length_string  : 45
array_string         : 41
array_type_spec      : 20
asignacion           : 21 22
atributo             : 27 28 75 76
atributos_struct     : 74 76
body                 : 24 33 34 35 36 37 38
clave_valor          : 82 83
claves_valores       : 73 83
condicion            : 33 35
cuerpo_fun           : 23
expression           : 15 31 32 91 91
floating_type        : 56 60 64 68 110 115
funcion              : 2 3
go                   : 2 0
init_struct          : 78
instruccion          : 1 4 9 10 19 20 22 37
instruct_expression  : 5 7
iteracion_for        : 
llamada_func         : 13 89
llamada_params       : 30 32
operacion_binaria    : 91 103
operador_matematico  : 37 92
parametros           : 25 26 28
parametrosMetodo     : 24
print                : 16
resultado            : 12 88 90
resultado_inc_dec    : 14
type                 : 17 25 71 71 72 72 73 73 77
valor                : 11 17 18 21 37 81 81 84 85 93 94 103 103
valor_boolean        : 101 102 141
valor_double         : 97 98 139
valor_int            : 95 96 138
valor_string         : 99 100 140
valor_variable       : 142
valores              : 16 79 80 87 94
valores_boolean      : 66 70 102
valores_double       : 64 68 98
valores_int          : 63 67 96
valores_string       : 65 69 100
varias_instrucciones : 6 7 10

Parsing method: LALR

state 0

    (0) S' -> . go
    (1) go -> . instruccion
    (2) go -> . funcion go
    (3) go -> . funcion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (23) funcion -> . FUNC ID cuerpo_fun
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    FUNC            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    go                             shift and go to state 1
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 1

    (0) S' -> go .



state 2

    (1) go -> instruccion .

    $end            reduce using rule 1 (go -> instruccion .)


state 3

    (2) go -> funcion . go
    (3) go -> funcion .
    (1) go -> . instruccion
    (2) go -> . funcion go
    (3) go -> . funcion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (23) funcion -> . FUNC ID cuerpo_fun
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    $end            reduce using rule 3 (go -> funcion .)
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    FUNC            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    funcion                        shift and go to state 3
    go                             shift and go to state 53
    instruccion                    shift and go to state 2
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 4

    (13) instruccion -> llamada_func .
    (89) expression -> llamada_func .

  ! reduce/reduce conflict for $end resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for VAR resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ID resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for IF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for MAP resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for MAKE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for TYPE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINTF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for INT resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for FUNC resolved using rule 13 (instruccion -> llamada_func .)
    $end            reduce using rule 13 (instruccion -> llamada_func .)
    PUNTO_COMA      reduce using rule 13 (instruccion -> llamada_func .)
    D_LLAVE         reduce using rule 13 (instruccion -> llamada_func .)
    VAR             reduce using rule 13 (instruccion -> llamada_func .)
    ID              reduce using rule 13 (instruccion -> llamada_func .)
    IF              reduce using rule 13 (instruccion -> llamada_func .)
    ELSE            reduce using rule 13 (instruccion -> llamada_func .)
    ELSEIF          reduce using rule 13 (instruccion -> llamada_func .)
    FOR             reduce using rule 13 (instruccion -> llamada_func .)
    MAP             reduce using rule 13 (instruccion -> llamada_func .)
    MAKE            reduce using rule 13 (instruccion -> llamada_func .)
    TYPE            reduce using rule 13 (instruccion -> llamada_func .)
    I_PARENTESIS    reduce using rule 13 (instruccion -> llamada_func .)
    PRINTLN         reduce using rule 13 (instruccion -> llamada_func .)
    PRINTF          reduce using rule 13 (instruccion -> llamada_func .)
    PRINT           reduce using rule 13 (instruccion -> llamada_func .)
    I_CORCHETE      reduce using rule 13 (instruccion -> llamada_func .)
    INT             reduce using rule 13 (instruccion -> llamada_func .)
    DOUBLE          reduce using rule 13 (instruccion -> llamada_func .)
    STRING          reduce using rule 13 (instruccion -> llamada_func .)
    BOOLEAN         reduce using rule 13 (instruccion -> llamada_func .)
    RETURN          reduce using rule 13 (instruccion -> llamada_func .)
    FUNC            reduce using rule 13 (instruccion -> llamada_func .)
    ADICION         reduce using rule 89 (expression -> llamada_func .)
    RESTA           reduce using rule 89 (expression -> llamada_func .)
    MULTIPLICACION  reduce using rule 89 (expression -> llamada_func .)
    DIVISION        reduce using rule 89 (expression -> llamada_func .)
    MODULO          reduce using rule 89 (expression -> llamada_func .)
    MENOR_IGUAL     reduce using rule 89 (expression -> llamada_func .)
    IGUAL           reduce using rule 89 (expression -> llamada_func .)
    DIFERENTE       reduce using rule 89 (expression -> llamada_func .)
    MAYOR           reduce using rule 89 (expression -> llamada_func .)
    MAYOR_IGUAL     reduce using rule 89 (expression -> llamada_func .)
    MENOR           reduce using rule 89 (expression -> llamada_func .)

  ! $end            [ reduce using rule 89 (expression -> llamada_func .) ]
  ! PUNTO_COMA      [ reduce using rule 89 (expression -> llamada_func .) ]
  ! D_LLAVE         [ reduce using rule 89 (expression -> llamada_func .) ]
  ! VAR             [ reduce using rule 89 (expression -> llamada_func .) ]
  ! ID              [ reduce using rule 89 (expression -> llamada_func .) ]
  ! IF              [ reduce using rule 89 (expression -> llamada_func .) ]
  ! ELSE            [ reduce using rule 89 (expression -> llamada_func .) ]
  ! ELSEIF          [ reduce using rule 89 (expression -> llamada_func .) ]
  ! FOR             [ reduce using rule 89 (expression -> llamada_func .) ]
  ! MAP             [ reduce using rule 89 (expression -> llamada_func .) ]
  ! MAKE            [ reduce using rule 89 (expression -> llamada_func .) ]
  ! TYPE            [ reduce using rule 89 (expression -> llamada_func .) ]
  ! I_PARENTESIS    [ reduce using rule 89 (expression -> llamada_func .) ]
  ! PRINTLN         [ reduce using rule 89 (expression -> llamada_func .) ]
  ! PRINTF          [ reduce using rule 89 (expression -> llamada_func .) ]
  ! PRINT           [ reduce using rule 89 (expression -> llamada_func .) ]
  ! I_CORCHETE      [ reduce using rule 89 (expression -> llamada_func .) ]
  ! INT             [ reduce using rule 89 (expression -> llamada_func .) ]
  ! DOUBLE          [ reduce using rule 89 (expression -> llamada_func .) ]
  ! STRING          [ reduce using rule 89 (expression -> llamada_func .) ]
  ! BOOLEAN         [ reduce using rule 89 (expression -> llamada_func .) ]
  ! RETURN          [ reduce using rule 89 (expression -> llamada_func .) ]
  ! FUNC            [ reduce using rule 89 (expression -> llamada_func .) ]


state 5

    (14) instruccion -> resultado_inc_dec .

    $end            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PUNTO_COMA      reduce using rule 14 (instruccion -> resultado_inc_dec .)
    D_LLAVE         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    VAR             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ID              reduce using rule 14 (instruccion -> resultado_inc_dec .)
    IF              reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ELSE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ELSEIF          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    FOR             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    MAP             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    MAKE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    TYPE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    I_PARENTESIS    reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINTLN         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINTF          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINT           reduce using rule 14 (instruccion -> resultado_inc_dec .)
    I_CORCHETE      reduce using rule 14 (instruccion -> resultado_inc_dec .)
    INT             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    DOUBLE          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    STRING          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    BOOLEAN         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    RETURN          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    FUNC            reduce using rule 14 (instruccion -> resultado_inc_dec .)


state 6

    (15) instruccion -> expression .
    (91) resultado -> expression . operacion_binaria expression
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    $end            reduce using rule 15 (instruccion -> expression .)
    PUNTO_COMA      reduce using rule 15 (instruccion -> expression .)
    D_LLAVE         reduce using rule 15 (instruccion -> expression .)
    VAR             reduce using rule 15 (instruccion -> expression .)
    ID              reduce using rule 15 (instruccion -> expression .)
    IF              reduce using rule 15 (instruccion -> expression .)
    ELSE            reduce using rule 15 (instruccion -> expression .)
    ELSEIF          reduce using rule 15 (instruccion -> expression .)
    FOR             reduce using rule 15 (instruccion -> expression .)
    MAP             reduce using rule 15 (instruccion -> expression .)
    MAKE            reduce using rule 15 (instruccion -> expression .)
    TYPE            reduce using rule 15 (instruccion -> expression .)
    I_PARENTESIS    reduce using rule 15 (instruccion -> expression .)
    PRINTLN         reduce using rule 15 (instruccion -> expression .)
    PRINTF          reduce using rule 15 (instruccion -> expression .)
    PRINT           reduce using rule 15 (instruccion -> expression .)
    I_CORCHETE      reduce using rule 15 (instruccion -> expression .)
    INT             reduce using rule 15 (instruccion -> expression .)
    DOUBLE          reduce using rule 15 (instruccion -> expression .)
    STRING          reduce using rule 15 (instruccion -> expression .)
    BOOLEAN         reduce using rule 15 (instruccion -> expression .)
    RETURN          reduce using rule 15 (instruccion -> expression .)
    FUNC            reduce using rule 15 (instruccion -> expression .)
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 54

state 7

    (16) instruccion -> print . I_PARENTESIS valores D_PARENTESIS

    I_PARENTESIS    shift and go to state 66


state 8

    (90) expression -> I_PARENTESIS . resultado D_PARENTESIS
    (91) resultado -> . expression operacion_binaria expression
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 70
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    resultado                      shift and go to state 67
    expression                     shift and go to state 68
    valores                        shift and go to state 9
    llamada_func                   shift and go to state 69
    valor                          shift and go to state 12
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 9

    (87) expression -> valores .

    ADICION         reduce using rule 87 (expression -> valores .)
    RESTA           reduce using rule 87 (expression -> valores .)
    MULTIPLICACION  reduce using rule 87 (expression -> valores .)
    DIVISION        reduce using rule 87 (expression -> valores .)
    MODULO          reduce using rule 87 (expression -> valores .)
    MENOR_IGUAL     reduce using rule 87 (expression -> valores .)
    IGUAL           reduce using rule 87 (expression -> valores .)
    DIFERENTE       reduce using rule 87 (expression -> valores .)
    MAYOR           reduce using rule 87 (expression -> valores .)
    MAYOR_IGUAL     reduce using rule 87 (expression -> valores .)
    MENOR           reduce using rule 87 (expression -> valores .)
    $end            reduce using rule 87 (expression -> valores .)
    PUNTO_COMA      reduce using rule 87 (expression -> valores .)
    D_PARENTESIS    reduce using rule 87 (expression -> valores .)
    D_LLAVE         reduce using rule 87 (expression -> valores .)
    VAR             reduce using rule 87 (expression -> valores .)
    ID              reduce using rule 87 (expression -> valores .)
    IF              reduce using rule 87 (expression -> valores .)
    ELSE            reduce using rule 87 (expression -> valores .)
    ELSEIF          reduce using rule 87 (expression -> valores .)
    FOR             reduce using rule 87 (expression -> valores .)
    MAP             reduce using rule 87 (expression -> valores .)
    MAKE            reduce using rule 87 (expression -> valores .)
    TYPE            reduce using rule 87 (expression -> valores .)
    I_PARENTESIS    reduce using rule 87 (expression -> valores .)
    PRINTLN         reduce using rule 87 (expression -> valores .)
    PRINTF          reduce using rule 87 (expression -> valores .)
    PRINT           reduce using rule 87 (expression -> valores .)
    I_CORCHETE      reduce using rule 87 (expression -> valores .)
    INT             reduce using rule 87 (expression -> valores .)
    DOUBLE          reduce using rule 87 (expression -> valores .)
    STRING          reduce using rule 87 (expression -> valores .)
    BOOLEAN         reduce using rule 87 (expression -> valores .)
    RETURN          reduce using rule 87 (expression -> valores .)
    FUNC            reduce using rule 87 (expression -> valores .)
    COMA            reduce using rule 87 (expression -> valores .)


state 10

    (17) instruccion -> VAR . ID type ASIGNACION valor
    (18) instruccion -> VAR . ID ASIGNACION valor
    (19) instruccion -> VAR . ID ASIGNACION instruccion
    (20) instruccion -> VAR . ID array_type_spec ASIGNACION instruccion
    (79) init_struct -> VAR . ID ID ASIGNACION ID I_LLAVE valores D_LLAVE

    ID              shift and go to state 71


state 11

    (21) instruccion -> ID . asignacion valor
    (22) instruccion -> ID . asignacion instruccion
    (30) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> ID . operador_matematico
    (80) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (147) valor_variable -> ID .
    (120) asignacion -> . ASIGNACION
    (121) asignacion -> . ASIGNACION_ADICION
    (122) asignacion -> . ASIGNACION_RESTA
    (123) asignacion -> . ASIGNACION_MULTI
    (124) asignacion -> . DECLARACION_ASIGNACION
    (125) asignacion -> . ASIGNACION_DIVISION
    (126) asignacion -> . ASIGNACION_MODULO
    (118) operador_matematico -> . INCREMENTO
    (119) operador_matematico -> . DECREMENTO

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    I_PARENTESIS    shift and go to state 73
    DECLARACION_ASIGNACION shift and go to state 75
    COMA            reduce using rule 147 (valor_variable -> ID .)
    ADICION         reduce using rule 147 (valor_variable -> ID .)
    RESTA           reduce using rule 147 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 147 (valor_variable -> ID .)
    DIVISION        reduce using rule 147 (valor_variable -> ID .)
    MODULO          reduce using rule 147 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    IGUAL           reduce using rule 147 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 147 (valor_variable -> ID .)
    MAYOR           reduce using rule 147 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    MENOR           reduce using rule 147 (valor_variable -> ID .)
    $end            reduce using rule 147 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 147 (valor_variable -> ID .)
    VAR             reduce using rule 147 (valor_variable -> ID .)
    ID              reduce using rule 147 (valor_variable -> ID .)
    IF              reduce using rule 147 (valor_variable -> ID .)
    ELSE            reduce using rule 147 (valor_variable -> ID .)
    ELSEIF          reduce using rule 147 (valor_variable -> ID .)
    FOR             reduce using rule 147 (valor_variable -> ID .)
    MAP             reduce using rule 147 (valor_variable -> ID .)
    MAKE            reduce using rule 147 (valor_variable -> ID .)
    TYPE            reduce using rule 147 (valor_variable -> ID .)
    PRINTLN         reduce using rule 147 (valor_variable -> ID .)
    PRINTF          reduce using rule 147 (valor_variable -> ID .)
    PRINT           reduce using rule 147 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 147 (valor_variable -> ID .)
    INT             reduce using rule 147 (valor_variable -> ID .)
    DOUBLE          reduce using rule 147 (valor_variable -> ID .)
    STRING          reduce using rule 147 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 147 (valor_variable -> ID .)
    RETURN          reduce using rule 147 (valor_variable -> ID .)
    FUNC            reduce using rule 147 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 147 (valor_variable -> ID .)
    ASIGNACION      shift and go to state 76
    ASIGNACION_ADICION shift and go to state 77
    ASIGNACION_RESTA shift and go to state 78
    ASIGNACION_MULTI shift and go to state 79
    ASIGNACION_DIVISION shift and go to state 80
    ASIGNACION_MODULO shift and go to state 81
    INCREMENTO      shift and go to state 82
    DECREMENTO      shift and go to state 83

  ! I_PARENTESIS    [ reduce using rule 147 (valor_variable -> ID .) ]

    asignacion                     shift and go to state 72
    operador_matematico            shift and go to state 74

state 12

    (93) valores -> valor .
    (94) valores -> valor . COMA valores
    (103) valor -> valor . operacion_binaria valor
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

  ! shift/reduce conflict for COMA resolved as shift
  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 93 (valores -> valor .)
    PUNTO_COMA      reduce using rule 93 (valores -> valor .)
    D_PARENTESIS    reduce using rule 93 (valores -> valor .)
    D_LLAVE         reduce using rule 93 (valores -> valor .)
    VAR             reduce using rule 93 (valores -> valor .)
    ID              reduce using rule 93 (valores -> valor .)
    IF              reduce using rule 93 (valores -> valor .)
    ELSE            reduce using rule 93 (valores -> valor .)
    ELSEIF          reduce using rule 93 (valores -> valor .)
    FOR             reduce using rule 93 (valores -> valor .)
    MAP             reduce using rule 93 (valores -> valor .)
    MAKE            reduce using rule 93 (valores -> valor .)
    TYPE            reduce using rule 93 (valores -> valor .)
    I_PARENTESIS    reduce using rule 93 (valores -> valor .)
    PRINTLN         reduce using rule 93 (valores -> valor .)
    PRINTF          reduce using rule 93 (valores -> valor .)
    PRINT           reduce using rule 93 (valores -> valor .)
    I_CORCHETE      reduce using rule 93 (valores -> valor .)
    INT             reduce using rule 93 (valores -> valor .)
    DOUBLE          reduce using rule 93 (valores -> valor .)
    STRING          reduce using rule 93 (valores -> valor .)
    BOOLEAN         reduce using rule 93 (valores -> valor .)
    RETURN          reduce using rule 93 (valores -> valor .)
    FUNC            reduce using rule 93 (valores -> valor .)
    COMA            shift and go to state 84
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

  ! ADICION         [ reduce using rule 93 (valores -> valor .) ]
  ! RESTA           [ reduce using rule 93 (valores -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 93 (valores -> valor .) ]
  ! DIVISION        [ reduce using rule 93 (valores -> valor .) ]
  ! MODULO          [ reduce using rule 93 (valores -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 93 (valores -> valor .) ]
  ! IGUAL           [ reduce using rule 93 (valores -> valor .) ]
  ! DIFERENTE       [ reduce using rule 93 (valores -> valor .) ]
  ! MAYOR           [ reduce using rule 93 (valores -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 93 (valores -> valor .) ]
  ! MENOR           [ reduce using rule 93 (valores -> valor .) ]
  ! COMA            [ reduce using rule 93 (valores -> valor .) ]

    operacion_binaria              shift and go to state 85

state 13

    (33) instruccion -> IF . condicion I_LLAVE body D_LLAVE
    (84) condicion -> . valor
    (85) condicion -> . I_PARENTESIS valor D_PARENTESIS
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_PARENTESIS    shift and go to state 88
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    condicion                      shift and go to state 86
    valor                          shift and go to state 87
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 14

    (34) instruccion -> ELSE . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 90


state 15

    (35) instruccion -> ELSEIF . condicion I_LLAVE body D_LLAVE
    (84) condicion -> . valor
    (85) condicion -> . I_PARENTESIS valor D_PARENTESIS
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_PARENTESIS    shift and go to state 88
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    condicion                      shift and go to state 91
    valor                          shift and go to state 87
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 16

    (36) instruccion -> FOR . ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> FOR . instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> FOR . ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    ID              shift and go to state 92
    VAR             shift and go to state 10
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    instruccion                    shift and go to state 93
    valor                          shift and go to state 12
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 17

    (39) instruccion -> array_int .

    $end            reduce using rule 39 (instruccion -> array_int .)
    PUNTO_COMA      reduce using rule 39 (instruccion -> array_int .)
    D_LLAVE         reduce using rule 39 (instruccion -> array_int .)
    VAR             reduce using rule 39 (instruccion -> array_int .)
    ID              reduce using rule 39 (instruccion -> array_int .)
    IF              reduce using rule 39 (instruccion -> array_int .)
    ELSE            reduce using rule 39 (instruccion -> array_int .)
    ELSEIF          reduce using rule 39 (instruccion -> array_int .)
    FOR             reduce using rule 39 (instruccion -> array_int .)
    MAP             reduce using rule 39 (instruccion -> array_int .)
    MAKE            reduce using rule 39 (instruccion -> array_int .)
    TYPE            reduce using rule 39 (instruccion -> array_int .)
    I_PARENTESIS    reduce using rule 39 (instruccion -> array_int .)
    PRINTLN         reduce using rule 39 (instruccion -> array_int .)
    PRINTF          reduce using rule 39 (instruccion -> array_int .)
    PRINT           reduce using rule 39 (instruccion -> array_int .)
    I_CORCHETE      reduce using rule 39 (instruccion -> array_int .)
    INT             reduce using rule 39 (instruccion -> array_int .)
    DOUBLE          reduce using rule 39 (instruccion -> array_int .)
    STRING          reduce using rule 39 (instruccion -> array_int .)
    BOOLEAN         reduce using rule 39 (instruccion -> array_int .)
    RETURN          reduce using rule 39 (instruccion -> array_int .)
    FUNC            reduce using rule 39 (instruccion -> array_int .)


state 18

    (40) instruccion -> array_double .

    $end            reduce using rule 40 (instruccion -> array_double .)
    PUNTO_COMA      reduce using rule 40 (instruccion -> array_double .)
    D_LLAVE         reduce using rule 40 (instruccion -> array_double .)
    VAR             reduce using rule 40 (instruccion -> array_double .)
    ID              reduce using rule 40 (instruccion -> array_double .)
    IF              reduce using rule 40 (instruccion -> array_double .)
    ELSE            reduce using rule 40 (instruccion -> array_double .)
    ELSEIF          reduce using rule 40 (instruccion -> array_double .)
    FOR             reduce using rule 40 (instruccion -> array_double .)
    MAP             reduce using rule 40 (instruccion -> array_double .)
    MAKE            reduce using rule 40 (instruccion -> array_double .)
    TYPE            reduce using rule 40 (instruccion -> array_double .)
    I_PARENTESIS    reduce using rule 40 (instruccion -> array_double .)
    PRINTLN         reduce using rule 40 (instruccion -> array_double .)
    PRINTF          reduce using rule 40 (instruccion -> array_double .)
    PRINT           reduce using rule 40 (instruccion -> array_double .)
    I_CORCHETE      reduce using rule 40 (instruccion -> array_double .)
    INT             reduce using rule 40 (instruccion -> array_double .)
    DOUBLE          reduce using rule 40 (instruccion -> array_double .)
    STRING          reduce using rule 40 (instruccion -> array_double .)
    BOOLEAN         reduce using rule 40 (instruccion -> array_double .)
    RETURN          reduce using rule 40 (instruccion -> array_double .)
    FUNC            reduce using rule 40 (instruccion -> array_double .)


state 19

    (41) instruccion -> array_string .

    $end            reduce using rule 41 (instruccion -> array_string .)
    PUNTO_COMA      reduce using rule 41 (instruccion -> array_string .)
    D_LLAVE         reduce using rule 41 (instruccion -> array_string .)
    VAR             reduce using rule 41 (instruccion -> array_string .)
    ID              reduce using rule 41 (instruccion -> array_string .)
    IF              reduce using rule 41 (instruccion -> array_string .)
    ELSE            reduce using rule 41 (instruccion -> array_string .)
    ELSEIF          reduce using rule 41 (instruccion -> array_string .)
    FOR             reduce using rule 41 (instruccion -> array_string .)
    MAP             reduce using rule 41 (instruccion -> array_string .)
    MAKE            reduce using rule 41 (instruccion -> array_string .)
    TYPE            reduce using rule 41 (instruccion -> array_string .)
    I_PARENTESIS    reduce using rule 41 (instruccion -> array_string .)
    PRINTLN         reduce using rule 41 (instruccion -> array_string .)
    PRINTF          reduce using rule 41 (instruccion -> array_string .)
    PRINT           reduce using rule 41 (instruccion -> array_string .)
    I_CORCHETE      reduce using rule 41 (instruccion -> array_string .)
    INT             reduce using rule 41 (instruccion -> array_string .)
    DOUBLE          reduce using rule 41 (instruccion -> array_string .)
    STRING          reduce using rule 41 (instruccion -> array_string .)
    BOOLEAN         reduce using rule 41 (instruccion -> array_string .)
    RETURN          reduce using rule 41 (instruccion -> array_string .)
    FUNC            reduce using rule 41 (instruccion -> array_string .)


state 20

    (42) instruccion -> array_boolean .

    $end            reduce using rule 42 (instruccion -> array_boolean .)
    PUNTO_COMA      reduce using rule 42 (instruccion -> array_boolean .)
    D_LLAVE         reduce using rule 42 (instruccion -> array_boolean .)
    VAR             reduce using rule 42 (instruccion -> array_boolean .)
    ID              reduce using rule 42 (instruccion -> array_boolean .)
    IF              reduce using rule 42 (instruccion -> array_boolean .)
    ELSE            reduce using rule 42 (instruccion -> array_boolean .)
    ELSEIF          reduce using rule 42 (instruccion -> array_boolean .)
    FOR             reduce using rule 42 (instruccion -> array_boolean .)
    MAP             reduce using rule 42 (instruccion -> array_boolean .)
    MAKE            reduce using rule 42 (instruccion -> array_boolean .)
    TYPE            reduce using rule 42 (instruccion -> array_boolean .)
    I_PARENTESIS    reduce using rule 42 (instruccion -> array_boolean .)
    PRINTLN         reduce using rule 42 (instruccion -> array_boolean .)
    PRINTF          reduce using rule 42 (instruccion -> array_boolean .)
    PRINT           reduce using rule 42 (instruccion -> array_boolean .)
    I_CORCHETE      reduce using rule 42 (instruccion -> array_boolean .)
    INT             reduce using rule 42 (instruccion -> array_boolean .)
    DOUBLE          reduce using rule 42 (instruccion -> array_boolean .)
    STRING          reduce using rule 42 (instruccion -> array_boolean .)
    BOOLEAN         reduce using rule 42 (instruccion -> array_boolean .)
    RETURN          reduce using rule 42 (instruccion -> array_boolean .)
    FUNC            reduce using rule 42 (instruccion -> array_boolean .)


state 21

    (43) instruccion -> array_length_int .

    $end            reduce using rule 43 (instruccion -> array_length_int .)
    PUNTO_COMA      reduce using rule 43 (instruccion -> array_length_int .)
    D_LLAVE         reduce using rule 43 (instruccion -> array_length_int .)
    VAR             reduce using rule 43 (instruccion -> array_length_int .)
    ID              reduce using rule 43 (instruccion -> array_length_int .)
    IF              reduce using rule 43 (instruccion -> array_length_int .)
    ELSE            reduce using rule 43 (instruccion -> array_length_int .)
    ELSEIF          reduce using rule 43 (instruccion -> array_length_int .)
    FOR             reduce using rule 43 (instruccion -> array_length_int .)
    MAP             reduce using rule 43 (instruccion -> array_length_int .)
    MAKE            reduce using rule 43 (instruccion -> array_length_int .)
    TYPE            reduce using rule 43 (instruccion -> array_length_int .)
    I_PARENTESIS    reduce using rule 43 (instruccion -> array_length_int .)
    PRINTLN         reduce using rule 43 (instruccion -> array_length_int .)
    PRINTF          reduce using rule 43 (instruccion -> array_length_int .)
    PRINT           reduce using rule 43 (instruccion -> array_length_int .)
    I_CORCHETE      reduce using rule 43 (instruccion -> array_length_int .)
    INT             reduce using rule 43 (instruccion -> array_length_int .)
    DOUBLE          reduce using rule 43 (instruccion -> array_length_int .)
    STRING          reduce using rule 43 (instruccion -> array_length_int .)
    BOOLEAN         reduce using rule 43 (instruccion -> array_length_int .)
    RETURN          reduce using rule 43 (instruccion -> array_length_int .)
    FUNC            reduce using rule 43 (instruccion -> array_length_int .)


state 22

    (44) instruccion -> array_length_double .

    $end            reduce using rule 44 (instruccion -> array_length_double .)
    PUNTO_COMA      reduce using rule 44 (instruccion -> array_length_double .)
    D_LLAVE         reduce using rule 44 (instruccion -> array_length_double .)
    VAR             reduce using rule 44 (instruccion -> array_length_double .)
    ID              reduce using rule 44 (instruccion -> array_length_double .)
    IF              reduce using rule 44 (instruccion -> array_length_double .)
    ELSE            reduce using rule 44 (instruccion -> array_length_double .)
    ELSEIF          reduce using rule 44 (instruccion -> array_length_double .)
    FOR             reduce using rule 44 (instruccion -> array_length_double .)
    MAP             reduce using rule 44 (instruccion -> array_length_double .)
    MAKE            reduce using rule 44 (instruccion -> array_length_double .)
    TYPE            reduce using rule 44 (instruccion -> array_length_double .)
    I_PARENTESIS    reduce using rule 44 (instruccion -> array_length_double .)
    PRINTLN         reduce using rule 44 (instruccion -> array_length_double .)
    PRINTF          reduce using rule 44 (instruccion -> array_length_double .)
    PRINT           reduce using rule 44 (instruccion -> array_length_double .)
    I_CORCHETE      reduce using rule 44 (instruccion -> array_length_double .)
    INT             reduce using rule 44 (instruccion -> array_length_double .)
    DOUBLE          reduce using rule 44 (instruccion -> array_length_double .)
    STRING          reduce using rule 44 (instruccion -> array_length_double .)
    BOOLEAN         reduce using rule 44 (instruccion -> array_length_double .)
    RETURN          reduce using rule 44 (instruccion -> array_length_double .)
    FUNC            reduce using rule 44 (instruccion -> array_length_double .)


state 23

    (45) instruccion -> array_length_string .

    $end            reduce using rule 45 (instruccion -> array_length_string .)
    PUNTO_COMA      reduce using rule 45 (instruccion -> array_length_string .)
    D_LLAVE         reduce using rule 45 (instruccion -> array_length_string .)
    VAR             reduce using rule 45 (instruccion -> array_length_string .)
    ID              reduce using rule 45 (instruccion -> array_length_string .)
    IF              reduce using rule 45 (instruccion -> array_length_string .)
    ELSE            reduce using rule 45 (instruccion -> array_length_string .)
    ELSEIF          reduce using rule 45 (instruccion -> array_length_string .)
    FOR             reduce using rule 45 (instruccion -> array_length_string .)
    MAP             reduce using rule 45 (instruccion -> array_length_string .)
    MAKE            reduce using rule 45 (instruccion -> array_length_string .)
    TYPE            reduce using rule 45 (instruccion -> array_length_string .)
    I_PARENTESIS    reduce using rule 45 (instruccion -> array_length_string .)
    PRINTLN         reduce using rule 45 (instruccion -> array_length_string .)
    PRINTF          reduce using rule 45 (instruccion -> array_length_string .)
    PRINT           reduce using rule 45 (instruccion -> array_length_string .)
    I_CORCHETE      reduce using rule 45 (instruccion -> array_length_string .)
    INT             reduce using rule 45 (instruccion -> array_length_string .)
    DOUBLE          reduce using rule 45 (instruccion -> array_length_string .)
    STRING          reduce using rule 45 (instruccion -> array_length_string .)
    BOOLEAN         reduce using rule 45 (instruccion -> array_length_string .)
    RETURN          reduce using rule 45 (instruccion -> array_length_string .)
    FUNC            reduce using rule 45 (instruccion -> array_length_string .)


state 24

    (46) instruccion -> array_length_boolean .

    $end            reduce using rule 46 (instruccion -> array_length_boolean .)
    PUNTO_COMA      reduce using rule 46 (instruccion -> array_length_boolean .)
    D_LLAVE         reduce using rule 46 (instruccion -> array_length_boolean .)
    VAR             reduce using rule 46 (instruccion -> array_length_boolean .)
    ID              reduce using rule 46 (instruccion -> array_length_boolean .)
    IF              reduce using rule 46 (instruccion -> array_length_boolean .)
    ELSE            reduce using rule 46 (instruccion -> array_length_boolean .)
    ELSEIF          reduce using rule 46 (instruccion -> array_length_boolean .)
    FOR             reduce using rule 46 (instruccion -> array_length_boolean .)
    MAP             reduce using rule 46 (instruccion -> array_length_boolean .)
    MAKE            reduce using rule 46 (instruccion -> array_length_boolean .)
    TYPE            reduce using rule 46 (instruccion -> array_length_boolean .)
    I_PARENTESIS    reduce using rule 46 (instruccion -> array_length_boolean .)
    PRINTLN         reduce using rule 46 (instruccion -> array_length_boolean .)
    PRINTF          reduce using rule 46 (instruccion -> array_length_boolean .)
    PRINT           reduce using rule 46 (instruccion -> array_length_boolean .)
    I_CORCHETE      reduce using rule 46 (instruccion -> array_length_boolean .)
    INT             reduce using rule 46 (instruccion -> array_length_boolean .)
    DOUBLE          reduce using rule 46 (instruccion -> array_length_boolean .)
    STRING          reduce using rule 46 (instruccion -> array_length_boolean .)
    BOOLEAN         reduce using rule 46 (instruccion -> array_length_boolean .)
    RETURN          reduce using rule 46 (instruccion -> array_length_boolean .)
    FUNC            reduce using rule 46 (instruccion -> array_length_boolean .)


state 25

    (47) instruccion -> array_con_valores_int .

    $end            reduce using rule 47 (instruccion -> array_con_valores_int .)
    PUNTO_COMA      reduce using rule 47 (instruccion -> array_con_valores_int .)
    D_LLAVE         reduce using rule 47 (instruccion -> array_con_valores_int .)
    VAR             reduce using rule 47 (instruccion -> array_con_valores_int .)
    ID              reduce using rule 47 (instruccion -> array_con_valores_int .)
    IF              reduce using rule 47 (instruccion -> array_con_valores_int .)
    ELSE            reduce using rule 47 (instruccion -> array_con_valores_int .)
    ELSEIF          reduce using rule 47 (instruccion -> array_con_valores_int .)
    FOR             reduce using rule 47 (instruccion -> array_con_valores_int .)
    MAP             reduce using rule 47 (instruccion -> array_con_valores_int .)
    MAKE            reduce using rule 47 (instruccion -> array_con_valores_int .)
    TYPE            reduce using rule 47 (instruccion -> array_con_valores_int .)
    I_PARENTESIS    reduce using rule 47 (instruccion -> array_con_valores_int .)
    PRINTLN         reduce using rule 47 (instruccion -> array_con_valores_int .)
    PRINTF          reduce using rule 47 (instruccion -> array_con_valores_int .)
    PRINT           reduce using rule 47 (instruccion -> array_con_valores_int .)
    I_CORCHETE      reduce using rule 47 (instruccion -> array_con_valores_int .)
    INT             reduce using rule 47 (instruccion -> array_con_valores_int .)
    DOUBLE          reduce using rule 47 (instruccion -> array_con_valores_int .)
    STRING          reduce using rule 47 (instruccion -> array_con_valores_int .)
    BOOLEAN         reduce using rule 47 (instruccion -> array_con_valores_int .)
    RETURN          reduce using rule 47 (instruccion -> array_con_valores_int .)
    FUNC            reduce using rule 47 (instruccion -> array_con_valores_int .)


state 26

    (48) instruccion -> array_con_valores_double .

    $end            reduce using rule 48 (instruccion -> array_con_valores_double .)
    PUNTO_COMA      reduce using rule 48 (instruccion -> array_con_valores_double .)
    D_LLAVE         reduce using rule 48 (instruccion -> array_con_valores_double .)
    VAR             reduce using rule 48 (instruccion -> array_con_valores_double .)
    ID              reduce using rule 48 (instruccion -> array_con_valores_double .)
    IF              reduce using rule 48 (instruccion -> array_con_valores_double .)
    ELSE            reduce using rule 48 (instruccion -> array_con_valores_double .)
    ELSEIF          reduce using rule 48 (instruccion -> array_con_valores_double .)
    FOR             reduce using rule 48 (instruccion -> array_con_valores_double .)
    MAP             reduce using rule 48 (instruccion -> array_con_valores_double .)
    MAKE            reduce using rule 48 (instruccion -> array_con_valores_double .)
    TYPE            reduce using rule 48 (instruccion -> array_con_valores_double .)
    I_PARENTESIS    reduce using rule 48 (instruccion -> array_con_valores_double .)
    PRINTLN         reduce using rule 48 (instruccion -> array_con_valores_double .)
    PRINTF          reduce using rule 48 (instruccion -> array_con_valores_double .)
    PRINT           reduce using rule 48 (instruccion -> array_con_valores_double .)
    I_CORCHETE      reduce using rule 48 (instruccion -> array_con_valores_double .)
    INT             reduce using rule 48 (instruccion -> array_con_valores_double .)
    DOUBLE          reduce using rule 48 (instruccion -> array_con_valores_double .)
    STRING          reduce using rule 48 (instruccion -> array_con_valores_double .)
    BOOLEAN         reduce using rule 48 (instruccion -> array_con_valores_double .)
    RETURN          reduce using rule 48 (instruccion -> array_con_valores_double .)
    FUNC            reduce using rule 48 (instruccion -> array_con_valores_double .)


state 27

    (49) instruccion -> array_con_valores_string .

    $end            reduce using rule 49 (instruccion -> array_con_valores_string .)
    PUNTO_COMA      reduce using rule 49 (instruccion -> array_con_valores_string .)
    D_LLAVE         reduce using rule 49 (instruccion -> array_con_valores_string .)
    VAR             reduce using rule 49 (instruccion -> array_con_valores_string .)
    ID              reduce using rule 49 (instruccion -> array_con_valores_string .)
    IF              reduce using rule 49 (instruccion -> array_con_valores_string .)
    ELSE            reduce using rule 49 (instruccion -> array_con_valores_string .)
    ELSEIF          reduce using rule 49 (instruccion -> array_con_valores_string .)
    FOR             reduce using rule 49 (instruccion -> array_con_valores_string .)
    MAP             reduce using rule 49 (instruccion -> array_con_valores_string .)
    MAKE            reduce using rule 49 (instruccion -> array_con_valores_string .)
    TYPE            reduce using rule 49 (instruccion -> array_con_valores_string .)
    I_PARENTESIS    reduce using rule 49 (instruccion -> array_con_valores_string .)
    PRINTLN         reduce using rule 49 (instruccion -> array_con_valores_string .)
    PRINTF          reduce using rule 49 (instruccion -> array_con_valores_string .)
    PRINT           reduce using rule 49 (instruccion -> array_con_valores_string .)
    I_CORCHETE      reduce using rule 49 (instruccion -> array_con_valores_string .)
    INT             reduce using rule 49 (instruccion -> array_con_valores_string .)
    DOUBLE          reduce using rule 49 (instruccion -> array_con_valores_string .)
    STRING          reduce using rule 49 (instruccion -> array_con_valores_string .)
    BOOLEAN         reduce using rule 49 (instruccion -> array_con_valores_string .)
    RETURN          reduce using rule 49 (instruccion -> array_con_valores_string .)
    FUNC            reduce using rule 49 (instruccion -> array_con_valores_string .)


state 28

    (50) instruccion -> array_con_valores_boolean .

    $end            reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    PUNTO_COMA      reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    D_LLAVE         reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    VAR             reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    ID              reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    IF              reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    ELSE            reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    ELSEIF          reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    FOR             reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    MAP             reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    MAKE            reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    TYPE            reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    I_PARENTESIS    reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    PRINTLN         reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    PRINTF          reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    PRINT           reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    I_CORCHETE      reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    INT             reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    DOUBLE          reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    STRING          reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    BOOLEAN         reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    RETURN          reduce using rule 50 (instruccion -> array_con_valores_boolean .)
    FUNC            reduce using rule 50 (instruccion -> array_con_valores_boolean .)


state 29

    (51) instruccion -> array_length_con_valores_int .

    $end            reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    PUNTO_COMA      reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    D_LLAVE         reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    VAR             reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    ID              reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    IF              reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    ELSE            reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    ELSEIF          reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    FOR             reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    MAP             reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    MAKE            reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    TYPE            reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    I_PARENTESIS    reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    PRINTLN         reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    PRINTF          reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    PRINT           reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    I_CORCHETE      reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    INT             reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    DOUBLE          reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    STRING          reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    BOOLEAN         reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    RETURN          reduce using rule 51 (instruccion -> array_length_con_valores_int .)
    FUNC            reduce using rule 51 (instruccion -> array_length_con_valores_int .)


state 30

    (52) instruccion -> array_length_con_valores_double .

    $end            reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    PUNTO_COMA      reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    D_LLAVE         reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    VAR             reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    ID              reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    IF              reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    ELSE            reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    ELSEIF          reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    FOR             reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    MAP             reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    MAKE            reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    TYPE            reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    I_PARENTESIS    reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    PRINTLN         reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    PRINTF          reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    PRINT           reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    I_CORCHETE      reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    INT             reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    DOUBLE          reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    STRING          reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    BOOLEAN         reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    RETURN          reduce using rule 52 (instruccion -> array_length_con_valores_double .)
    FUNC            reduce using rule 52 (instruccion -> array_length_con_valores_double .)


state 31

    (53) instruccion -> array_length_con_valores_string .

    $end            reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    PUNTO_COMA      reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    D_LLAVE         reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    VAR             reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    ID              reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    IF              reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    ELSE            reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    ELSEIF          reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    FOR             reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    MAP             reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    MAKE            reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    TYPE            reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    I_PARENTESIS    reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    PRINTLN         reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    PRINTF          reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    PRINT           reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    I_CORCHETE      reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    INT             reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    DOUBLE          reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    STRING          reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    BOOLEAN         reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    RETURN          reduce using rule 53 (instruccion -> array_length_con_valores_string .)
    FUNC            reduce using rule 53 (instruccion -> array_length_con_valores_string .)


state 32

    (54) instruccion -> array_length_con_valores_boolean .

    $end            reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    PUNTO_COMA      reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    D_LLAVE         reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    VAR             reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    ID              reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    IF              reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    ELSE            reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    ELSEIF          reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    FOR             reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    MAP             reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    MAKE            reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    TYPE            reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    I_PARENTESIS    reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    PRINTLN         reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    PRINTF          reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    PRINT           reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    I_CORCHETE      reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    INT             reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    DOUBLE          reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    STRING          reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    BOOLEAN         reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    RETURN          reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)
    FUNC            reduce using rule 54 (instruccion -> array_length_con_valores_boolean .)


state 33

    (71) instruccion -> MAP . I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (73) instruccion -> MAP . I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE

    I_CORCHETE      shift and go to state 94


state 34

    (55) array_int -> I_CORCHETE . D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> I_CORCHETE . D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> I_CORCHETE . D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> I_CORCHETE . D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> I_CORCHETE . D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> I_CORCHETE . D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> I_CORCHETE . D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> I_CORCHETE . D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (111) array_length -> I_CORCHETE . INT D_CORCHETE

    D_CORCHETE      shift and go to state 95
    INT             shift and go to state 96


state 35

    (72) instruccion -> MAKE . I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS

    I_PARENTESIS    shift and go to state 97


state 36

    (74) instruccion -> TYPE . ID STRUCT I_LLAVE atributos_struct D_LLAVE

    ID              shift and go to state 98


state 37

    (78) instruccion -> init_struct .

    $end            reduce using rule 78 (instruccion -> init_struct .)
    PUNTO_COMA      reduce using rule 78 (instruccion -> init_struct .)
    D_LLAVE         reduce using rule 78 (instruccion -> init_struct .)
    VAR             reduce using rule 78 (instruccion -> init_struct .)
    ID              reduce using rule 78 (instruccion -> init_struct .)
    IF              reduce using rule 78 (instruccion -> init_struct .)
    ELSE            reduce using rule 78 (instruccion -> init_struct .)
    ELSEIF          reduce using rule 78 (instruccion -> init_struct .)
    FOR             reduce using rule 78 (instruccion -> init_struct .)
    MAP             reduce using rule 78 (instruccion -> init_struct .)
    MAKE            reduce using rule 78 (instruccion -> init_struct .)
    TYPE            reduce using rule 78 (instruccion -> init_struct .)
    I_PARENTESIS    reduce using rule 78 (instruccion -> init_struct .)
    PRINTLN         reduce using rule 78 (instruccion -> init_struct .)
    PRINTF          reduce using rule 78 (instruccion -> init_struct .)
    PRINT           reduce using rule 78 (instruccion -> init_struct .)
    I_CORCHETE      reduce using rule 78 (instruccion -> init_struct .)
    INT             reduce using rule 78 (instruccion -> init_struct .)
    DOUBLE          reduce using rule 78 (instruccion -> init_struct .)
    STRING          reduce using rule 78 (instruccion -> init_struct .)
    BOOLEAN         reduce using rule 78 (instruccion -> init_struct .)
    RETURN          reduce using rule 78 (instruccion -> init_struct .)
    FUNC            reduce using rule 78 (instruccion -> init_struct .)


state 38

    (23) funcion -> FUNC . ID cuerpo_fun

    ID              shift and go to state 99


state 39

    (88) expression -> resultado .

    ADICION         reduce using rule 88 (expression -> resultado .)
    RESTA           reduce using rule 88 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 88 (expression -> resultado .)
    DIVISION        reduce using rule 88 (expression -> resultado .)
    MODULO          reduce using rule 88 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 88 (expression -> resultado .)
    IGUAL           reduce using rule 88 (expression -> resultado .)
    DIFERENTE       reduce using rule 88 (expression -> resultado .)
    MAYOR           reduce using rule 88 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 88 (expression -> resultado .)
    MENOR           reduce using rule 88 (expression -> resultado .)
    $end            reduce using rule 88 (expression -> resultado .)
    PUNTO_COMA      reduce using rule 88 (expression -> resultado .)
    D_PARENTESIS    reduce using rule 88 (expression -> resultado .)
    D_LLAVE         reduce using rule 88 (expression -> resultado .)
    VAR             reduce using rule 88 (expression -> resultado .)
    ID              reduce using rule 88 (expression -> resultado .)
    IF              reduce using rule 88 (expression -> resultado .)
    ELSE            reduce using rule 88 (expression -> resultado .)
    ELSEIF          reduce using rule 88 (expression -> resultado .)
    FOR             reduce using rule 88 (expression -> resultado .)
    MAP             reduce using rule 88 (expression -> resultado .)
    MAKE            reduce using rule 88 (expression -> resultado .)
    TYPE            reduce using rule 88 (expression -> resultado .)
    I_PARENTESIS    reduce using rule 88 (expression -> resultado .)
    PRINTLN         reduce using rule 88 (expression -> resultado .)
    PRINTF          reduce using rule 88 (expression -> resultado .)
    PRINT           reduce using rule 88 (expression -> resultado .)
    I_CORCHETE      reduce using rule 88 (expression -> resultado .)
    INT             reduce using rule 88 (expression -> resultado .)
    DOUBLE          reduce using rule 88 (expression -> resultado .)
    STRING          reduce using rule 88 (expression -> resultado .)
    BOOLEAN         reduce using rule 88 (expression -> resultado .)
    RETURN          reduce using rule 88 (expression -> resultado .)
    FUNC            reduce using rule 88 (expression -> resultado .)
    COMA            reduce using rule 88 (expression -> resultado .)


state 40

    (104) print -> PRINTLN .

    I_PARENTESIS    reduce using rule 104 (print -> PRINTLN .)


state 41

    (105) print -> PRINTF .

    I_PARENTESIS    reduce using rule 105 (print -> PRINTF .)


state 42

    (106) print -> PRINT .

    I_PARENTESIS    reduce using rule 106 (print -> PRINT .)


state 43

    (146) valor_boolean -> BOOLEAN .

    COMA            reduce using rule 146 (valor_boolean -> BOOLEAN .)
    ADICION         reduce using rule 146 (valor_boolean -> BOOLEAN .)
    RESTA           reduce using rule 146 (valor_boolean -> BOOLEAN .)
    MULTIPLICACION  reduce using rule 146 (valor_boolean -> BOOLEAN .)
    DIVISION        reduce using rule 146 (valor_boolean -> BOOLEAN .)
    MODULO          reduce using rule 146 (valor_boolean -> BOOLEAN .)
    MENOR_IGUAL     reduce using rule 146 (valor_boolean -> BOOLEAN .)
    IGUAL           reduce using rule 146 (valor_boolean -> BOOLEAN .)
    DIFERENTE       reduce using rule 146 (valor_boolean -> BOOLEAN .)
    MAYOR           reduce using rule 146 (valor_boolean -> BOOLEAN .)
    MAYOR_IGUAL     reduce using rule 146 (valor_boolean -> BOOLEAN .)
    MENOR           reduce using rule 146 (valor_boolean -> BOOLEAN .)
    $end            reduce using rule 146 (valor_boolean -> BOOLEAN .)
    I_LLAVE         reduce using rule 146 (valor_boolean -> BOOLEAN .)
    PUNTO_COMA      reduce using rule 146 (valor_boolean -> BOOLEAN .)
    D_PARENTESIS    reduce using rule 146 (valor_boolean -> BOOLEAN .)
    D_LLAVE         reduce using rule 146 (valor_boolean -> BOOLEAN .)
    VAR             reduce using rule 146 (valor_boolean -> BOOLEAN .)
    ID              reduce using rule 146 (valor_boolean -> BOOLEAN .)
    IF              reduce using rule 146 (valor_boolean -> BOOLEAN .)
    ELSE            reduce using rule 146 (valor_boolean -> BOOLEAN .)
    ELSEIF          reduce using rule 146 (valor_boolean -> BOOLEAN .)
    FOR             reduce using rule 146 (valor_boolean -> BOOLEAN .)
    MAP             reduce using rule 146 (valor_boolean -> BOOLEAN .)
    MAKE            reduce using rule 146 (valor_boolean -> BOOLEAN .)
    TYPE            reduce using rule 146 (valor_boolean -> BOOLEAN .)
    I_PARENTESIS    reduce using rule 146 (valor_boolean -> BOOLEAN .)
    PRINTLN         reduce using rule 146 (valor_boolean -> BOOLEAN .)
    PRINTF          reduce using rule 146 (valor_boolean -> BOOLEAN .)
    PRINT           reduce using rule 146 (valor_boolean -> BOOLEAN .)
    I_CORCHETE      reduce using rule 146 (valor_boolean -> BOOLEAN .)
    INT             reduce using rule 146 (valor_boolean -> BOOLEAN .)
    DOUBLE          reduce using rule 146 (valor_boolean -> BOOLEAN .)
    STRING          reduce using rule 146 (valor_boolean -> BOOLEAN .)
    BOOLEAN         reduce using rule 146 (valor_boolean -> BOOLEAN .)
    RETURN          reduce using rule 146 (valor_boolean -> BOOLEAN .)
    FUNC            reduce using rule 146 (valor_boolean -> BOOLEAN .)
    DOS_PUNTOS      reduce using rule 146 (valor_boolean -> BOOLEAN .)


state 44

    (59) array_length_int -> array_length . INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> array_length . floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> array_length . STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> array_length . BOOLEAN I_LLAVE D_LLAVE
    (67) array_length_con_valores_int -> array_length . INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> array_length . floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> array_length . STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> array_length . BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    INTEGER         shift and go to state 100
    STRINGTYPE      shift and go to state 102
    BOOLEAN         shift and go to state 103
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    floating_type                  shift and go to state 101

state 45

    (143) valor_int -> INT .

    COMA            reduce using rule 143 (valor_int -> INT .)
    ADICION         reduce using rule 143 (valor_int -> INT .)
    RESTA           reduce using rule 143 (valor_int -> INT .)
    MULTIPLICACION  reduce using rule 143 (valor_int -> INT .)
    DIVISION        reduce using rule 143 (valor_int -> INT .)
    MODULO          reduce using rule 143 (valor_int -> INT .)
    MENOR_IGUAL     reduce using rule 143 (valor_int -> INT .)
    IGUAL           reduce using rule 143 (valor_int -> INT .)
    DIFERENTE       reduce using rule 143 (valor_int -> INT .)
    MAYOR           reduce using rule 143 (valor_int -> INT .)
    MAYOR_IGUAL     reduce using rule 143 (valor_int -> INT .)
    MENOR           reduce using rule 143 (valor_int -> INT .)
    $end            reduce using rule 143 (valor_int -> INT .)
    I_LLAVE         reduce using rule 143 (valor_int -> INT .)
    PUNTO_COMA      reduce using rule 143 (valor_int -> INT .)
    D_PARENTESIS    reduce using rule 143 (valor_int -> INT .)
    D_LLAVE         reduce using rule 143 (valor_int -> INT .)
    VAR             reduce using rule 143 (valor_int -> INT .)
    ID              reduce using rule 143 (valor_int -> INT .)
    IF              reduce using rule 143 (valor_int -> INT .)
    ELSE            reduce using rule 143 (valor_int -> INT .)
    ELSEIF          reduce using rule 143 (valor_int -> INT .)
    FOR             reduce using rule 143 (valor_int -> INT .)
    MAP             reduce using rule 143 (valor_int -> INT .)
    MAKE            reduce using rule 143 (valor_int -> INT .)
    TYPE            reduce using rule 143 (valor_int -> INT .)
    I_PARENTESIS    reduce using rule 143 (valor_int -> INT .)
    PRINTLN         reduce using rule 143 (valor_int -> INT .)
    PRINTF          reduce using rule 143 (valor_int -> INT .)
    PRINT           reduce using rule 143 (valor_int -> INT .)
    I_CORCHETE      reduce using rule 143 (valor_int -> INT .)
    INT             reduce using rule 143 (valor_int -> INT .)
    DOUBLE          reduce using rule 143 (valor_int -> INT .)
    STRING          reduce using rule 143 (valor_int -> INT .)
    BOOLEAN         reduce using rule 143 (valor_int -> INT .)
    RETURN          reduce using rule 143 (valor_int -> INT .)
    FUNC            reduce using rule 143 (valor_int -> INT .)
    DOS_PUNTOS      reduce using rule 143 (valor_int -> INT .)


state 46

    (138) valor -> valor_int .

    COMA            reduce using rule 138 (valor -> valor_int .)
    ADICION         reduce using rule 138 (valor -> valor_int .)
    RESTA           reduce using rule 138 (valor -> valor_int .)
    MULTIPLICACION  reduce using rule 138 (valor -> valor_int .)
    DIVISION        reduce using rule 138 (valor -> valor_int .)
    MODULO          reduce using rule 138 (valor -> valor_int .)
    MENOR_IGUAL     reduce using rule 138 (valor -> valor_int .)
    IGUAL           reduce using rule 138 (valor -> valor_int .)
    DIFERENTE       reduce using rule 138 (valor -> valor_int .)
    MAYOR           reduce using rule 138 (valor -> valor_int .)
    MAYOR_IGUAL     reduce using rule 138 (valor -> valor_int .)
    MENOR           reduce using rule 138 (valor -> valor_int .)
    $end            reduce using rule 138 (valor -> valor_int .)
    I_LLAVE         reduce using rule 138 (valor -> valor_int .)
    PUNTO_COMA      reduce using rule 138 (valor -> valor_int .)
    D_PARENTESIS    reduce using rule 138 (valor -> valor_int .)
    D_LLAVE         reduce using rule 138 (valor -> valor_int .)
    VAR             reduce using rule 138 (valor -> valor_int .)
    ID              reduce using rule 138 (valor -> valor_int .)
    IF              reduce using rule 138 (valor -> valor_int .)
    ELSE            reduce using rule 138 (valor -> valor_int .)
    ELSEIF          reduce using rule 138 (valor -> valor_int .)
    FOR             reduce using rule 138 (valor -> valor_int .)
    MAP             reduce using rule 138 (valor -> valor_int .)
    MAKE            reduce using rule 138 (valor -> valor_int .)
    TYPE            reduce using rule 138 (valor -> valor_int .)
    I_PARENTESIS    reduce using rule 138 (valor -> valor_int .)
    PRINTLN         reduce using rule 138 (valor -> valor_int .)
    PRINTF          reduce using rule 138 (valor -> valor_int .)
    PRINT           reduce using rule 138 (valor -> valor_int .)
    I_CORCHETE      reduce using rule 138 (valor -> valor_int .)
    INT             reduce using rule 138 (valor -> valor_int .)
    DOUBLE          reduce using rule 138 (valor -> valor_int .)
    STRING          reduce using rule 138 (valor -> valor_int .)
    BOOLEAN         reduce using rule 138 (valor -> valor_int .)
    RETURN          reduce using rule 138 (valor -> valor_int .)
    FUNC            reduce using rule 138 (valor -> valor_int .)
    DOS_PUNTOS      reduce using rule 138 (valor -> valor_int .)


state 47

    (139) valor -> valor_double .

    COMA            reduce using rule 139 (valor -> valor_double .)
    ADICION         reduce using rule 139 (valor -> valor_double .)
    RESTA           reduce using rule 139 (valor -> valor_double .)
    MULTIPLICACION  reduce using rule 139 (valor -> valor_double .)
    DIVISION        reduce using rule 139 (valor -> valor_double .)
    MODULO          reduce using rule 139 (valor -> valor_double .)
    MENOR_IGUAL     reduce using rule 139 (valor -> valor_double .)
    IGUAL           reduce using rule 139 (valor -> valor_double .)
    DIFERENTE       reduce using rule 139 (valor -> valor_double .)
    MAYOR           reduce using rule 139 (valor -> valor_double .)
    MAYOR_IGUAL     reduce using rule 139 (valor -> valor_double .)
    MENOR           reduce using rule 139 (valor -> valor_double .)
    $end            reduce using rule 139 (valor -> valor_double .)
    I_LLAVE         reduce using rule 139 (valor -> valor_double .)
    PUNTO_COMA      reduce using rule 139 (valor -> valor_double .)
    D_PARENTESIS    reduce using rule 139 (valor -> valor_double .)
    D_LLAVE         reduce using rule 139 (valor -> valor_double .)
    VAR             reduce using rule 139 (valor -> valor_double .)
    ID              reduce using rule 139 (valor -> valor_double .)
    IF              reduce using rule 139 (valor -> valor_double .)
    ELSE            reduce using rule 139 (valor -> valor_double .)
    ELSEIF          reduce using rule 139 (valor -> valor_double .)
    FOR             reduce using rule 139 (valor -> valor_double .)
    MAP             reduce using rule 139 (valor -> valor_double .)
    MAKE            reduce using rule 139 (valor -> valor_double .)
    TYPE            reduce using rule 139 (valor -> valor_double .)
    I_PARENTESIS    reduce using rule 139 (valor -> valor_double .)
    PRINTLN         reduce using rule 139 (valor -> valor_double .)
    PRINTF          reduce using rule 139 (valor -> valor_double .)
    PRINT           reduce using rule 139 (valor -> valor_double .)
    I_CORCHETE      reduce using rule 139 (valor -> valor_double .)
    INT             reduce using rule 139 (valor -> valor_double .)
    DOUBLE          reduce using rule 139 (valor -> valor_double .)
    STRING          reduce using rule 139 (valor -> valor_double .)
    BOOLEAN         reduce using rule 139 (valor -> valor_double .)
    RETURN          reduce using rule 139 (valor -> valor_double .)
    FUNC            reduce using rule 139 (valor -> valor_double .)
    DOS_PUNTOS      reduce using rule 139 (valor -> valor_double .)


state 48

    (140) valor -> valor_string .

    COMA            reduce using rule 140 (valor -> valor_string .)
    ADICION         reduce using rule 140 (valor -> valor_string .)
    RESTA           reduce using rule 140 (valor -> valor_string .)
    MULTIPLICACION  reduce using rule 140 (valor -> valor_string .)
    DIVISION        reduce using rule 140 (valor -> valor_string .)
    MODULO          reduce using rule 140 (valor -> valor_string .)
    MENOR_IGUAL     reduce using rule 140 (valor -> valor_string .)
    IGUAL           reduce using rule 140 (valor -> valor_string .)
    DIFERENTE       reduce using rule 140 (valor -> valor_string .)
    MAYOR           reduce using rule 140 (valor -> valor_string .)
    MAYOR_IGUAL     reduce using rule 140 (valor -> valor_string .)
    MENOR           reduce using rule 140 (valor -> valor_string .)
    $end            reduce using rule 140 (valor -> valor_string .)
    I_LLAVE         reduce using rule 140 (valor -> valor_string .)
    PUNTO_COMA      reduce using rule 140 (valor -> valor_string .)
    D_PARENTESIS    reduce using rule 140 (valor -> valor_string .)
    D_LLAVE         reduce using rule 140 (valor -> valor_string .)
    VAR             reduce using rule 140 (valor -> valor_string .)
    ID              reduce using rule 140 (valor -> valor_string .)
    IF              reduce using rule 140 (valor -> valor_string .)
    ELSE            reduce using rule 140 (valor -> valor_string .)
    ELSEIF          reduce using rule 140 (valor -> valor_string .)
    FOR             reduce using rule 140 (valor -> valor_string .)
    MAP             reduce using rule 140 (valor -> valor_string .)
    MAKE            reduce using rule 140 (valor -> valor_string .)
    TYPE            reduce using rule 140 (valor -> valor_string .)
    I_PARENTESIS    reduce using rule 140 (valor -> valor_string .)
    PRINTLN         reduce using rule 140 (valor -> valor_string .)
    PRINTF          reduce using rule 140 (valor -> valor_string .)
    PRINT           reduce using rule 140 (valor -> valor_string .)
    I_CORCHETE      reduce using rule 140 (valor -> valor_string .)
    INT             reduce using rule 140 (valor -> valor_string .)
    DOUBLE          reduce using rule 140 (valor -> valor_string .)
    STRING          reduce using rule 140 (valor -> valor_string .)
    BOOLEAN         reduce using rule 140 (valor -> valor_string .)
    RETURN          reduce using rule 140 (valor -> valor_string .)
    FUNC            reduce using rule 140 (valor -> valor_string .)
    DOS_PUNTOS      reduce using rule 140 (valor -> valor_string .)


state 49

    (141) valor -> valor_boolean .

    COMA            reduce using rule 141 (valor -> valor_boolean .)
    ADICION         reduce using rule 141 (valor -> valor_boolean .)
    RESTA           reduce using rule 141 (valor -> valor_boolean .)
    MULTIPLICACION  reduce using rule 141 (valor -> valor_boolean .)
    DIVISION        reduce using rule 141 (valor -> valor_boolean .)
    MODULO          reduce using rule 141 (valor -> valor_boolean .)
    MENOR_IGUAL     reduce using rule 141 (valor -> valor_boolean .)
    IGUAL           reduce using rule 141 (valor -> valor_boolean .)
    DIFERENTE       reduce using rule 141 (valor -> valor_boolean .)
    MAYOR           reduce using rule 141 (valor -> valor_boolean .)
    MAYOR_IGUAL     reduce using rule 141 (valor -> valor_boolean .)
    MENOR           reduce using rule 141 (valor -> valor_boolean .)
    $end            reduce using rule 141 (valor -> valor_boolean .)
    I_LLAVE         reduce using rule 141 (valor -> valor_boolean .)
    PUNTO_COMA      reduce using rule 141 (valor -> valor_boolean .)
    D_PARENTESIS    reduce using rule 141 (valor -> valor_boolean .)
    D_LLAVE         reduce using rule 141 (valor -> valor_boolean .)
    VAR             reduce using rule 141 (valor -> valor_boolean .)
    ID              reduce using rule 141 (valor -> valor_boolean .)
    IF              reduce using rule 141 (valor -> valor_boolean .)
    ELSE            reduce using rule 141 (valor -> valor_boolean .)
    ELSEIF          reduce using rule 141 (valor -> valor_boolean .)
    FOR             reduce using rule 141 (valor -> valor_boolean .)
    MAP             reduce using rule 141 (valor -> valor_boolean .)
    MAKE            reduce using rule 141 (valor -> valor_boolean .)
    TYPE            reduce using rule 141 (valor -> valor_boolean .)
    I_PARENTESIS    reduce using rule 141 (valor -> valor_boolean .)
    PRINTLN         reduce using rule 141 (valor -> valor_boolean .)
    PRINTF          reduce using rule 141 (valor -> valor_boolean .)
    PRINT           reduce using rule 141 (valor -> valor_boolean .)
    I_CORCHETE      reduce using rule 141 (valor -> valor_boolean .)
    INT             reduce using rule 141 (valor -> valor_boolean .)
    DOUBLE          reduce using rule 141 (valor -> valor_boolean .)
    STRING          reduce using rule 141 (valor -> valor_boolean .)
    BOOLEAN         reduce using rule 141 (valor -> valor_boolean .)
    RETURN          reduce using rule 141 (valor -> valor_boolean .)
    FUNC            reduce using rule 141 (valor -> valor_boolean .)
    DOS_PUNTOS      reduce using rule 141 (valor -> valor_boolean .)


state 50

    (142) valor -> valor_variable .

    COMA            reduce using rule 142 (valor -> valor_variable .)
    ADICION         reduce using rule 142 (valor -> valor_variable .)
    RESTA           reduce using rule 142 (valor -> valor_variable .)
    MULTIPLICACION  reduce using rule 142 (valor -> valor_variable .)
    DIVISION        reduce using rule 142 (valor -> valor_variable .)
    MODULO          reduce using rule 142 (valor -> valor_variable .)
    MENOR_IGUAL     reduce using rule 142 (valor -> valor_variable .)
    IGUAL           reduce using rule 142 (valor -> valor_variable .)
    DIFERENTE       reduce using rule 142 (valor -> valor_variable .)
    MAYOR           reduce using rule 142 (valor -> valor_variable .)
    MAYOR_IGUAL     reduce using rule 142 (valor -> valor_variable .)
    MENOR           reduce using rule 142 (valor -> valor_variable .)
    $end            reduce using rule 142 (valor -> valor_variable .)
    I_LLAVE         reduce using rule 142 (valor -> valor_variable .)
    PUNTO_COMA      reduce using rule 142 (valor -> valor_variable .)
    D_PARENTESIS    reduce using rule 142 (valor -> valor_variable .)
    D_LLAVE         reduce using rule 142 (valor -> valor_variable .)
    VAR             reduce using rule 142 (valor -> valor_variable .)
    ID              reduce using rule 142 (valor -> valor_variable .)
    IF              reduce using rule 142 (valor -> valor_variable .)
    ELSE            reduce using rule 142 (valor -> valor_variable .)
    ELSEIF          reduce using rule 142 (valor -> valor_variable .)
    FOR             reduce using rule 142 (valor -> valor_variable .)
    MAP             reduce using rule 142 (valor -> valor_variable .)
    MAKE            reduce using rule 142 (valor -> valor_variable .)
    TYPE            reduce using rule 142 (valor -> valor_variable .)
    I_PARENTESIS    reduce using rule 142 (valor -> valor_variable .)
    PRINTLN         reduce using rule 142 (valor -> valor_variable .)
    PRINTF          reduce using rule 142 (valor -> valor_variable .)
    PRINT           reduce using rule 142 (valor -> valor_variable .)
    I_CORCHETE      reduce using rule 142 (valor -> valor_variable .)
    INT             reduce using rule 142 (valor -> valor_variable .)
    DOUBLE          reduce using rule 142 (valor -> valor_variable .)
    STRING          reduce using rule 142 (valor -> valor_variable .)
    BOOLEAN         reduce using rule 142 (valor -> valor_variable .)
    RETURN          reduce using rule 142 (valor -> valor_variable .)
    FUNC            reduce using rule 142 (valor -> valor_variable .)
    DOS_PUNTOS      reduce using rule 142 (valor -> valor_variable .)


state 51

    (144) valor_double -> DOUBLE .

    COMA            reduce using rule 144 (valor_double -> DOUBLE .)
    ADICION         reduce using rule 144 (valor_double -> DOUBLE .)
    RESTA           reduce using rule 144 (valor_double -> DOUBLE .)
    MULTIPLICACION  reduce using rule 144 (valor_double -> DOUBLE .)
    DIVISION        reduce using rule 144 (valor_double -> DOUBLE .)
    MODULO          reduce using rule 144 (valor_double -> DOUBLE .)
    MENOR_IGUAL     reduce using rule 144 (valor_double -> DOUBLE .)
    IGUAL           reduce using rule 144 (valor_double -> DOUBLE .)
    DIFERENTE       reduce using rule 144 (valor_double -> DOUBLE .)
    MAYOR           reduce using rule 144 (valor_double -> DOUBLE .)
    MAYOR_IGUAL     reduce using rule 144 (valor_double -> DOUBLE .)
    MENOR           reduce using rule 144 (valor_double -> DOUBLE .)
    $end            reduce using rule 144 (valor_double -> DOUBLE .)
    I_LLAVE         reduce using rule 144 (valor_double -> DOUBLE .)
    PUNTO_COMA      reduce using rule 144 (valor_double -> DOUBLE .)
    D_PARENTESIS    reduce using rule 144 (valor_double -> DOUBLE .)
    D_LLAVE         reduce using rule 144 (valor_double -> DOUBLE .)
    VAR             reduce using rule 144 (valor_double -> DOUBLE .)
    ID              reduce using rule 144 (valor_double -> DOUBLE .)
    IF              reduce using rule 144 (valor_double -> DOUBLE .)
    ELSE            reduce using rule 144 (valor_double -> DOUBLE .)
    ELSEIF          reduce using rule 144 (valor_double -> DOUBLE .)
    FOR             reduce using rule 144 (valor_double -> DOUBLE .)
    MAP             reduce using rule 144 (valor_double -> DOUBLE .)
    MAKE            reduce using rule 144 (valor_double -> DOUBLE .)
    TYPE            reduce using rule 144 (valor_double -> DOUBLE .)
    I_PARENTESIS    reduce using rule 144 (valor_double -> DOUBLE .)
    PRINTLN         reduce using rule 144 (valor_double -> DOUBLE .)
    PRINTF          reduce using rule 144 (valor_double -> DOUBLE .)
    PRINT           reduce using rule 144 (valor_double -> DOUBLE .)
    I_CORCHETE      reduce using rule 144 (valor_double -> DOUBLE .)
    INT             reduce using rule 144 (valor_double -> DOUBLE .)
    DOUBLE          reduce using rule 144 (valor_double -> DOUBLE .)
    STRING          reduce using rule 144 (valor_double -> DOUBLE .)
    BOOLEAN         reduce using rule 144 (valor_double -> DOUBLE .)
    RETURN          reduce using rule 144 (valor_double -> DOUBLE .)
    FUNC            reduce using rule 144 (valor_double -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 144 (valor_double -> DOUBLE .)


state 52

    (145) valor_string -> STRING .

    COMA            reduce using rule 145 (valor_string -> STRING .)
    ADICION         reduce using rule 145 (valor_string -> STRING .)
    RESTA           reduce using rule 145 (valor_string -> STRING .)
    MULTIPLICACION  reduce using rule 145 (valor_string -> STRING .)
    DIVISION        reduce using rule 145 (valor_string -> STRING .)
    MODULO          reduce using rule 145 (valor_string -> STRING .)
    MENOR_IGUAL     reduce using rule 145 (valor_string -> STRING .)
    IGUAL           reduce using rule 145 (valor_string -> STRING .)
    DIFERENTE       reduce using rule 145 (valor_string -> STRING .)
    MAYOR           reduce using rule 145 (valor_string -> STRING .)
    MAYOR_IGUAL     reduce using rule 145 (valor_string -> STRING .)
    MENOR           reduce using rule 145 (valor_string -> STRING .)
    $end            reduce using rule 145 (valor_string -> STRING .)
    I_LLAVE         reduce using rule 145 (valor_string -> STRING .)
    PUNTO_COMA      reduce using rule 145 (valor_string -> STRING .)
    D_PARENTESIS    reduce using rule 145 (valor_string -> STRING .)
    D_LLAVE         reduce using rule 145 (valor_string -> STRING .)
    VAR             reduce using rule 145 (valor_string -> STRING .)
    ID              reduce using rule 145 (valor_string -> STRING .)
    IF              reduce using rule 145 (valor_string -> STRING .)
    ELSE            reduce using rule 145 (valor_string -> STRING .)
    ELSEIF          reduce using rule 145 (valor_string -> STRING .)
    FOR             reduce using rule 145 (valor_string -> STRING .)
    MAP             reduce using rule 145 (valor_string -> STRING .)
    MAKE            reduce using rule 145 (valor_string -> STRING .)
    TYPE            reduce using rule 145 (valor_string -> STRING .)
    I_PARENTESIS    reduce using rule 145 (valor_string -> STRING .)
    PRINTLN         reduce using rule 145 (valor_string -> STRING .)
    PRINTF          reduce using rule 145 (valor_string -> STRING .)
    PRINT           reduce using rule 145 (valor_string -> STRING .)
    I_CORCHETE      reduce using rule 145 (valor_string -> STRING .)
    INT             reduce using rule 145 (valor_string -> STRING .)
    DOUBLE          reduce using rule 145 (valor_string -> STRING .)
    STRING          reduce using rule 145 (valor_string -> STRING .)
    BOOLEAN         reduce using rule 145 (valor_string -> STRING .)
    RETURN          reduce using rule 145 (valor_string -> STRING .)
    FUNC            reduce using rule 145 (valor_string -> STRING .)
    DOS_PUNTOS      reduce using rule 145 (valor_string -> STRING .)


state 53

    (2) go -> funcion go .

    $end            reduce using rule 2 (go -> funcion go .)


state 54

    (91) resultado -> expression operacion_binaria . expression
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 70
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    expression                     shift and go to state 106
    valores                        shift and go to state 9
    resultado                      shift and go to state 39
    llamada_func                   shift and go to state 69
    valor                          shift and go to state 12
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 55

    (127) operacion_binaria -> ADICION .

    I_PARENTESIS    reduce using rule 127 (operacion_binaria -> ADICION .)
    ID              reduce using rule 127 (operacion_binaria -> ADICION .)
    INT             reduce using rule 127 (operacion_binaria -> ADICION .)
    DOUBLE          reduce using rule 127 (operacion_binaria -> ADICION .)
    STRING          reduce using rule 127 (operacion_binaria -> ADICION .)
    BOOLEAN         reduce using rule 127 (operacion_binaria -> ADICION .)


state 56

    (128) operacion_binaria -> RESTA .

    I_PARENTESIS    reduce using rule 128 (operacion_binaria -> RESTA .)
    ID              reduce using rule 128 (operacion_binaria -> RESTA .)
    INT             reduce using rule 128 (operacion_binaria -> RESTA .)
    DOUBLE          reduce using rule 128 (operacion_binaria -> RESTA .)
    STRING          reduce using rule 128 (operacion_binaria -> RESTA .)
    BOOLEAN         reduce using rule 128 (operacion_binaria -> RESTA .)


state 57

    (129) operacion_binaria -> MULTIPLICACION .

    I_PARENTESIS    reduce using rule 129 (operacion_binaria -> MULTIPLICACION .)
    ID              reduce using rule 129 (operacion_binaria -> MULTIPLICACION .)
    INT             reduce using rule 129 (operacion_binaria -> MULTIPLICACION .)
    DOUBLE          reduce using rule 129 (operacion_binaria -> MULTIPLICACION .)
    STRING          reduce using rule 129 (operacion_binaria -> MULTIPLICACION .)
    BOOLEAN         reduce using rule 129 (operacion_binaria -> MULTIPLICACION .)


state 58

    (130) operacion_binaria -> DIVISION .

    I_PARENTESIS    reduce using rule 130 (operacion_binaria -> DIVISION .)
    ID              reduce using rule 130 (operacion_binaria -> DIVISION .)
    INT             reduce using rule 130 (operacion_binaria -> DIVISION .)
    DOUBLE          reduce using rule 130 (operacion_binaria -> DIVISION .)
    STRING          reduce using rule 130 (operacion_binaria -> DIVISION .)
    BOOLEAN         reduce using rule 130 (operacion_binaria -> DIVISION .)


state 59

    (131) operacion_binaria -> MODULO .

    I_PARENTESIS    reduce using rule 131 (operacion_binaria -> MODULO .)
    ID              reduce using rule 131 (operacion_binaria -> MODULO .)
    INT             reduce using rule 131 (operacion_binaria -> MODULO .)
    DOUBLE          reduce using rule 131 (operacion_binaria -> MODULO .)
    STRING          reduce using rule 131 (operacion_binaria -> MODULO .)
    BOOLEAN         reduce using rule 131 (operacion_binaria -> MODULO .)


state 60

    (132) operacion_binaria -> MENOR_IGUAL .

    I_PARENTESIS    reduce using rule 132 (operacion_binaria -> MENOR_IGUAL .)
    ID              reduce using rule 132 (operacion_binaria -> MENOR_IGUAL .)
    INT             reduce using rule 132 (operacion_binaria -> MENOR_IGUAL .)
    DOUBLE          reduce using rule 132 (operacion_binaria -> MENOR_IGUAL .)
    STRING          reduce using rule 132 (operacion_binaria -> MENOR_IGUAL .)
    BOOLEAN         reduce using rule 132 (operacion_binaria -> MENOR_IGUAL .)


state 61

    (133) operacion_binaria -> IGUAL .

    I_PARENTESIS    reduce using rule 133 (operacion_binaria -> IGUAL .)
    ID              reduce using rule 133 (operacion_binaria -> IGUAL .)
    INT             reduce using rule 133 (operacion_binaria -> IGUAL .)
    DOUBLE          reduce using rule 133 (operacion_binaria -> IGUAL .)
    STRING          reduce using rule 133 (operacion_binaria -> IGUAL .)
    BOOLEAN         reduce using rule 133 (operacion_binaria -> IGUAL .)


state 62

    (134) operacion_binaria -> DIFERENTE .

    I_PARENTESIS    reduce using rule 134 (operacion_binaria -> DIFERENTE .)
    ID              reduce using rule 134 (operacion_binaria -> DIFERENTE .)
    INT             reduce using rule 134 (operacion_binaria -> DIFERENTE .)
    DOUBLE          reduce using rule 134 (operacion_binaria -> DIFERENTE .)
    STRING          reduce using rule 134 (operacion_binaria -> DIFERENTE .)
    BOOLEAN         reduce using rule 134 (operacion_binaria -> DIFERENTE .)


state 63

    (135) operacion_binaria -> MAYOR .

    I_PARENTESIS    reduce using rule 135 (operacion_binaria -> MAYOR .)
    ID              reduce using rule 135 (operacion_binaria -> MAYOR .)
    INT             reduce using rule 135 (operacion_binaria -> MAYOR .)
    DOUBLE          reduce using rule 135 (operacion_binaria -> MAYOR .)
    STRING          reduce using rule 135 (operacion_binaria -> MAYOR .)
    BOOLEAN         reduce using rule 135 (operacion_binaria -> MAYOR .)


state 64

    (136) operacion_binaria -> MAYOR_IGUAL .

    I_PARENTESIS    reduce using rule 136 (operacion_binaria -> MAYOR_IGUAL .)
    ID              reduce using rule 136 (operacion_binaria -> MAYOR_IGUAL .)
    INT             reduce using rule 136 (operacion_binaria -> MAYOR_IGUAL .)
    DOUBLE          reduce using rule 136 (operacion_binaria -> MAYOR_IGUAL .)
    STRING          reduce using rule 136 (operacion_binaria -> MAYOR_IGUAL .)
    BOOLEAN         reduce using rule 136 (operacion_binaria -> MAYOR_IGUAL .)


state 65

    (137) operacion_binaria -> MENOR .

    I_PARENTESIS    reduce using rule 137 (operacion_binaria -> MENOR .)
    ID              reduce using rule 137 (operacion_binaria -> MENOR .)
    INT             reduce using rule 137 (operacion_binaria -> MENOR .)
    DOUBLE          reduce using rule 137 (operacion_binaria -> MENOR .)
    STRING          reduce using rule 137 (operacion_binaria -> MENOR .)
    BOOLEAN         reduce using rule 137 (operacion_binaria -> MENOR .)


state 66

    (16) instruccion -> print I_PARENTESIS . valores D_PARENTESIS
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valores                        shift and go to state 107
    valor                          shift and go to state 12
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 67

    (90) expression -> I_PARENTESIS resultado . D_PARENTESIS
    (88) expression -> resultado .

    D_PARENTESIS    shift and go to state 108
    ADICION         reduce using rule 88 (expression -> resultado .)
    RESTA           reduce using rule 88 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 88 (expression -> resultado .)
    DIVISION        reduce using rule 88 (expression -> resultado .)
    MODULO          reduce using rule 88 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 88 (expression -> resultado .)
    IGUAL           reduce using rule 88 (expression -> resultado .)
    DIFERENTE       reduce using rule 88 (expression -> resultado .)
    MAYOR           reduce using rule 88 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 88 (expression -> resultado .)
    MENOR           reduce using rule 88 (expression -> resultado .)


state 68

    (91) resultado -> expression . operacion_binaria expression
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 54

state 69

    (89) expression -> llamada_func .

    ADICION         reduce using rule 89 (expression -> llamada_func .)
    RESTA           reduce using rule 89 (expression -> llamada_func .)
    MULTIPLICACION  reduce using rule 89 (expression -> llamada_func .)
    DIVISION        reduce using rule 89 (expression -> llamada_func .)
    MODULO          reduce using rule 89 (expression -> llamada_func .)
    MENOR_IGUAL     reduce using rule 89 (expression -> llamada_func .)
    IGUAL           reduce using rule 89 (expression -> llamada_func .)
    DIFERENTE       reduce using rule 89 (expression -> llamada_func .)
    MAYOR           reduce using rule 89 (expression -> llamada_func .)
    MAYOR_IGUAL     reduce using rule 89 (expression -> llamada_func .)
    MENOR           reduce using rule 89 (expression -> llamada_func .)
    $end            reduce using rule 89 (expression -> llamada_func .)
    D_PARENTESIS    reduce using rule 89 (expression -> llamada_func .)
    PUNTO_COMA      reduce using rule 89 (expression -> llamada_func .)
    D_LLAVE         reduce using rule 89 (expression -> llamada_func .)
    VAR             reduce using rule 89 (expression -> llamada_func .)
    ID              reduce using rule 89 (expression -> llamada_func .)
    IF              reduce using rule 89 (expression -> llamada_func .)
    ELSE            reduce using rule 89 (expression -> llamada_func .)
    ELSEIF          reduce using rule 89 (expression -> llamada_func .)
    FOR             reduce using rule 89 (expression -> llamada_func .)
    MAP             reduce using rule 89 (expression -> llamada_func .)
    MAKE            reduce using rule 89 (expression -> llamada_func .)
    TYPE            reduce using rule 89 (expression -> llamada_func .)
    I_PARENTESIS    reduce using rule 89 (expression -> llamada_func .)
    PRINTLN         reduce using rule 89 (expression -> llamada_func .)
    PRINTF          reduce using rule 89 (expression -> llamada_func .)
    PRINT           reduce using rule 89 (expression -> llamada_func .)
    I_CORCHETE      reduce using rule 89 (expression -> llamada_func .)
    INT             reduce using rule 89 (expression -> llamada_func .)
    DOUBLE          reduce using rule 89 (expression -> llamada_func .)
    STRING          reduce using rule 89 (expression -> llamada_func .)
    BOOLEAN         reduce using rule 89 (expression -> llamada_func .)
    RETURN          reduce using rule 89 (expression -> llamada_func .)
    FUNC            reduce using rule 89 (expression -> llamada_func .)
    COMA            reduce using rule 89 (expression -> llamada_func .)


state 70

    (30) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (147) valor_variable -> ID .

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    I_PARENTESIS    shift and go to state 73
    COMA            reduce using rule 147 (valor_variable -> ID .)
    ADICION         reduce using rule 147 (valor_variable -> ID .)
    RESTA           reduce using rule 147 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 147 (valor_variable -> ID .)
    DIVISION        reduce using rule 147 (valor_variable -> ID .)
    MODULO          reduce using rule 147 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    IGUAL           reduce using rule 147 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 147 (valor_variable -> ID .)
    MAYOR           reduce using rule 147 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    MENOR           reduce using rule 147 (valor_variable -> ID .)
    $end            reduce using rule 147 (valor_variable -> ID .)
    D_PARENTESIS    reduce using rule 147 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 147 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 147 (valor_variable -> ID .)
    VAR             reduce using rule 147 (valor_variable -> ID .)
    ID              reduce using rule 147 (valor_variable -> ID .)
    IF              reduce using rule 147 (valor_variable -> ID .)
    ELSE            reduce using rule 147 (valor_variable -> ID .)
    ELSEIF          reduce using rule 147 (valor_variable -> ID .)
    FOR             reduce using rule 147 (valor_variable -> ID .)
    MAP             reduce using rule 147 (valor_variable -> ID .)
    MAKE            reduce using rule 147 (valor_variable -> ID .)
    TYPE            reduce using rule 147 (valor_variable -> ID .)
    PRINTLN         reduce using rule 147 (valor_variable -> ID .)
    PRINTF          reduce using rule 147 (valor_variable -> ID .)
    PRINT           reduce using rule 147 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 147 (valor_variable -> ID .)
    INT             reduce using rule 147 (valor_variable -> ID .)
    DOUBLE          reduce using rule 147 (valor_variable -> ID .)
    STRING          reduce using rule 147 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 147 (valor_variable -> ID .)
    RETURN          reduce using rule 147 (valor_variable -> ID .)
    FUNC            reduce using rule 147 (valor_variable -> ID .)

  ! I_PARENTESIS    [ reduce using rule 147 (valor_variable -> ID .) ]


state 71

    (17) instruccion -> VAR ID . type ASIGNACION valor
    (18) instruccion -> VAR ID . ASIGNACION valor
    (19) instruccion -> VAR ID . ASIGNACION instruccion
    (20) instruccion -> VAR ID . array_type_spec ASIGNACION instruccion
    (79) init_struct -> VAR ID . ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (112) type -> . BOOL
    (113) type -> . STRINGTYPE
    (114) type -> . INTEGER
    (115) type -> . floating_type
    (107) array_type_spec -> . array_length INTEGER
    (108) array_type_spec -> . array_length STRINGTYPE
    (109) array_type_spec -> . array_length BOOLEAN
    (110) array_type_spec -> . array_length floating_type
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64
    (111) array_length -> . I_CORCHETE INT D_CORCHETE

    ASIGNACION      shift and go to state 111
    ID              shift and go to state 109
    BOOL            shift and go to state 113
    STRINGTYPE      shift and go to state 114
    INTEGER         shift and go to state 115
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105
    I_CORCHETE      shift and go to state 118

    type                           shift and go to state 110
    array_type_spec                shift and go to state 112
    floating_type                  shift and go to state 116
    array_length                   shift and go to state 117

state 72

    (21) instruccion -> ID asignacion . valor
    (22) instruccion -> ID asignacion . instruccion
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE

    VAR             shift and go to state 10
    ID              shift and go to state 119
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34

    valor                          shift and go to state 120
    instruccion                    shift and go to state 121
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44

state 73

    (30) llamada_func -> ID I_PARENTESIS . llamada_params D_PARENTESIS
    (31) llamada_params -> . expression
    (32) llamada_params -> . expression COMA llamada_params
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 70
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    llamada_params                 shift and go to state 122
    expression                     shift and go to state 123
    valores                        shift and go to state 9
    resultado                      shift and go to state 39
    llamada_func                   shift and go to state 69
    valor                          shift and go to state 12
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 74

    (92) resultado_inc_dec -> ID operador_matematico .

    $end            reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    PUNTO_COMA      reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    D_LLAVE         reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    VAR             reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    ID              reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    IF              reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    ELSE            reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    ELSEIF          reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    FOR             reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    MAP             reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    MAKE            reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    TYPE            reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    I_PARENTESIS    reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    PRINTLN         reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    PRINTF          reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    PRINT           reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    I_CORCHETE      reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    INT             reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    DOUBLE          reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    STRING          reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    BOOLEAN         reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    RETURN          reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)
    FUNC            reduce using rule 92 (resultado_inc_dec -> ID operador_matematico .)


state 75

    (80) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE valores D_LLAVE
    (124) asignacion -> DECLARACION_ASIGNACION .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 124
    VAR             reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    IF              reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    ELSE            reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    ELSEIF          reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    FOR             reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    MAP             reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    MAKE            reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    TYPE            reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    INT             reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    BOOLEAN         reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    I_PARENTESIS    reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTLN         reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTF          reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    PRINT           reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    I_CORCHETE      reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)

  ! ID              [ reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .) ]


state 76

    (120) asignacion -> ASIGNACION .

    VAR             reduce using rule 120 (asignacion -> ASIGNACION .)
    ID              reduce using rule 120 (asignacion -> ASIGNACION .)
    IF              reduce using rule 120 (asignacion -> ASIGNACION .)
    ELSE            reduce using rule 120 (asignacion -> ASIGNACION .)
    ELSEIF          reduce using rule 120 (asignacion -> ASIGNACION .)
    FOR             reduce using rule 120 (asignacion -> ASIGNACION .)
    MAP             reduce using rule 120 (asignacion -> ASIGNACION .)
    MAKE            reduce using rule 120 (asignacion -> ASIGNACION .)
    TYPE            reduce using rule 120 (asignacion -> ASIGNACION .)
    INT             reduce using rule 120 (asignacion -> ASIGNACION .)
    DOUBLE          reduce using rule 120 (asignacion -> ASIGNACION .)
    STRING          reduce using rule 120 (asignacion -> ASIGNACION .)
    BOOLEAN         reduce using rule 120 (asignacion -> ASIGNACION .)
    I_PARENTESIS    reduce using rule 120 (asignacion -> ASIGNACION .)
    PRINTLN         reduce using rule 120 (asignacion -> ASIGNACION .)
    PRINTF          reduce using rule 120 (asignacion -> ASIGNACION .)
    PRINT           reduce using rule 120 (asignacion -> ASIGNACION .)
    I_CORCHETE      reduce using rule 120 (asignacion -> ASIGNACION .)


state 77

    (121) asignacion -> ASIGNACION_ADICION .

    VAR             reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    ID              reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    IF              reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    ELSE            reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    ELSEIF          reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    FOR             reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    MAP             reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    MAKE            reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    TYPE            reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    INT             reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    DOUBLE          reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    STRING          reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    BOOLEAN         reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    I_PARENTESIS    reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    PRINTLN         reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    PRINTF          reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    PRINT           reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)
    I_CORCHETE      reduce using rule 121 (asignacion -> ASIGNACION_ADICION .)


state 78

    (122) asignacion -> ASIGNACION_RESTA .

    VAR             reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    ID              reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    IF              reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    ELSE            reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    ELSEIF          reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    FOR             reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    MAP             reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    MAKE            reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    TYPE            reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    INT             reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    DOUBLE          reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    STRING          reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    BOOLEAN         reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    I_PARENTESIS    reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    PRINTLN         reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    PRINTF          reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    PRINT           reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)
    I_CORCHETE      reduce using rule 122 (asignacion -> ASIGNACION_RESTA .)


state 79

    (123) asignacion -> ASIGNACION_MULTI .

    VAR             reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    ID              reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    IF              reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    ELSE            reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    ELSEIF          reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    FOR             reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    MAP             reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    MAKE            reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    TYPE            reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    INT             reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    DOUBLE          reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    STRING          reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    BOOLEAN         reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    I_PARENTESIS    reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    PRINTLN         reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    PRINTF          reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    PRINT           reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)
    I_CORCHETE      reduce using rule 123 (asignacion -> ASIGNACION_MULTI .)


state 80

    (125) asignacion -> ASIGNACION_DIVISION .

    VAR             reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    ID              reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    IF              reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    ELSE            reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    ELSEIF          reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    FOR             reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    MAP             reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    MAKE            reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    TYPE            reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    INT             reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    DOUBLE          reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    STRING          reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    BOOLEAN         reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    I_PARENTESIS    reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    PRINTLN         reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    PRINTF          reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    PRINT           reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)
    I_CORCHETE      reduce using rule 125 (asignacion -> ASIGNACION_DIVISION .)


state 81

    (126) asignacion -> ASIGNACION_MODULO .

    VAR             reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    ID              reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    IF              reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    ELSE            reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    ELSEIF          reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    FOR             reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    MAP             reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    MAKE            reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    TYPE            reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    INT             reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    DOUBLE          reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    STRING          reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    BOOLEAN         reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    I_PARENTESIS    reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    PRINTLN         reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    PRINTF          reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    PRINT           reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)
    I_CORCHETE      reduce using rule 126 (asignacion -> ASIGNACION_MODULO .)


state 82

    (118) operador_matematico -> INCREMENTO .

    $end            reduce using rule 118 (operador_matematico -> INCREMENTO .)
    D_LLAVE         reduce using rule 118 (operador_matematico -> INCREMENTO .)
    VAR             reduce using rule 118 (operador_matematico -> INCREMENTO .)
    ID              reduce using rule 118 (operador_matematico -> INCREMENTO .)
    IF              reduce using rule 118 (operador_matematico -> INCREMENTO .)
    ELSE            reduce using rule 118 (operador_matematico -> INCREMENTO .)
    ELSEIF          reduce using rule 118 (operador_matematico -> INCREMENTO .)
    FOR             reduce using rule 118 (operador_matematico -> INCREMENTO .)
    MAP             reduce using rule 118 (operador_matematico -> INCREMENTO .)
    MAKE            reduce using rule 118 (operador_matematico -> INCREMENTO .)
    TYPE            reduce using rule 118 (operador_matematico -> INCREMENTO .)
    I_PARENTESIS    reduce using rule 118 (operador_matematico -> INCREMENTO .)
    PRINTLN         reduce using rule 118 (operador_matematico -> INCREMENTO .)
    PRINTF          reduce using rule 118 (operador_matematico -> INCREMENTO .)
    PRINT           reduce using rule 118 (operador_matematico -> INCREMENTO .)
    I_CORCHETE      reduce using rule 118 (operador_matematico -> INCREMENTO .)
    INT             reduce using rule 118 (operador_matematico -> INCREMENTO .)
    DOUBLE          reduce using rule 118 (operador_matematico -> INCREMENTO .)
    STRING          reduce using rule 118 (operador_matematico -> INCREMENTO .)
    BOOLEAN         reduce using rule 118 (operador_matematico -> INCREMENTO .)
    RETURN          reduce using rule 118 (operador_matematico -> INCREMENTO .)
    FUNC            reduce using rule 118 (operador_matematico -> INCREMENTO .)
    PUNTO_COMA      reduce using rule 118 (operador_matematico -> INCREMENTO .)
    I_LLAVE         reduce using rule 118 (operador_matematico -> INCREMENTO .)


state 83

    (119) operador_matematico -> DECREMENTO .

    $end            reduce using rule 119 (operador_matematico -> DECREMENTO .)
    D_LLAVE         reduce using rule 119 (operador_matematico -> DECREMENTO .)
    VAR             reduce using rule 119 (operador_matematico -> DECREMENTO .)
    ID              reduce using rule 119 (operador_matematico -> DECREMENTO .)
    IF              reduce using rule 119 (operador_matematico -> DECREMENTO .)
    ELSE            reduce using rule 119 (operador_matematico -> DECREMENTO .)
    ELSEIF          reduce using rule 119 (operador_matematico -> DECREMENTO .)
    FOR             reduce using rule 119 (operador_matematico -> DECREMENTO .)
    MAP             reduce using rule 119 (operador_matematico -> DECREMENTO .)
    MAKE            reduce using rule 119 (operador_matematico -> DECREMENTO .)
    TYPE            reduce using rule 119 (operador_matematico -> DECREMENTO .)
    I_PARENTESIS    reduce using rule 119 (operador_matematico -> DECREMENTO .)
    PRINTLN         reduce using rule 119 (operador_matematico -> DECREMENTO .)
    PRINTF          reduce using rule 119 (operador_matematico -> DECREMENTO .)
    PRINT           reduce using rule 119 (operador_matematico -> DECREMENTO .)
    I_CORCHETE      reduce using rule 119 (operador_matematico -> DECREMENTO .)
    INT             reduce using rule 119 (operador_matematico -> DECREMENTO .)
    DOUBLE          reduce using rule 119 (operador_matematico -> DECREMENTO .)
    STRING          reduce using rule 119 (operador_matematico -> DECREMENTO .)
    BOOLEAN         reduce using rule 119 (operador_matematico -> DECREMENTO .)
    RETURN          reduce using rule 119 (operador_matematico -> DECREMENTO .)
    FUNC            reduce using rule 119 (operador_matematico -> DECREMENTO .)
    PUNTO_COMA      reduce using rule 119 (operador_matematico -> DECREMENTO .)
    I_LLAVE         reduce using rule 119 (operador_matematico -> DECREMENTO .)


state 84

    (94) valores -> valor COMA . valores
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valor                          shift and go to state 12
    valores                        shift and go to state 125
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 85

    (103) valor -> valor operacion_binaria . valor
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valor                          shift and go to state 126
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 86

    (33) instruccion -> IF condicion . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 127


state 87

    (84) condicion -> valor .
    (103) valor -> valor . operacion_binaria valor
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    I_LLAVE         reduce using rule 84 (condicion -> valor .)
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 85

state 88

    (85) condicion -> I_PARENTESIS . valor D_PARENTESIS
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valor                          shift and go to state 128
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 89

    (147) valor_variable -> ID .

    ADICION         reduce using rule 147 (valor_variable -> ID .)
    RESTA           reduce using rule 147 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 147 (valor_variable -> ID .)
    DIVISION        reduce using rule 147 (valor_variable -> ID .)
    MODULO          reduce using rule 147 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    IGUAL           reduce using rule 147 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 147 (valor_variable -> ID .)
    MAYOR           reduce using rule 147 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    MENOR           reduce using rule 147 (valor_variable -> ID .)
    I_LLAVE         reduce using rule 147 (valor_variable -> ID .)
    COMA            reduce using rule 147 (valor_variable -> ID .)
    D_PARENTESIS    reduce using rule 147 (valor_variable -> ID .)
    $end            reduce using rule 147 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 147 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 147 (valor_variable -> ID .)
    VAR             reduce using rule 147 (valor_variable -> ID .)
    ID              reduce using rule 147 (valor_variable -> ID .)
    IF              reduce using rule 147 (valor_variable -> ID .)
    ELSE            reduce using rule 147 (valor_variable -> ID .)
    ELSEIF          reduce using rule 147 (valor_variable -> ID .)
    FOR             reduce using rule 147 (valor_variable -> ID .)
    MAP             reduce using rule 147 (valor_variable -> ID .)
    MAKE            reduce using rule 147 (valor_variable -> ID .)
    TYPE            reduce using rule 147 (valor_variable -> ID .)
    I_PARENTESIS    reduce using rule 147 (valor_variable -> ID .)
    PRINTLN         reduce using rule 147 (valor_variable -> ID .)
    PRINTF          reduce using rule 147 (valor_variable -> ID .)
    PRINT           reduce using rule 147 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 147 (valor_variable -> ID .)
    INT             reduce using rule 147 (valor_variable -> ID .)
    DOUBLE          reduce using rule 147 (valor_variable -> ID .)
    STRING          reduce using rule 147 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 147 (valor_variable -> ID .)
    RETURN          reduce using rule 147 (valor_variable -> ID .)
    FUNC            reduce using rule 147 (valor_variable -> ID .)
    DOS_PUNTOS      reduce using rule 147 (valor_variable -> ID .)


state 90

    (34) instruccion -> ELSE I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_LLAVE         shift and go to state 129
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    body                           shift and go to state 130
    instruccion                    shift and go to state 131
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 91

    (35) instruccion -> ELSEIF condicion . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 132


state 92

    (36) instruccion -> FOR ID . DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (38) instruccion -> FOR ID . COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (21) instruccion -> ID . asignacion valor
    (22) instruccion -> ID . asignacion instruccion
    (30) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> ID . operador_matematico
    (80) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (147) valor_variable -> ID .
    (120) asignacion -> . ASIGNACION
    (121) asignacion -> . ASIGNACION_ADICION
    (122) asignacion -> . ASIGNACION_RESTA
    (123) asignacion -> . ASIGNACION_MULTI
    (124) asignacion -> . DECLARACION_ASIGNACION
    (125) asignacion -> . ASIGNACION_DIVISION
    (126) asignacion -> . ASIGNACION_MODULO
    (118) operador_matematico -> . INCREMENTO
    (119) operador_matematico -> . DECREMENTO

  ! shift/reduce conflict for COMA resolved as shift
    DECLARACION_ASIGNACION shift and go to state 133
    COMA            shift and go to state 134
    I_PARENTESIS    shift and go to state 73
    ADICION         reduce using rule 147 (valor_variable -> ID .)
    RESTA           reduce using rule 147 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 147 (valor_variable -> ID .)
    DIVISION        reduce using rule 147 (valor_variable -> ID .)
    MODULO          reduce using rule 147 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    IGUAL           reduce using rule 147 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 147 (valor_variable -> ID .)
    MAYOR           reduce using rule 147 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    MENOR           reduce using rule 147 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 147 (valor_variable -> ID .)
    ASIGNACION      shift and go to state 76
    ASIGNACION_ADICION shift and go to state 77
    ASIGNACION_RESTA shift and go to state 78
    ASIGNACION_MULTI shift and go to state 79
    ASIGNACION_DIVISION shift and go to state 80
    ASIGNACION_MODULO shift and go to state 81
    INCREMENTO      shift and go to state 82
    DECREMENTO      shift and go to state 83

  ! COMA            [ reduce using rule 147 (valor_variable -> ID .) ]

    asignacion                     shift and go to state 72
    operador_matematico            shift and go to state 74

state 93

    (37) instruccion -> FOR instruccion . PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE

    PUNTO_COMA      shift and go to state 135


state 94

    (71) instruccion -> MAP I_CORCHETE . type D_CORCHETE type I_LLAVE D_LLAVE
    (73) instruccion -> MAP I_CORCHETE . type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (112) type -> . BOOL
    (113) type -> . STRINGTYPE
    (114) type -> . INTEGER
    (115) type -> . floating_type
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    BOOL            shift and go to state 113
    STRINGTYPE      shift and go to state 114
    INTEGER         shift and go to state 115
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    type                           shift and go to state 136
    floating_type                  shift and go to state 116

state 95

    (55) array_int -> I_CORCHETE D_CORCHETE . INTEGER I_LLAVE D_LLAVE
    (56) array_double -> I_CORCHETE D_CORCHETE . floating_type I_LLAVE D_LLAVE
    (57) array_string -> I_CORCHETE D_CORCHETE . STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> I_CORCHETE D_CORCHETE . BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> I_CORCHETE D_CORCHETE . INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> I_CORCHETE D_CORCHETE . floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> I_CORCHETE D_CORCHETE . STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> I_CORCHETE D_CORCHETE . BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    INTEGER         shift and go to state 137
    STRINGTYPE      shift and go to state 139
    BOOLEAN         shift and go to state 140
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    floating_type                  shift and go to state 138

state 96

    (111) array_length -> I_CORCHETE INT . D_CORCHETE

    D_CORCHETE      shift and go to state 141


state 97

    (72) instruccion -> MAKE I_PARENTESIS . MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS

    MAP             shift and go to state 142


state 98

    (74) instruccion -> TYPE ID . STRUCT I_LLAVE atributos_struct D_LLAVE

    STRUCT          shift and go to state 143


state 99

    (23) funcion -> FUNC ID . cuerpo_fun
    (24) cuerpo_fun -> . parametrosMetodo body
    (25) parametrosMetodo -> . I_PARENTESIS parametros D_PARENTESIS type
    (26) parametrosMetodo -> . I_PARENTESIS parametros D_PARENTESIS

    I_PARENTESIS    shift and go to state 146

    cuerpo_fun                     shift and go to state 144
    parametrosMetodo               shift and go to state 145

state 100

    (59) array_length_int -> array_length INTEGER . I_LLAVE D_LLAVE
    (67) array_length_con_valores_int -> array_length INTEGER . I_LLAVE valores_int D_LLAVE

    I_LLAVE         shift and go to state 147


state 101

    (60) array_length_double -> array_length floating_type . I_LLAVE D_LLAVE
    (68) array_length_con_valores_double -> array_length floating_type . I_LLAVE valores_double D_LLAVE

    I_LLAVE         shift and go to state 148


state 102

    (61) array_length_string -> array_length STRINGTYPE . I_LLAVE D_LLAVE
    (69) array_length_con_valores_string -> array_length STRINGTYPE . I_LLAVE valores_string D_LLAVE

    I_LLAVE         shift and go to state 149


state 103

    (62) array_length_boolean -> array_length BOOLEAN . I_LLAVE D_LLAVE
    (70) array_length_con_valores_boolean -> array_length BOOLEAN . I_LLAVE valores_boolean D_LLAVE

    I_LLAVE         shift and go to state 150


state 104

    (116) floating_type -> FLOAT32 .

    I_LLAVE         reduce using rule 116 (floating_type -> FLOAT32 .)
    ASIGNACION      reduce using rule 116 (floating_type -> FLOAT32 .)
    D_CORCHETE      reduce using rule 116 (floating_type -> FLOAT32 .)
    COMA            reduce using rule 116 (floating_type -> FLOAT32 .)
    D_PARENTESIS    reduce using rule 116 (floating_type -> FLOAT32 .)
    ID              reduce using rule 116 (floating_type -> FLOAT32 .)
    D_LLAVE         reduce using rule 116 (floating_type -> FLOAT32 .)
    VAR             reduce using rule 116 (floating_type -> FLOAT32 .)
    IF              reduce using rule 116 (floating_type -> FLOAT32 .)
    ELSE            reduce using rule 116 (floating_type -> FLOAT32 .)
    ELSEIF          reduce using rule 116 (floating_type -> FLOAT32 .)
    FOR             reduce using rule 116 (floating_type -> FLOAT32 .)
    MAP             reduce using rule 116 (floating_type -> FLOAT32 .)
    MAKE            reduce using rule 116 (floating_type -> FLOAT32 .)
    TYPE            reduce using rule 116 (floating_type -> FLOAT32 .)
    I_PARENTESIS    reduce using rule 116 (floating_type -> FLOAT32 .)
    PRINTLN         reduce using rule 116 (floating_type -> FLOAT32 .)
    PRINTF          reduce using rule 116 (floating_type -> FLOAT32 .)
    PRINT           reduce using rule 116 (floating_type -> FLOAT32 .)
    I_CORCHETE      reduce using rule 116 (floating_type -> FLOAT32 .)
    INT             reduce using rule 116 (floating_type -> FLOAT32 .)
    DOUBLE          reduce using rule 116 (floating_type -> FLOAT32 .)
    STRING          reduce using rule 116 (floating_type -> FLOAT32 .)
    BOOLEAN         reduce using rule 116 (floating_type -> FLOAT32 .)


state 105

    (117) floating_type -> FLOAT64 .

    I_LLAVE         reduce using rule 117 (floating_type -> FLOAT64 .)
    ASIGNACION      reduce using rule 117 (floating_type -> FLOAT64 .)
    D_CORCHETE      reduce using rule 117 (floating_type -> FLOAT64 .)
    COMA            reduce using rule 117 (floating_type -> FLOAT64 .)
    D_PARENTESIS    reduce using rule 117 (floating_type -> FLOAT64 .)
    ID              reduce using rule 117 (floating_type -> FLOAT64 .)
    D_LLAVE         reduce using rule 117 (floating_type -> FLOAT64 .)
    VAR             reduce using rule 117 (floating_type -> FLOAT64 .)
    IF              reduce using rule 117 (floating_type -> FLOAT64 .)
    ELSE            reduce using rule 117 (floating_type -> FLOAT64 .)
    ELSEIF          reduce using rule 117 (floating_type -> FLOAT64 .)
    FOR             reduce using rule 117 (floating_type -> FLOAT64 .)
    MAP             reduce using rule 117 (floating_type -> FLOAT64 .)
    MAKE            reduce using rule 117 (floating_type -> FLOAT64 .)
    TYPE            reduce using rule 117 (floating_type -> FLOAT64 .)
    I_PARENTESIS    reduce using rule 117 (floating_type -> FLOAT64 .)
    PRINTLN         reduce using rule 117 (floating_type -> FLOAT64 .)
    PRINTF          reduce using rule 117 (floating_type -> FLOAT64 .)
    PRINT           reduce using rule 117 (floating_type -> FLOAT64 .)
    I_CORCHETE      reduce using rule 117 (floating_type -> FLOAT64 .)
    INT             reduce using rule 117 (floating_type -> FLOAT64 .)
    DOUBLE          reduce using rule 117 (floating_type -> FLOAT64 .)
    STRING          reduce using rule 117 (floating_type -> FLOAT64 .)
    BOOLEAN         reduce using rule 117 (floating_type -> FLOAT64 .)


state 106

    (91) resultado -> expression operacion_binaria expression .
    (91) resultado -> expression . operacion_binaria expression
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    D_PARENTESIS    reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    PUNTO_COMA      reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    D_LLAVE         reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    VAR             reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    ID              reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    IF              reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    ELSE            reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    ELSEIF          reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    FOR             reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    MAP             reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    MAKE            reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    TYPE            reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    I_PARENTESIS    reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    PRINTLN         reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    PRINTF          reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    PRINT           reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    I_CORCHETE      reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    INT             reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    DOUBLE          reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    STRING          reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    BOOLEAN         reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    RETURN          reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    FUNC            reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    COMA            reduce using rule 91 (resultado -> expression operacion_binaria expression .)
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

  ! ADICION         [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! RESTA           [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! MULTIPLICACION  [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! DIVISION        [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! MODULO          [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! IGUAL           [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! DIFERENTE       [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! MAYOR           [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]
  ! MENOR           [ reduce using rule 91 (resultado -> expression operacion_binaria expression .) ]

    operacion_binaria              shift and go to state 54

state 107

    (16) instruccion -> print I_PARENTESIS valores . D_PARENTESIS

    D_PARENTESIS    shift and go to state 151


state 108

    (90) expression -> I_PARENTESIS resultado D_PARENTESIS .

    ADICION         reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    RESTA           reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MULTIPLICACION  reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DIVISION        reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MODULO          reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MENOR_IGUAL     reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    IGUAL           reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DIFERENTE       reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAYOR           reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAYOR_IGUAL     reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MENOR           reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    $end            reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    D_PARENTESIS    reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    D_LLAVE         reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    VAR             reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ID              reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    IF              reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ELSE            reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ELSEIF          reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    FOR             reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAP             reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAKE            reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    TYPE            reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINTLN         reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINTF          reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINT           reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    I_CORCHETE      reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    INT             reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DOUBLE          reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    STRING          reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    BOOLEAN         reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    RETURN          reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    FUNC            reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    COMA            reduce using rule 90 (expression -> I_PARENTESIS resultado D_PARENTESIS .)


state 109

    (79) init_struct -> VAR ID ID . ASIGNACION ID I_LLAVE valores D_LLAVE

    ASIGNACION      shift and go to state 152


state 110

    (17) instruccion -> VAR ID type . ASIGNACION valor

    ASIGNACION      shift and go to state 153


state 111

    (18) instruccion -> VAR ID ASIGNACION . valor
    (19) instruccion -> VAR ID ASIGNACION . instruccion
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE

    VAR             shift and go to state 10
    ID              shift and go to state 119
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34

    valor                          shift and go to state 154
    instruccion                    shift and go to state 155
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44

state 112

    (20) instruccion -> VAR ID array_type_spec . ASIGNACION instruccion

    ASIGNACION      shift and go to state 156


state 113

    (112) type -> BOOL .

    ASIGNACION      reduce using rule 112 (type -> BOOL .)
    D_CORCHETE      reduce using rule 112 (type -> BOOL .)
    I_LLAVE         reduce using rule 112 (type -> BOOL .)
    COMA            reduce using rule 112 (type -> BOOL .)
    D_PARENTESIS    reduce using rule 112 (type -> BOOL .)
    ID              reduce using rule 112 (type -> BOOL .)
    D_LLAVE         reduce using rule 112 (type -> BOOL .)
    VAR             reduce using rule 112 (type -> BOOL .)
    IF              reduce using rule 112 (type -> BOOL .)
    ELSE            reduce using rule 112 (type -> BOOL .)
    ELSEIF          reduce using rule 112 (type -> BOOL .)
    FOR             reduce using rule 112 (type -> BOOL .)
    MAP             reduce using rule 112 (type -> BOOL .)
    MAKE            reduce using rule 112 (type -> BOOL .)
    TYPE            reduce using rule 112 (type -> BOOL .)
    I_PARENTESIS    reduce using rule 112 (type -> BOOL .)
    PRINTLN         reduce using rule 112 (type -> BOOL .)
    PRINTF          reduce using rule 112 (type -> BOOL .)
    PRINT           reduce using rule 112 (type -> BOOL .)
    I_CORCHETE      reduce using rule 112 (type -> BOOL .)
    INT             reduce using rule 112 (type -> BOOL .)
    DOUBLE          reduce using rule 112 (type -> BOOL .)
    STRING          reduce using rule 112 (type -> BOOL .)
    BOOLEAN         reduce using rule 112 (type -> BOOL .)


state 114

    (113) type -> STRINGTYPE .

    ASIGNACION      reduce using rule 113 (type -> STRINGTYPE .)
    D_CORCHETE      reduce using rule 113 (type -> STRINGTYPE .)
    I_LLAVE         reduce using rule 113 (type -> STRINGTYPE .)
    COMA            reduce using rule 113 (type -> STRINGTYPE .)
    D_PARENTESIS    reduce using rule 113 (type -> STRINGTYPE .)
    ID              reduce using rule 113 (type -> STRINGTYPE .)
    D_LLAVE         reduce using rule 113 (type -> STRINGTYPE .)
    VAR             reduce using rule 113 (type -> STRINGTYPE .)
    IF              reduce using rule 113 (type -> STRINGTYPE .)
    ELSE            reduce using rule 113 (type -> STRINGTYPE .)
    ELSEIF          reduce using rule 113 (type -> STRINGTYPE .)
    FOR             reduce using rule 113 (type -> STRINGTYPE .)
    MAP             reduce using rule 113 (type -> STRINGTYPE .)
    MAKE            reduce using rule 113 (type -> STRINGTYPE .)
    TYPE            reduce using rule 113 (type -> STRINGTYPE .)
    I_PARENTESIS    reduce using rule 113 (type -> STRINGTYPE .)
    PRINTLN         reduce using rule 113 (type -> STRINGTYPE .)
    PRINTF          reduce using rule 113 (type -> STRINGTYPE .)
    PRINT           reduce using rule 113 (type -> STRINGTYPE .)
    I_CORCHETE      reduce using rule 113 (type -> STRINGTYPE .)
    INT             reduce using rule 113 (type -> STRINGTYPE .)
    DOUBLE          reduce using rule 113 (type -> STRINGTYPE .)
    STRING          reduce using rule 113 (type -> STRINGTYPE .)
    BOOLEAN         reduce using rule 113 (type -> STRINGTYPE .)


state 115

    (114) type -> INTEGER .

    ASIGNACION      reduce using rule 114 (type -> INTEGER .)
    D_CORCHETE      reduce using rule 114 (type -> INTEGER .)
    I_LLAVE         reduce using rule 114 (type -> INTEGER .)
    COMA            reduce using rule 114 (type -> INTEGER .)
    D_PARENTESIS    reduce using rule 114 (type -> INTEGER .)
    ID              reduce using rule 114 (type -> INTEGER .)
    D_LLAVE         reduce using rule 114 (type -> INTEGER .)
    VAR             reduce using rule 114 (type -> INTEGER .)
    IF              reduce using rule 114 (type -> INTEGER .)
    ELSE            reduce using rule 114 (type -> INTEGER .)
    ELSEIF          reduce using rule 114 (type -> INTEGER .)
    FOR             reduce using rule 114 (type -> INTEGER .)
    MAP             reduce using rule 114 (type -> INTEGER .)
    MAKE            reduce using rule 114 (type -> INTEGER .)
    TYPE            reduce using rule 114 (type -> INTEGER .)
    I_PARENTESIS    reduce using rule 114 (type -> INTEGER .)
    PRINTLN         reduce using rule 114 (type -> INTEGER .)
    PRINTF          reduce using rule 114 (type -> INTEGER .)
    PRINT           reduce using rule 114 (type -> INTEGER .)
    I_CORCHETE      reduce using rule 114 (type -> INTEGER .)
    INT             reduce using rule 114 (type -> INTEGER .)
    DOUBLE          reduce using rule 114 (type -> INTEGER .)
    STRING          reduce using rule 114 (type -> INTEGER .)
    BOOLEAN         reduce using rule 114 (type -> INTEGER .)


state 116

    (115) type -> floating_type .

    ASIGNACION      reduce using rule 115 (type -> floating_type .)
    D_CORCHETE      reduce using rule 115 (type -> floating_type .)
    I_LLAVE         reduce using rule 115 (type -> floating_type .)
    COMA            reduce using rule 115 (type -> floating_type .)
    D_PARENTESIS    reduce using rule 115 (type -> floating_type .)
    ID              reduce using rule 115 (type -> floating_type .)
    D_LLAVE         reduce using rule 115 (type -> floating_type .)
    VAR             reduce using rule 115 (type -> floating_type .)
    IF              reduce using rule 115 (type -> floating_type .)
    ELSE            reduce using rule 115 (type -> floating_type .)
    ELSEIF          reduce using rule 115 (type -> floating_type .)
    FOR             reduce using rule 115 (type -> floating_type .)
    MAP             reduce using rule 115 (type -> floating_type .)
    MAKE            reduce using rule 115 (type -> floating_type .)
    TYPE            reduce using rule 115 (type -> floating_type .)
    I_PARENTESIS    reduce using rule 115 (type -> floating_type .)
    PRINTLN         reduce using rule 115 (type -> floating_type .)
    PRINTF          reduce using rule 115 (type -> floating_type .)
    PRINT           reduce using rule 115 (type -> floating_type .)
    I_CORCHETE      reduce using rule 115 (type -> floating_type .)
    INT             reduce using rule 115 (type -> floating_type .)
    DOUBLE          reduce using rule 115 (type -> floating_type .)
    STRING          reduce using rule 115 (type -> floating_type .)
    BOOLEAN         reduce using rule 115 (type -> floating_type .)


state 117

    (107) array_type_spec -> array_length . INTEGER
    (108) array_type_spec -> array_length . STRINGTYPE
    (109) array_type_spec -> array_length . BOOLEAN
    (110) array_type_spec -> array_length . floating_type
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    INTEGER         shift and go to state 157
    STRINGTYPE      shift and go to state 158
    BOOLEAN         shift and go to state 159
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    floating_type                  shift and go to state 160

state 118

    (111) array_length -> I_CORCHETE . INT D_CORCHETE

    INT             shift and go to state 96


state 119

    (21) instruccion -> ID . asignacion valor
    (22) instruccion -> ID . asignacion instruccion
    (147) valor_variable -> ID .
    (30) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> ID . operador_matematico
    (80) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (120) asignacion -> . ASIGNACION
    (121) asignacion -> . ASIGNACION_ADICION
    (122) asignacion -> . ASIGNACION_RESTA
    (123) asignacion -> . ASIGNACION_MULTI
    (124) asignacion -> . DECLARACION_ASIGNACION
    (125) asignacion -> . ASIGNACION_DIVISION
    (126) asignacion -> . ASIGNACION_MODULO
    (118) operador_matematico -> . INCREMENTO
    (119) operador_matematico -> . DECREMENTO

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    COMA            reduce using rule 147 (valor_variable -> ID .)
    ADICION         reduce using rule 147 (valor_variable -> ID .)
    RESTA           reduce using rule 147 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 147 (valor_variable -> ID .)
    DIVISION        reduce using rule 147 (valor_variable -> ID .)
    MODULO          reduce using rule 147 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    IGUAL           reduce using rule 147 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 147 (valor_variable -> ID .)
    MAYOR           reduce using rule 147 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    MENOR           reduce using rule 147 (valor_variable -> ID .)
    $end            reduce using rule 147 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 147 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 147 (valor_variable -> ID .)
    VAR             reduce using rule 147 (valor_variable -> ID .)
    ID              reduce using rule 147 (valor_variable -> ID .)
    IF              reduce using rule 147 (valor_variable -> ID .)
    ELSE            reduce using rule 147 (valor_variable -> ID .)
    ELSEIF          reduce using rule 147 (valor_variable -> ID .)
    FOR             reduce using rule 147 (valor_variable -> ID .)
    MAP             reduce using rule 147 (valor_variable -> ID .)
    MAKE            reduce using rule 147 (valor_variable -> ID .)
    TYPE            reduce using rule 147 (valor_variable -> ID .)
    PRINTLN         reduce using rule 147 (valor_variable -> ID .)
    PRINTF          reduce using rule 147 (valor_variable -> ID .)
    PRINT           reduce using rule 147 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 147 (valor_variable -> ID .)
    INT             reduce using rule 147 (valor_variable -> ID .)
    DOUBLE          reduce using rule 147 (valor_variable -> ID .)
    STRING          reduce using rule 147 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 147 (valor_variable -> ID .)
    RETURN          reduce using rule 147 (valor_variable -> ID .)
    FUNC            reduce using rule 147 (valor_variable -> ID .)
    I_PARENTESIS    shift and go to state 73
    DECLARACION_ASIGNACION shift and go to state 75
    ASIGNACION      shift and go to state 76
    ASIGNACION_ADICION shift and go to state 77
    ASIGNACION_RESTA shift and go to state 78
    ASIGNACION_MULTI shift and go to state 79
    ASIGNACION_DIVISION shift and go to state 80
    ASIGNACION_MODULO shift and go to state 81
    INCREMENTO      shift and go to state 82
    DECREMENTO      shift and go to state 83

  ! I_PARENTESIS    [ reduce using rule 147 (valor_variable -> ID .) ]

    asignacion                     shift and go to state 72
    operador_matematico            shift and go to state 74

state 120

    (21) instruccion -> ID asignacion valor .
    (103) valor -> valor . operacion_binaria valor
    (93) valores -> valor .
    (94) valores -> valor . COMA valores
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

  ! reduce/reduce conflict for $end resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for VAR resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ID resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for IF resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for FOR resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for MAP resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for MAKE resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for TYPE resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINTF resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINT resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for INT resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for STRING resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for RETURN resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for FUNC resolved using rule 21 (instruccion -> ID asignacion valor .)
  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 21 (instruccion -> ID asignacion valor .)
    PUNTO_COMA      reduce using rule 21 (instruccion -> ID asignacion valor .)
    D_LLAVE         reduce using rule 21 (instruccion -> ID asignacion valor .)
    VAR             reduce using rule 21 (instruccion -> ID asignacion valor .)
    ID              reduce using rule 21 (instruccion -> ID asignacion valor .)
    IF              reduce using rule 21 (instruccion -> ID asignacion valor .)
    ELSE            reduce using rule 21 (instruccion -> ID asignacion valor .)
    ELSEIF          reduce using rule 21 (instruccion -> ID asignacion valor .)
    FOR             reduce using rule 21 (instruccion -> ID asignacion valor .)
    MAP             reduce using rule 21 (instruccion -> ID asignacion valor .)
    MAKE            reduce using rule 21 (instruccion -> ID asignacion valor .)
    TYPE            reduce using rule 21 (instruccion -> ID asignacion valor .)
    I_PARENTESIS    reduce using rule 21 (instruccion -> ID asignacion valor .)
    PRINTLN         reduce using rule 21 (instruccion -> ID asignacion valor .)
    PRINTF          reduce using rule 21 (instruccion -> ID asignacion valor .)
    PRINT           reduce using rule 21 (instruccion -> ID asignacion valor .)
    I_CORCHETE      reduce using rule 21 (instruccion -> ID asignacion valor .)
    INT             reduce using rule 21 (instruccion -> ID asignacion valor .)
    DOUBLE          reduce using rule 21 (instruccion -> ID asignacion valor .)
    STRING          reduce using rule 21 (instruccion -> ID asignacion valor .)
    BOOLEAN         reduce using rule 21 (instruccion -> ID asignacion valor .)
    RETURN          reduce using rule 21 (instruccion -> ID asignacion valor .)
    FUNC            reduce using rule 21 (instruccion -> ID asignacion valor .)
    COMA            shift and go to state 84
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

  ! ADICION         [ reduce using rule 93 (valores -> valor .) ]
  ! RESTA           [ reduce using rule 93 (valores -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 93 (valores -> valor .) ]
  ! DIVISION        [ reduce using rule 93 (valores -> valor .) ]
  ! MODULO          [ reduce using rule 93 (valores -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 93 (valores -> valor .) ]
  ! IGUAL           [ reduce using rule 93 (valores -> valor .) ]
  ! DIFERENTE       [ reduce using rule 93 (valores -> valor .) ]
  ! MAYOR           [ reduce using rule 93 (valores -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 93 (valores -> valor .) ]
  ! MENOR           [ reduce using rule 93 (valores -> valor .) ]
  ! $end            [ reduce using rule 93 (valores -> valor .) ]
  ! PUNTO_COMA      [ reduce using rule 93 (valores -> valor .) ]
  ! D_LLAVE         [ reduce using rule 93 (valores -> valor .) ]
  ! VAR             [ reduce using rule 93 (valores -> valor .) ]
  ! ID              [ reduce using rule 93 (valores -> valor .) ]
  ! IF              [ reduce using rule 93 (valores -> valor .) ]
  ! ELSE            [ reduce using rule 93 (valores -> valor .) ]
  ! ELSEIF          [ reduce using rule 93 (valores -> valor .) ]
  ! FOR             [ reduce using rule 93 (valores -> valor .) ]
  ! MAP             [ reduce using rule 93 (valores -> valor .) ]
  ! MAKE            [ reduce using rule 93 (valores -> valor .) ]
  ! TYPE            [ reduce using rule 93 (valores -> valor .) ]
  ! I_PARENTESIS    [ reduce using rule 93 (valores -> valor .) ]
  ! PRINTLN         [ reduce using rule 93 (valores -> valor .) ]
  ! PRINTF          [ reduce using rule 93 (valores -> valor .) ]
  ! PRINT           [ reduce using rule 93 (valores -> valor .) ]
  ! I_CORCHETE      [ reduce using rule 93 (valores -> valor .) ]
  ! INT             [ reduce using rule 93 (valores -> valor .) ]
  ! DOUBLE          [ reduce using rule 93 (valores -> valor .) ]
  ! STRING          [ reduce using rule 93 (valores -> valor .) ]
  ! BOOLEAN         [ reduce using rule 93 (valores -> valor .) ]
  ! RETURN          [ reduce using rule 93 (valores -> valor .) ]
  ! FUNC            [ reduce using rule 93 (valores -> valor .) ]

    operacion_binaria              shift and go to state 85

state 121

    (22) instruccion -> ID asignacion instruccion .

    $end            reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    PUNTO_COMA      reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    D_LLAVE         reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    VAR             reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    ID              reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    IF              reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    ELSE            reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    ELSEIF          reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    FOR             reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    MAP             reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    MAKE            reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    TYPE            reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    I_PARENTESIS    reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    PRINTLN         reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    PRINTF          reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    PRINT           reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    I_CORCHETE      reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    INT             reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    DOUBLE          reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    STRING          reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    BOOLEAN         reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    RETURN          reduce using rule 22 (instruccion -> ID asignacion instruccion .)
    FUNC            reduce using rule 22 (instruccion -> ID asignacion instruccion .)


state 122

    (30) llamada_func -> ID I_PARENTESIS llamada_params . D_PARENTESIS

    D_PARENTESIS    shift and go to state 161


state 123

    (31) llamada_params -> expression .
    (32) llamada_params -> expression . COMA llamada_params
    (91) resultado -> expression . operacion_binaria expression
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 31 (llamada_params -> expression .)
    COMA            shift and go to state 162
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 54

state 124

    (80) init_struct -> ID DECLARACION_ASIGNACION ID . I_LLAVE valores D_LLAVE

    I_LLAVE         shift and go to state 163


state 125

    (94) valores -> valor COMA valores .

    ADICION         reduce using rule 94 (valores -> valor COMA valores .)
    RESTA           reduce using rule 94 (valores -> valor COMA valores .)
    MULTIPLICACION  reduce using rule 94 (valores -> valor COMA valores .)
    DIVISION        reduce using rule 94 (valores -> valor COMA valores .)
    MODULO          reduce using rule 94 (valores -> valor COMA valores .)
    MENOR_IGUAL     reduce using rule 94 (valores -> valor COMA valores .)
    IGUAL           reduce using rule 94 (valores -> valor COMA valores .)
    DIFERENTE       reduce using rule 94 (valores -> valor COMA valores .)
    MAYOR           reduce using rule 94 (valores -> valor COMA valores .)
    MAYOR_IGUAL     reduce using rule 94 (valores -> valor COMA valores .)
    MENOR           reduce using rule 94 (valores -> valor COMA valores .)
    $end            reduce using rule 94 (valores -> valor COMA valores .)
    PUNTO_COMA      reduce using rule 94 (valores -> valor COMA valores .)
    D_PARENTESIS    reduce using rule 94 (valores -> valor COMA valores .)
    D_LLAVE         reduce using rule 94 (valores -> valor COMA valores .)
    VAR             reduce using rule 94 (valores -> valor COMA valores .)
    ID              reduce using rule 94 (valores -> valor COMA valores .)
    IF              reduce using rule 94 (valores -> valor COMA valores .)
    ELSE            reduce using rule 94 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 94 (valores -> valor COMA valores .)
    FOR             reduce using rule 94 (valores -> valor COMA valores .)
    MAP             reduce using rule 94 (valores -> valor COMA valores .)
    MAKE            reduce using rule 94 (valores -> valor COMA valores .)
    TYPE            reduce using rule 94 (valores -> valor COMA valores .)
    I_PARENTESIS    reduce using rule 94 (valores -> valor COMA valores .)
    PRINTLN         reduce using rule 94 (valores -> valor COMA valores .)
    PRINTF          reduce using rule 94 (valores -> valor COMA valores .)
    PRINT           reduce using rule 94 (valores -> valor COMA valores .)
    I_CORCHETE      reduce using rule 94 (valores -> valor COMA valores .)
    INT             reduce using rule 94 (valores -> valor COMA valores .)
    DOUBLE          reduce using rule 94 (valores -> valor COMA valores .)
    STRING          reduce using rule 94 (valores -> valor COMA valores .)
    BOOLEAN         reduce using rule 94 (valores -> valor COMA valores .)
    RETURN          reduce using rule 94 (valores -> valor COMA valores .)
    FUNC            reduce using rule 94 (valores -> valor COMA valores .)
    COMA            reduce using rule 94 (valores -> valor COMA valores .)


state 126

    (103) valor -> valor operacion_binaria valor .
    (103) valor -> valor . operacion_binaria valor
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    COMA            reduce using rule 103 (valor -> valor operacion_binaria valor .)
    $end            reduce using rule 103 (valor -> valor operacion_binaria valor .)
    I_LLAVE         reduce using rule 103 (valor -> valor operacion_binaria valor .)
    PUNTO_COMA      reduce using rule 103 (valor -> valor operacion_binaria valor .)
    D_PARENTESIS    reduce using rule 103 (valor -> valor operacion_binaria valor .)
    D_LLAVE         reduce using rule 103 (valor -> valor operacion_binaria valor .)
    VAR             reduce using rule 103 (valor -> valor operacion_binaria valor .)
    ID              reduce using rule 103 (valor -> valor operacion_binaria valor .)
    IF              reduce using rule 103 (valor -> valor operacion_binaria valor .)
    ELSE            reduce using rule 103 (valor -> valor operacion_binaria valor .)
    ELSEIF          reduce using rule 103 (valor -> valor operacion_binaria valor .)
    FOR             reduce using rule 103 (valor -> valor operacion_binaria valor .)
    MAP             reduce using rule 103 (valor -> valor operacion_binaria valor .)
    MAKE            reduce using rule 103 (valor -> valor operacion_binaria valor .)
    TYPE            reduce using rule 103 (valor -> valor operacion_binaria valor .)
    I_PARENTESIS    reduce using rule 103 (valor -> valor operacion_binaria valor .)
    PRINTLN         reduce using rule 103 (valor -> valor operacion_binaria valor .)
    PRINTF          reduce using rule 103 (valor -> valor operacion_binaria valor .)
    PRINT           reduce using rule 103 (valor -> valor operacion_binaria valor .)
    I_CORCHETE      reduce using rule 103 (valor -> valor operacion_binaria valor .)
    INT             reduce using rule 103 (valor -> valor operacion_binaria valor .)
    DOUBLE          reduce using rule 103 (valor -> valor operacion_binaria valor .)
    STRING          reduce using rule 103 (valor -> valor operacion_binaria valor .)
    BOOLEAN         reduce using rule 103 (valor -> valor operacion_binaria valor .)
    RETURN          reduce using rule 103 (valor -> valor operacion_binaria valor .)
    FUNC            reduce using rule 103 (valor -> valor operacion_binaria valor .)
    DOS_PUNTOS      reduce using rule 103 (valor -> valor operacion_binaria valor .)
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

  ! ADICION         [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! RESTA           [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! MULTIPLICACION  [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! DIVISION        [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! MODULO          [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! IGUAL           [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! DIFERENTE       [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR           [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]
  ! MENOR           [ reduce using rule 103 (valor -> valor operacion_binaria valor .) ]

    operacion_binaria              shift and go to state 85

state 127

    (33) instruccion -> IF condicion I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_LLAVE         shift and go to state 129
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    body                           shift and go to state 164
    instruccion                    shift and go to state 131
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 128

    (85) condicion -> I_PARENTESIS valor . D_PARENTESIS
    (103) valor -> valor . operacion_binaria valor
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    D_PARENTESIS    shift and go to state 165
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 85

state 129

    (5) body -> I_LLAVE . instruct_expression D_LLAVE
    (6) body -> I_LLAVE . varias_instrucciones D_LLAVE
    (7) body -> I_LLAVE . varias_instrucciones instruct_expression D_LLAVE
    (8) body -> I_LLAVE . D_LLAVE
    (11) instruct_expression -> . RETURN valor
    (12) instruct_expression -> . RETURN resultado
    (9) varias_instrucciones -> . instruccion
    (10) varias_instrucciones -> . instruccion varias_instrucciones
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    D_LLAVE         shift and go to state 167
    RETURN          shift and go to state 169
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    instruct_expression            shift and go to state 166
    varias_instrucciones           shift and go to state 168
    valor                          shift and go to state 12
    resultado                      shift and go to state 39
    instruccion                    shift and go to state 170
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 130

    (34) instruccion -> ELSE I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 171


state 131

    (4) body -> instruccion .

    D_LLAVE         reduce using rule 4 (body -> instruccion .)
    VAR             reduce using rule 4 (body -> instruccion .)
    ID              reduce using rule 4 (body -> instruccion .)
    IF              reduce using rule 4 (body -> instruccion .)
    ELSE            reduce using rule 4 (body -> instruccion .)
    ELSEIF          reduce using rule 4 (body -> instruccion .)
    FOR             reduce using rule 4 (body -> instruccion .)
    MAP             reduce using rule 4 (body -> instruccion .)
    MAKE            reduce using rule 4 (body -> instruccion .)
    TYPE            reduce using rule 4 (body -> instruccion .)
    FUNC            reduce using rule 4 (body -> instruccion .)
    I_PARENTESIS    reduce using rule 4 (body -> instruccion .)
    PRINTLN         reduce using rule 4 (body -> instruccion .)
    PRINTF          reduce using rule 4 (body -> instruccion .)
    PRINT           reduce using rule 4 (body -> instruccion .)
    I_CORCHETE      reduce using rule 4 (body -> instruccion .)
    INT             reduce using rule 4 (body -> instruccion .)
    DOUBLE          reduce using rule 4 (body -> instruccion .)
    STRING          reduce using rule 4 (body -> instruccion .)
    BOOLEAN         reduce using rule 4 (body -> instruccion .)
    $end            reduce using rule 4 (body -> instruccion .)


state 132

    (35) instruccion -> ELSEIF condicion I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_LLAVE         shift and go to state 129
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    body                           shift and go to state 172
    instruccion                    shift and go to state 131
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 133

    (36) instruccion -> FOR ID DECLARACION_ASIGNACION . RANGE ID I_LLAVE body D_LLAVE
    (80) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE valores D_LLAVE
    (124) asignacion -> DECLARACION_ASIGNACION .

  ! shift/reduce conflict for ID resolved as shift
    RANGE           shift and go to state 173
    ID              shift and go to state 124
    VAR             reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    IF              reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    ELSE            reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    ELSEIF          reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    FOR             reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    MAP             reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    MAKE            reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    TYPE            reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    INT             reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    BOOLEAN         reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    I_PARENTESIS    reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTLN         reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTF          reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    PRINT           reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)
    I_CORCHETE      reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .)

  ! ID              [ reduce using rule 124 (asignacion -> DECLARACION_ASIGNACION .) ]


state 134

    (38) instruccion -> FOR ID COMA . ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE

    ID              shift and go to state 174


state 135

    (37) instruccion -> FOR instruccion PUNTO_COMA . valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valor                          shift and go to state 175
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 136

    (71) instruccion -> MAP I_CORCHETE type . D_CORCHETE type I_LLAVE D_LLAVE
    (73) instruccion -> MAP I_CORCHETE type . D_CORCHETE type I_LLAVE claves_valores D_LLAVE

    D_CORCHETE      shift and go to state 176


state 137

    (55) array_int -> I_CORCHETE D_CORCHETE INTEGER . I_LLAVE D_LLAVE
    (63) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER . I_LLAVE valores_int D_LLAVE

    I_LLAVE         shift and go to state 177


state 138

    (56) array_double -> I_CORCHETE D_CORCHETE floating_type . I_LLAVE D_LLAVE
    (64) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type . I_LLAVE valores_double D_LLAVE

    I_LLAVE         shift and go to state 178


state 139

    (57) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE . I_LLAVE D_LLAVE
    (65) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE . I_LLAVE valores_string D_LLAVE

    I_LLAVE         shift and go to state 179


state 140

    (58) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN . I_LLAVE D_LLAVE
    (66) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN . I_LLAVE valores_boolean D_LLAVE

    I_LLAVE         shift and go to state 180


state 141

    (111) array_length -> I_CORCHETE INT D_CORCHETE .

    INTEGER         reduce using rule 111 (array_length -> I_CORCHETE INT D_CORCHETE .)
    STRINGTYPE      reduce using rule 111 (array_length -> I_CORCHETE INT D_CORCHETE .)
    BOOLEAN         reduce using rule 111 (array_length -> I_CORCHETE INT D_CORCHETE .)
    FLOAT32         reduce using rule 111 (array_length -> I_CORCHETE INT D_CORCHETE .)
    FLOAT64         reduce using rule 111 (array_length -> I_CORCHETE INT D_CORCHETE .)


state 142

    (72) instruccion -> MAKE I_PARENTESIS MAP . I_CORCHETE type D_CORCHETE type D_PARENTESIS

    I_CORCHETE      shift and go to state 181


state 143

    (74) instruccion -> TYPE ID STRUCT . I_LLAVE atributos_struct D_LLAVE

    I_LLAVE         shift and go to state 182


state 144

    (23) funcion -> FUNC ID cuerpo_fun .

    VAR             reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    ID              reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    IF              reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    ELSE            reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    ELSEIF          reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    FOR             reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    MAP             reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    MAKE            reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    TYPE            reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    FUNC            reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    I_PARENTESIS    reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    PRINTLN         reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    PRINTF          reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    PRINT           reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    I_CORCHETE      reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    INT             reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    DOUBLE          reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    STRING          reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    BOOLEAN         reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)
    $end            reduce using rule 23 (funcion -> FUNC ID cuerpo_fun .)


state 145

    (24) cuerpo_fun -> parametrosMetodo . body
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_LLAVE         shift and go to state 129
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    body                           shift and go to state 183
    instruccion                    shift and go to state 131
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 146

    (25) parametrosMetodo -> I_PARENTESIS . parametros D_PARENTESIS type
    (26) parametrosMetodo -> I_PARENTESIS . parametros D_PARENTESIS
    (27) parametros -> . atributo
    (28) parametros -> . atributo COMA parametros
    (29) parametros -> .
    (77) atributo -> . ID type

    D_PARENTESIS    reduce using rule 29 (parametros -> .)
    ID              shift and go to state 186

    parametros                     shift and go to state 184
    atributo                       shift and go to state 185

state 147

    (59) array_length_int -> array_length INTEGER I_LLAVE . D_LLAVE
    (67) array_length_con_valores_int -> array_length INTEGER I_LLAVE . valores_int D_LLAVE
    (95) valores_int -> . valor_int
    (96) valores_int -> . valor_int COMA valores_int
    (143) valor_int -> . INT

    D_LLAVE         shift and go to state 187
    INT             shift and go to state 45

    valores_int                    shift and go to state 188
    valor_int                      shift and go to state 189

state 148

    (60) array_length_double -> array_length floating_type I_LLAVE . D_LLAVE
    (68) array_length_con_valores_double -> array_length floating_type I_LLAVE . valores_double D_LLAVE
    (97) valores_double -> . valor_double
    (98) valores_double -> . valor_double COMA valores_double
    (144) valor_double -> . DOUBLE

    D_LLAVE         shift and go to state 190
    DOUBLE          shift and go to state 51

    valores_double                 shift and go to state 191
    valor_double                   shift and go to state 192

state 149

    (61) array_length_string -> array_length STRINGTYPE I_LLAVE . D_LLAVE
    (69) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE . valores_string D_LLAVE
    (99) valores_string -> . valor_string
    (100) valores_string -> . valor_string COMA valores_string
    (145) valor_string -> . STRING

    D_LLAVE         shift and go to state 193
    STRING          shift and go to state 52

    valores_string                 shift and go to state 194
    valor_string                   shift and go to state 195

state 150

    (62) array_length_boolean -> array_length BOOLEAN I_LLAVE . D_LLAVE
    (70) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE . valores_boolean D_LLAVE
    (101) valores_boolean -> . valor_boolean
    (102) valores_boolean -> . valor_boolean COMA valores_boolean
    (146) valor_boolean -> . BOOLEAN

    D_LLAVE         shift and go to state 196
    BOOLEAN         shift and go to state 43

    valores_boolean                shift and go to state 197
    valor_boolean                  shift and go to state 198

state 151

    (16) instruccion -> print I_PARENTESIS valores D_PARENTESIS .

    $end            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    D_LLAVE         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    VAR             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ID              reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    IF              reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ELSE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ELSEIF          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    FOR             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    MAP             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    MAKE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    TYPE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINTLN         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINTF          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINT           reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    I_CORCHETE      reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    INT             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    DOUBLE          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    STRING          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    BOOLEAN         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    RETURN          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    FUNC            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)


state 152

    (79) init_struct -> VAR ID ID ASIGNACION . ID I_LLAVE valores D_LLAVE

    ID              shift and go to state 199


state 153

    (17) instruccion -> VAR ID type ASIGNACION . valor
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valor                          shift and go to state 200
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 154

    (18) instruccion -> VAR ID ASIGNACION valor .
    (103) valor -> valor . operacion_binaria valor
    (93) valores -> valor .
    (94) valores -> valor . COMA valores
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

  ! reduce/reduce conflict for $end resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for VAR resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for ID resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for IF resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for ELSE resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for FOR resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for MAP resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for MAKE resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for TYPE resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for PRINTF resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for PRINT resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for INT resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for STRING resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for RETURN resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! reduce/reduce conflict for FUNC resolved using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    PUNTO_COMA      reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    D_LLAVE         reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    VAR             reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    ID              reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    IF              reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    ELSE            reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    ELSEIF          reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    FOR             reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    MAP             reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    MAKE            reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    TYPE            reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    I_PARENTESIS    reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    PRINTLN         reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    PRINTF          reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    PRINT           reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    I_CORCHETE      reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    INT             reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    DOUBLE          reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    STRING          reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    BOOLEAN         reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    RETURN          reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    FUNC            reduce using rule 18 (instruccion -> VAR ID ASIGNACION valor .)
    COMA            shift and go to state 84
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

  ! ADICION         [ reduce using rule 93 (valores -> valor .) ]
  ! RESTA           [ reduce using rule 93 (valores -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 93 (valores -> valor .) ]
  ! DIVISION        [ reduce using rule 93 (valores -> valor .) ]
  ! MODULO          [ reduce using rule 93 (valores -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 93 (valores -> valor .) ]
  ! IGUAL           [ reduce using rule 93 (valores -> valor .) ]
  ! DIFERENTE       [ reduce using rule 93 (valores -> valor .) ]
  ! MAYOR           [ reduce using rule 93 (valores -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 93 (valores -> valor .) ]
  ! MENOR           [ reduce using rule 93 (valores -> valor .) ]
  ! $end            [ reduce using rule 93 (valores -> valor .) ]
  ! PUNTO_COMA      [ reduce using rule 93 (valores -> valor .) ]
  ! D_LLAVE         [ reduce using rule 93 (valores -> valor .) ]
  ! VAR             [ reduce using rule 93 (valores -> valor .) ]
  ! ID              [ reduce using rule 93 (valores -> valor .) ]
  ! IF              [ reduce using rule 93 (valores -> valor .) ]
  ! ELSE            [ reduce using rule 93 (valores -> valor .) ]
  ! ELSEIF          [ reduce using rule 93 (valores -> valor .) ]
  ! FOR             [ reduce using rule 93 (valores -> valor .) ]
  ! MAP             [ reduce using rule 93 (valores -> valor .) ]
  ! MAKE            [ reduce using rule 93 (valores -> valor .) ]
  ! TYPE            [ reduce using rule 93 (valores -> valor .) ]
  ! I_PARENTESIS    [ reduce using rule 93 (valores -> valor .) ]
  ! PRINTLN         [ reduce using rule 93 (valores -> valor .) ]
  ! PRINTF          [ reduce using rule 93 (valores -> valor .) ]
  ! PRINT           [ reduce using rule 93 (valores -> valor .) ]
  ! I_CORCHETE      [ reduce using rule 93 (valores -> valor .) ]
  ! INT             [ reduce using rule 93 (valores -> valor .) ]
  ! DOUBLE          [ reduce using rule 93 (valores -> valor .) ]
  ! STRING          [ reduce using rule 93 (valores -> valor .) ]
  ! BOOLEAN         [ reduce using rule 93 (valores -> valor .) ]
  ! RETURN          [ reduce using rule 93 (valores -> valor .) ]
  ! FUNC            [ reduce using rule 93 (valores -> valor .) ]

    operacion_binaria              shift and go to state 85

state 155

    (19) instruccion -> VAR ID ASIGNACION instruccion .

    $end            reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    PUNTO_COMA      reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    D_LLAVE         reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    VAR             reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    ID              reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    IF              reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    ELSE            reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    ELSEIF          reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    FOR             reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    MAP             reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    MAKE            reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    TYPE            reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    I_PARENTESIS    reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    PRINTLN         reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    PRINTF          reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    PRINT           reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    I_CORCHETE      reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    INT             reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    DOUBLE          reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    STRING          reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    BOOLEAN         reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    RETURN          reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)
    FUNC            reduce using rule 19 (instruccion -> VAR ID ASIGNACION instruccion .)


state 156

    (20) instruccion -> VAR ID array_type_spec ASIGNACION . instruccion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    instruccion                    shift and go to state 201
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 157

    (107) array_type_spec -> array_length INTEGER .

    ASIGNACION      reduce using rule 107 (array_type_spec -> array_length INTEGER .)


state 158

    (108) array_type_spec -> array_length STRINGTYPE .

    ASIGNACION      reduce using rule 108 (array_type_spec -> array_length STRINGTYPE .)


state 159

    (109) array_type_spec -> array_length BOOLEAN .

    ASIGNACION      reduce using rule 109 (array_type_spec -> array_length BOOLEAN .)


state 160

    (110) array_type_spec -> array_length floating_type .

    ASIGNACION      reduce using rule 110 (array_type_spec -> array_length floating_type .)


state 161

    (30) llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .

    $end            reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ADICION         reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    RESTA           reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MULTIPLICACION  reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DIVISION        reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MODULO          reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MENOR_IGUAL     reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    IGUAL           reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DIFERENTE       reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAYOR           reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAYOR_IGUAL     reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MENOR           reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    D_PARENTESIS    reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    D_LLAVE         reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    VAR             reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ID              reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    IF              reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ELSE            reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ELSEIF          reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    FOR             reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAP             reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAKE            reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    TYPE            reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINTLN         reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINTF          reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINT           reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    I_CORCHETE      reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    INT             reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DOUBLE          reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    STRING          reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    BOOLEAN         reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    RETURN          reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    FUNC            reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    COMA            reduce using rule 30 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)


state 162

    (32) llamada_params -> expression COMA . llamada_params
    (31) llamada_params -> . expression
    (32) llamada_params -> . expression COMA llamada_params
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 70
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    expression                     shift and go to state 123
    llamada_params                 shift and go to state 202
    valores                        shift and go to state 9
    resultado                      shift and go to state 39
    llamada_func                   shift and go to state 69
    valor                          shift and go to state 12
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 163

    (80) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE . valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valores                        shift and go to state 203
    valor                          shift and go to state 12
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 164

    (33) instruccion -> IF condicion I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 204


state 165

    (85) condicion -> I_PARENTESIS valor D_PARENTESIS .

    I_LLAVE         reduce using rule 85 (condicion -> I_PARENTESIS valor D_PARENTESIS .)


state 166

    (5) body -> I_LLAVE instruct_expression . D_LLAVE

    D_LLAVE         shift and go to state 205


state 167

    (8) body -> I_LLAVE D_LLAVE .

    D_LLAVE         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    VAR             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ID              reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    IF              reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    FOR             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    MAP             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    INT             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    STRING          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    $end            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)


state 168

    (6) body -> I_LLAVE varias_instrucciones . D_LLAVE
    (7) body -> I_LLAVE varias_instrucciones . instruct_expression D_LLAVE
    (11) instruct_expression -> . RETURN valor
    (12) instruct_expression -> . RETURN resultado

    D_LLAVE         shift and go to state 206
    RETURN          shift and go to state 169

    instruct_expression            shift and go to state 207

state 169

    (11) instruct_expression -> RETURN . valor
    (12) instruct_expression -> RETURN . resultado
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (91) resultado -> . expression operacion_binaria expression
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 210
    I_PARENTESIS    shift and go to state 8

    valor                          shift and go to state 208
    resultado                      shift and go to state 209
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50
    expression                     shift and go to state 68
    valores                        shift and go to state 9
    llamada_func                   shift and go to state 69

state 170

    (9) varias_instrucciones -> instruccion .
    (10) varias_instrucciones -> instruccion . varias_instrucciones
    (9) varias_instrucciones -> . instruccion
    (10) varias_instrucciones -> . instruccion varias_instrucciones
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    D_LLAVE         reduce using rule 9 (varias_instrucciones -> instruccion .)
    RETURN          reduce using rule 9 (varias_instrucciones -> instruccion .)
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    instruccion                    shift and go to state 170
    varias_instrucciones           shift and go to state 211
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 171

    (34) instruccion -> ELSE I_LLAVE body D_LLAVE .

    $end            reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ID              reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    IF              reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    INT             reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 34 (instruccion -> ELSE I_LLAVE body D_LLAVE .)


state 172

    (35) instruccion -> ELSEIF condicion I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 212


state 173

    (36) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE . ID I_LLAVE body D_LLAVE

    ID              shift and go to state 213


state 174

    (38) instruccion -> FOR ID COMA ID . DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE

    DECLARACION_ASIGNACION shift and go to state 214


state 175

    (37) instruccion -> FOR instruccion PUNTO_COMA valor . PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (103) valor -> valor . operacion_binaria valor
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    PUNTO_COMA      shift and go to state 215
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 85

state 176

    (71) instruccion -> MAP I_CORCHETE type D_CORCHETE . type I_LLAVE D_LLAVE
    (73) instruccion -> MAP I_CORCHETE type D_CORCHETE . type I_LLAVE claves_valores D_LLAVE
    (112) type -> . BOOL
    (113) type -> . STRINGTYPE
    (114) type -> . INTEGER
    (115) type -> . floating_type
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    BOOL            shift and go to state 113
    STRINGTYPE      shift and go to state 114
    INTEGER         shift and go to state 115
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    type                           shift and go to state 216
    floating_type                  shift and go to state 116

state 177

    (55) array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE . D_LLAVE
    (63) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE . valores_int D_LLAVE
    (95) valores_int -> . valor_int
    (96) valores_int -> . valor_int COMA valores_int
    (143) valor_int -> . INT

    D_LLAVE         shift and go to state 217
    INT             shift and go to state 45

    valores_int                    shift and go to state 218
    valor_int                      shift and go to state 189

state 178

    (56) array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE . D_LLAVE
    (64) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE . valores_double D_LLAVE
    (97) valores_double -> . valor_double
    (98) valores_double -> . valor_double COMA valores_double
    (144) valor_double -> . DOUBLE

    D_LLAVE         shift and go to state 219
    DOUBLE          shift and go to state 51

    valores_double                 shift and go to state 220
    valor_double                   shift and go to state 192

state 179

    (57) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE . D_LLAVE
    (65) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE . valores_string D_LLAVE
    (99) valores_string -> . valor_string
    (100) valores_string -> . valor_string COMA valores_string
    (145) valor_string -> . STRING

    D_LLAVE         shift and go to state 221
    STRING          shift and go to state 52

    valores_string                 shift and go to state 222
    valor_string                   shift and go to state 195

state 180

    (58) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE . D_LLAVE
    (66) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE . valores_boolean D_LLAVE
    (101) valores_boolean -> . valor_boolean
    (102) valores_boolean -> . valor_boolean COMA valores_boolean
    (146) valor_boolean -> . BOOLEAN

    D_LLAVE         shift and go to state 223
    BOOLEAN         shift and go to state 43

    valores_boolean                shift and go to state 224
    valor_boolean                  shift and go to state 198

state 181

    (72) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE . type D_CORCHETE type D_PARENTESIS
    (112) type -> . BOOL
    (113) type -> . STRINGTYPE
    (114) type -> . INTEGER
    (115) type -> . floating_type
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    BOOL            shift and go to state 113
    STRINGTYPE      shift and go to state 114
    INTEGER         shift and go to state 115
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    type                           shift and go to state 225
    floating_type                  shift and go to state 116

state 182

    (74) instruccion -> TYPE ID STRUCT I_LLAVE . atributos_struct D_LLAVE
    (75) atributos_struct -> . atributo
    (76) atributos_struct -> . atributo atributos_struct
    (77) atributo -> . ID type

    ID              shift and go to state 186

    atributos_struct               shift and go to state 226
    atributo                       shift and go to state 227

state 183

    (24) cuerpo_fun -> parametrosMetodo body .

    VAR             reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    ID              reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    IF              reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    ELSE            reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    ELSEIF          reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    FOR             reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    MAP             reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    MAKE            reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    TYPE            reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    FUNC            reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    I_PARENTESIS    reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    PRINTLN         reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    PRINTF          reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    PRINT           reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    I_CORCHETE      reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    INT             reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    DOUBLE          reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    STRING          reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    BOOLEAN         reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)
    $end            reduce using rule 24 (cuerpo_fun -> parametrosMetodo body .)


state 184

    (25) parametrosMetodo -> I_PARENTESIS parametros . D_PARENTESIS type
    (26) parametrosMetodo -> I_PARENTESIS parametros . D_PARENTESIS

    D_PARENTESIS    shift and go to state 228


state 185

    (27) parametros -> atributo .
    (28) parametros -> atributo . COMA parametros

    D_PARENTESIS    reduce using rule 27 (parametros -> atributo .)
    COMA            shift and go to state 229


state 186

    (77) atributo -> ID . type
    (112) type -> . BOOL
    (113) type -> . STRINGTYPE
    (114) type -> . INTEGER
    (115) type -> . floating_type
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    BOOL            shift and go to state 113
    STRINGTYPE      shift and go to state 114
    INTEGER         shift and go to state 115
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    type                           shift and go to state 230
    floating_type                  shift and go to state 116

state 187

    (59) array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .

    $end            reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    VAR             reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ID              reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    IF              reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    FOR             reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    MAP             reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    INT             reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    STRING          reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 59 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)


state 188

    (67) array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int . D_LLAVE

    D_LLAVE         shift and go to state 231


state 189

    (95) valores_int -> valor_int .
    (96) valores_int -> valor_int . COMA valores_int

    D_LLAVE         reduce using rule 95 (valores_int -> valor_int .)
    COMA            shift and go to state 232


state 190

    (60) array_length_double -> array_length floating_type I_LLAVE D_LLAVE .

    $end            reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ID              reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    IF              reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    INT             reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 60 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)


state 191

    (68) array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double . D_LLAVE

    D_LLAVE         shift and go to state 233


state 192

    (97) valores_double -> valor_double .
    (98) valores_double -> valor_double . COMA valores_double

    D_LLAVE         reduce using rule 97 (valores_double -> valor_double .)
    COMA            shift and go to state 234


state 193

    (61) array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .

    $end            reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    VAR             reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ID              reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    IF              reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    FOR             reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    MAP             reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    INT             reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    STRING          reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 61 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)


state 194

    (69) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string . D_LLAVE

    D_LLAVE         shift and go to state 235


state 195

    (99) valores_string -> valor_string .
    (100) valores_string -> valor_string . COMA valores_string

    D_LLAVE         reduce using rule 99 (valores_string -> valor_string .)
    COMA            shift and go to state 236


state 196

    (62) array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .

    $end            reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    VAR             reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ID              reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    IF              reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    FOR             reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    MAP             reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    INT             reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    STRING          reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 62 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)


state 197

    (70) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean . D_LLAVE

    D_LLAVE         shift and go to state 237


state 198

    (101) valores_boolean -> valor_boolean .
    (102) valores_boolean -> valor_boolean . COMA valores_boolean

    D_LLAVE         reduce using rule 101 (valores_boolean -> valor_boolean .)
    COMA            shift and go to state 238


state 199

    (79) init_struct -> VAR ID ID ASIGNACION ID . I_LLAVE valores D_LLAVE

    I_LLAVE         shift and go to state 239


state 200

    (17) instruccion -> VAR ID type ASIGNACION valor .
    (103) valor -> valor . operacion_binaria valor
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    $end            reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    PUNTO_COMA      reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    D_LLAVE         reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    VAR             reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    ID              reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    IF              reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    ELSE            reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    ELSEIF          reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    FOR             reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    MAP             reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    MAKE            reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    TYPE            reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    I_PARENTESIS    reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    PRINTLN         reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    PRINTF          reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    PRINT           reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    I_CORCHETE      reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    INT             reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    DOUBLE          reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    STRING          reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    BOOLEAN         reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    RETURN          reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    FUNC            reduce using rule 17 (instruccion -> VAR ID type ASIGNACION valor .)
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 85

state 201

    (20) instruccion -> VAR ID array_type_spec ASIGNACION instruccion .

    $end            reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    PUNTO_COMA      reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    D_LLAVE         reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    VAR             reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    ID              reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    IF              reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    ELSE            reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    ELSEIF          reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    FOR             reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    MAP             reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    MAKE            reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    TYPE            reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    I_PARENTESIS    reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    PRINTLN         reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    PRINTF          reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    PRINT           reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    I_CORCHETE      reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    INT             reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    DOUBLE          reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    STRING          reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    BOOLEAN         reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    RETURN          reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)
    FUNC            reduce using rule 20 (instruccion -> VAR ID array_type_spec ASIGNACION instruccion .)


state 202

    (32) llamada_params -> expression COMA llamada_params .

    D_PARENTESIS    reduce using rule 32 (llamada_params -> expression COMA llamada_params .)


state 203

    (80) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 240


state 204

    (33) instruccion -> IF condicion I_LLAVE body D_LLAVE .

    $end            reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ID              reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    IF              reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    INT             reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 33 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)


state 205

    (5) body -> I_LLAVE instruct_expression D_LLAVE .

    D_LLAVE         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    VAR             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ID              reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    IF              reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ELSE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ELSEIF          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    FOR             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    MAP             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    MAKE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    TYPE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    FUNC            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    I_PARENTESIS    reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINTLN         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINTF          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINT           reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    I_CORCHETE      reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    INT             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    DOUBLE          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    STRING          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    BOOLEAN         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    $end            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)


state 206

    (6) body -> I_LLAVE varias_instrucciones D_LLAVE .

    D_LLAVE         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    VAR             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ID              reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    IF              reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ELSE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ELSEIF          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    FOR             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    MAP             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    MAKE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    TYPE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    FUNC            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    I_PARENTESIS    reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINTLN         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINTF          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINT           reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    I_CORCHETE      reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    INT             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    DOUBLE          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    STRING          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    BOOLEAN         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    $end            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)


state 207

    (7) body -> I_LLAVE varias_instrucciones instruct_expression . D_LLAVE

    D_LLAVE         shift and go to state 241


state 208

    (11) instruct_expression -> RETURN valor .
    (103) valor -> valor . operacion_binaria valor
    (93) valores -> valor .
    (94) valores -> valor . COMA valores
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    D_LLAVE         reduce using rule 11 (instruct_expression -> RETURN valor .)
    COMA            shift and go to state 84
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

  ! ADICION         [ reduce using rule 93 (valores -> valor .) ]
  ! RESTA           [ reduce using rule 93 (valores -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 93 (valores -> valor .) ]
  ! DIVISION        [ reduce using rule 93 (valores -> valor .) ]
  ! MODULO          [ reduce using rule 93 (valores -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 93 (valores -> valor .) ]
  ! IGUAL           [ reduce using rule 93 (valores -> valor .) ]
  ! DIFERENTE       [ reduce using rule 93 (valores -> valor .) ]
  ! MAYOR           [ reduce using rule 93 (valores -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 93 (valores -> valor .) ]
  ! MENOR           [ reduce using rule 93 (valores -> valor .) ]

    operacion_binaria              shift and go to state 85

state 209

    (12) instruct_expression -> RETURN resultado .
    (88) expression -> resultado .

    D_LLAVE         reduce using rule 12 (instruct_expression -> RETURN resultado .)
    ADICION         reduce using rule 88 (expression -> resultado .)
    RESTA           reduce using rule 88 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 88 (expression -> resultado .)
    DIVISION        reduce using rule 88 (expression -> resultado .)
    MODULO          reduce using rule 88 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 88 (expression -> resultado .)
    IGUAL           reduce using rule 88 (expression -> resultado .)
    DIFERENTE       reduce using rule 88 (expression -> resultado .)
    MAYOR           reduce using rule 88 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 88 (expression -> resultado .)
    MENOR           reduce using rule 88 (expression -> resultado .)


state 210

    (147) valor_variable -> ID .
    (30) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS

    COMA            reduce using rule 147 (valor_variable -> ID .)
    ADICION         reduce using rule 147 (valor_variable -> ID .)
    RESTA           reduce using rule 147 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 147 (valor_variable -> ID .)
    DIVISION        reduce using rule 147 (valor_variable -> ID .)
    MODULO          reduce using rule 147 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    IGUAL           reduce using rule 147 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 147 (valor_variable -> ID .)
    MAYOR           reduce using rule 147 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 147 (valor_variable -> ID .)
    MENOR           reduce using rule 147 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 147 (valor_variable -> ID .)
    I_PARENTESIS    shift and go to state 73


state 211

    (10) varias_instrucciones -> instruccion varias_instrucciones .

    D_LLAVE         reduce using rule 10 (varias_instrucciones -> instruccion varias_instrucciones .)
    RETURN          reduce using rule 10 (varias_instrucciones -> instruccion varias_instrucciones .)


state 212

    (35) instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .

    $end            reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ID              reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    IF              reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    INT             reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 35 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)


state 213

    (36) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 242


state 214

    (38) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION . RANGE ID I_LLAVE body D_LLAVE

    RANGE           shift and go to state 243


state 215

    (37) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA . ID operador_matematico I_LLAVE body D_LLAVE

    ID              shift and go to state 244


state 216

    (71) instruccion -> MAP I_CORCHETE type D_CORCHETE type . I_LLAVE D_LLAVE
    (73) instruccion -> MAP I_CORCHETE type D_CORCHETE type . I_LLAVE claves_valores D_LLAVE

    I_LLAVE         shift and go to state 245


state 217

    (55) array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .

    $end            reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    VAR             reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ID              reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    IF              reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    FOR             reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    MAP             reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    INT             reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    STRING          reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 55 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)


state 218

    (63) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int . D_LLAVE

    D_LLAVE         shift and go to state 246


state 219

    (56) array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .

    $end            reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ID              reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    IF              reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    INT             reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 56 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)


state 220

    (64) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double . D_LLAVE

    D_LLAVE         shift and go to state 247


state 221

    (57) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .

    $end            reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    VAR             reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ID              reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    IF              reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    FOR             reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    MAP             reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    INT             reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    STRING          reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 57 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)


state 222

    (65) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string . D_LLAVE

    D_LLAVE         shift and go to state 248


state 223

    (58) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .

    $end            reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    VAR             reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ID              reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    IF              reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    FOR             reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    MAP             reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    INT             reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    STRING          reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 58 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)


state 224

    (66) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean . D_LLAVE

    D_LLAVE         shift and go to state 249


state 225

    (72) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type . D_CORCHETE type D_PARENTESIS

    D_CORCHETE      shift and go to state 250


state 226

    (74) instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct . D_LLAVE

    D_LLAVE         shift and go to state 251


state 227

    (75) atributos_struct -> atributo .
    (76) atributos_struct -> atributo . atributos_struct
    (75) atributos_struct -> . atributo
    (76) atributos_struct -> . atributo atributos_struct
    (77) atributo -> . ID type

    D_LLAVE         reduce using rule 75 (atributos_struct -> atributo .)
    ID              shift and go to state 186

    atributo                       shift and go to state 227
    atributos_struct               shift and go to state 252

state 228

    (25) parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS . type
    (26) parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .
    (112) type -> . BOOL
    (113) type -> . STRINGTYPE
    (114) type -> . INTEGER
    (115) type -> . floating_type
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    I_LLAVE         reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    VAR             reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    ID              reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    IF              reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    ELSE            reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    ELSEIF          reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    FOR             reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    MAP             reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    MAKE            reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    TYPE            reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINTLN         reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINTF          reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINT           reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    I_CORCHETE      reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    INT             reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    DOUBLE          reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    STRING          reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    BOOLEAN         reduce using rule 26 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    BOOL            shift and go to state 113
    STRINGTYPE      shift and go to state 114
    INTEGER         shift and go to state 115
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    type                           shift and go to state 253
    floating_type                  shift and go to state 116

state 229

    (28) parametros -> atributo COMA . parametros
    (27) parametros -> . atributo
    (28) parametros -> . atributo COMA parametros
    (29) parametros -> .
    (77) atributo -> . ID type

    D_PARENTESIS    reduce using rule 29 (parametros -> .)
    ID              shift and go to state 186

    atributo                       shift and go to state 185
    parametros                     shift and go to state 254

state 230

    (77) atributo -> ID type .

    COMA            reduce using rule 77 (atributo -> ID type .)
    D_PARENTESIS    reduce using rule 77 (atributo -> ID type .)
    ID              reduce using rule 77 (atributo -> ID type .)
    D_LLAVE         reduce using rule 77 (atributo -> ID type .)


state 231

    (67) array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .

    $end            reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PUNTO_COMA      reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    D_LLAVE         reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    VAR             reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ID              reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    IF              reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSE            reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSEIF          reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    FOR             reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    MAP             reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    MAKE            reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    TYPE            reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    I_PARENTESIS    reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTLN         reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTF          reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINT           reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    I_CORCHETE      reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    INT             reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    DOUBLE          reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    STRING          reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    BOOLEAN         reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    RETURN          reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    FUNC            reduce using rule 67 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)


state 232

    (96) valores_int -> valor_int COMA . valores_int
    (95) valores_int -> . valor_int
    (96) valores_int -> . valor_int COMA valores_int
    (143) valor_int -> . INT

    INT             shift and go to state 45

    valor_int                      shift and go to state 189
    valores_int                    shift and go to state 255

state 233

    (68) array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .

    $end            reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PUNTO_COMA      reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    D_LLAVE         reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    VAR             reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ID              reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    IF              reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ELSE            reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ELSEIF          reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    FOR             reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    MAP             reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    MAKE            reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    TYPE            reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    I_PARENTESIS    reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTLN         reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTF          reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINT           reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    I_CORCHETE      reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    INT             reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    DOUBLE          reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    STRING          reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    BOOLEAN         reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    RETURN          reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    FUNC            reduce using rule 68 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)


state 234

    (98) valores_double -> valor_double COMA . valores_double
    (97) valores_double -> . valor_double
    (98) valores_double -> . valor_double COMA valores_double
    (144) valor_double -> . DOUBLE

    DOUBLE          shift and go to state 51

    valor_double                   shift and go to state 192
    valores_double                 shift and go to state 256

state 235

    (69) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .

    $end            reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PUNTO_COMA      reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    D_LLAVE         reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    VAR             reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ID              reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    IF              reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSE            reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSEIF          reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FOR             reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAP             reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAKE            reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    TYPE            reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_PARENTESIS    reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTLN         reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTF          reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINT           reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_CORCHETE      reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    INT             reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    DOUBLE          reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    STRING          reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    BOOLEAN         reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    RETURN          reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FUNC            reduce using rule 69 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)


state 236

    (100) valores_string -> valor_string COMA . valores_string
    (99) valores_string -> . valor_string
    (100) valores_string -> . valor_string COMA valores_string
    (145) valor_string -> . STRING

    STRING          shift and go to state 52

    valor_string                   shift and go to state 195
    valores_string                 shift and go to state 257

state 237

    (70) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .

    $end            reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PUNTO_COMA      reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    D_LLAVE         reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    VAR             reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ID              reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    IF              reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSE            reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSEIF          reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FOR             reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAP             reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAKE            reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    TYPE            reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_PARENTESIS    reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTLN         reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTF          reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINT           reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_CORCHETE      reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    INT             reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    DOUBLE          reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    STRING          reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    BOOLEAN         reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    RETURN          reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FUNC            reduce using rule 70 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)


state 238

    (102) valores_boolean -> valor_boolean COMA . valores_boolean
    (101) valores_boolean -> . valor_boolean
    (102) valores_boolean -> . valor_boolean COMA valores_boolean
    (146) valor_boolean -> . BOOLEAN

    BOOLEAN         shift and go to state 43

    valor_boolean                  shift and go to state 198
    valores_boolean                shift and go to state 258

state 239

    (79) init_struct -> VAR ID ID ASIGNACION ID I_LLAVE . valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valores                        shift and go to state 259
    valor                          shift and go to state 12
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 240

    (80) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .

    $end            reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    D_LLAVE         reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    VAR             reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ID              reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    IF              reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSE            reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSEIF          reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FOR             reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAP             reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAKE            reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    TYPE            reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTLN         reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTF          reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINT           reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_CORCHETE      reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    INT             reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    DOUBLE          reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    STRING          reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    BOOLEAN         reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    RETURN          reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FUNC            reduce using rule 80 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)


state 241

    (7) body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .

    D_LLAVE         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    VAR             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ID              reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    IF              reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ELSE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ELSEIF          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    FOR             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    MAP             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    MAKE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    TYPE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    FUNC            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    I_PARENTESIS    reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINTLN         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINTF          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINT           reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    I_CORCHETE      reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    INT             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    DOUBLE          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    STRING          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    BOOLEAN         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    $end            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)


state 242

    (36) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_LLAVE         shift and go to state 129
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    body                           shift and go to state 260
    instruccion                    shift and go to state 131
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 243

    (38) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE . ID I_LLAVE body D_LLAVE

    ID              shift and go to state 261


state 244

    (37) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID . operador_matematico I_LLAVE body D_LLAVE
    (118) operador_matematico -> . INCREMENTO
    (119) operador_matematico -> . DECREMENTO

    INCREMENTO      shift and go to state 82
    DECREMENTO      shift and go to state 83

    operador_matematico            shift and go to state 262

state 245

    (71) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE . D_LLAVE
    (73) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE . claves_valores D_LLAVE
    (82) claves_valores -> . clave_valor
    (83) claves_valores -> . clave_valor COMA claves_valores
    (81) clave_valor -> . valor DOS_PUNTOS valor
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    D_LLAVE         shift and go to state 263
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    claves_valores                 shift and go to state 264
    clave_valor                    shift and go to state 265
    valor                          shift and go to state 266
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 246

    (63) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .

    $end            reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PUNTO_COMA      reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    D_LLAVE         reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    VAR             reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ID              reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    IF              reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSE            reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSEIF          reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    FOR             reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    MAP             reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    MAKE            reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    TYPE            reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    I_PARENTESIS    reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTLN         reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTF          reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINT           reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    I_CORCHETE      reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    INT             reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    DOUBLE          reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    STRING          reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    BOOLEAN         reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    RETURN          reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    FUNC            reduce using rule 63 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)


state 247

    (64) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .

    $end            reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PUNTO_COMA      reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    D_LLAVE         reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    VAR             reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ID              reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    IF              reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ELSE            reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ELSEIF          reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    FOR             reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    MAP             reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    MAKE            reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    TYPE            reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    I_PARENTESIS    reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTLN         reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTF          reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINT           reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    I_CORCHETE      reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    INT             reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    DOUBLE          reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    STRING          reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    BOOLEAN         reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    RETURN          reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    FUNC            reduce using rule 64 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)


state 248

    (65) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .

    $end            reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PUNTO_COMA      reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    D_LLAVE         reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    VAR             reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ID              reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    IF              reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSE            reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSEIF          reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FOR             reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAP             reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAKE            reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    TYPE            reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_PARENTESIS    reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTLN         reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTF          reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINT           reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_CORCHETE      reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    INT             reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    DOUBLE          reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    STRING          reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    BOOLEAN         reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    RETURN          reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FUNC            reduce using rule 65 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)


state 249

    (66) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .

    $end            reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PUNTO_COMA      reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    D_LLAVE         reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    VAR             reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ID              reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    IF              reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSE            reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSEIF          reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FOR             reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAP             reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAKE            reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    TYPE            reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_PARENTESIS    reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTLN         reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTF          reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINT           reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_CORCHETE      reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    INT             reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    DOUBLE          reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    STRING          reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    BOOLEAN         reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    RETURN          reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FUNC            reduce using rule 66 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)


state 250

    (72) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE . type D_PARENTESIS
    (112) type -> . BOOL
    (113) type -> . STRINGTYPE
    (114) type -> . INTEGER
    (115) type -> . floating_type
    (116) floating_type -> . FLOAT32
    (117) floating_type -> . FLOAT64

    BOOL            shift and go to state 113
    STRINGTYPE      shift and go to state 114
    INTEGER         shift and go to state 115
    FLOAT32         shift and go to state 104
    FLOAT64         shift and go to state 105

    type                           shift and go to state 267
    floating_type                  shift and go to state 116

state 251

    (74) instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .

    $end            reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PUNTO_COMA      reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    D_LLAVE         reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    VAR             reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ID              reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    IF              reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ELSE            reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ELSEIF          reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    FOR             reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    MAP             reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    MAKE            reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    TYPE            reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    I_PARENTESIS    reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINTLN         reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINTF          reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINT           reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    I_CORCHETE      reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    INT             reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    DOUBLE          reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    STRING          reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    BOOLEAN         reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    RETURN          reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    FUNC            reduce using rule 74 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)


state 252

    (76) atributos_struct -> atributo atributos_struct .

    D_LLAVE         reduce using rule 76 (atributos_struct -> atributo atributos_struct .)


state 253

    (25) parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .

    I_LLAVE         reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    VAR             reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    ID              reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    IF              reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    ELSE            reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    ELSEIF          reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    FOR             reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    MAP             reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    MAKE            reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    TYPE            reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    I_PARENTESIS    reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    PRINTLN         reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    PRINTF          reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    PRINT           reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    I_CORCHETE      reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    INT             reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    DOUBLE          reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    STRING          reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    BOOLEAN         reduce using rule 25 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)


state 254

    (28) parametros -> atributo COMA parametros .

    D_PARENTESIS    reduce using rule 28 (parametros -> atributo COMA parametros .)


state 255

    (96) valores_int -> valor_int COMA valores_int .

    D_LLAVE         reduce using rule 96 (valores_int -> valor_int COMA valores_int .)


state 256

    (98) valores_double -> valor_double COMA valores_double .

    D_LLAVE         reduce using rule 98 (valores_double -> valor_double COMA valores_double .)


state 257

    (100) valores_string -> valor_string COMA valores_string .

    D_LLAVE         reduce using rule 100 (valores_string -> valor_string COMA valores_string .)


state 258

    (102) valores_boolean -> valor_boolean COMA valores_boolean .

    D_LLAVE         reduce using rule 102 (valores_boolean -> valor_boolean COMA valores_boolean .)


state 259

    (79) init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 268


state 260

    (36) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 269


state 261

    (38) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 270


state 262

    (37) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 271


state 263

    (71) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .

    $end            reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ID              reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    IF              reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    INT             reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 71 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)


state 264

    (73) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores . D_LLAVE

    D_LLAVE         shift and go to state 272


state 265

    (82) claves_valores -> clave_valor .
    (83) claves_valores -> clave_valor . COMA claves_valores

    D_LLAVE         reduce using rule 82 (claves_valores -> clave_valor .)
    COMA            shift and go to state 273


state 266

    (81) clave_valor -> valor . DOS_PUNTOS valor
    (103) valor -> valor . operacion_binaria valor
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    DOS_PUNTOS      shift and go to state 274
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 85

state 267

    (72) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type . D_PARENTESIS

    D_PARENTESIS    shift and go to state 275


state 268

    (79) init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .

    $end            reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    D_LLAVE         reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    VAR             reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ID              reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    IF              reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSE            reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSEIF          reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FOR             reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAP             reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAKE            reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    TYPE            reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTLN         reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTF          reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINT           reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_CORCHETE      reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    INT             reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    DOUBLE          reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    STRING          reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    BOOLEAN         reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    RETURN          reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FUNC            reduce using rule 79 (init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE .)


state 269

    (36) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .

    $end            reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ID              reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    IF              reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    INT             reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 36 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)


state 270

    (38) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_LLAVE         shift and go to state 129
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    body                           shift and go to state 276
    instruccion                    shift and go to state 131
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    valor                          shift and go to state 12
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 271

    (37) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . VAR ID type ASIGNACION valor
    (18) instruccion -> . VAR ID ASIGNACION valor
    (19) instruccion -> . VAR ID ASIGNACION instruccion
    (20) instruccion -> . VAR ID array_type_spec ASIGNACION instruccion
    (21) instruccion -> . ID asignacion valor
    (22) instruccion -> . ID asignacion instruccion
    (33) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (34) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (35) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (36) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (37) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (38) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (39) instruccion -> . array_int
    (40) instruccion -> . array_double
    (41) instruccion -> . array_string
    (42) instruccion -> . array_boolean
    (43) instruccion -> . array_length_int
    (44) instruccion -> . array_length_double
    (45) instruccion -> . array_length_string
    (46) instruccion -> . array_length_boolean
    (47) instruccion -> . array_con_valores_int
    (48) instruccion -> . array_con_valores_double
    (49) instruccion -> . array_con_valores_string
    (50) instruccion -> . array_con_valores_boolean
    (51) instruccion -> . array_length_con_valores_int
    (52) instruccion -> . array_length_con_valores_double
    (53) instruccion -> . array_length_con_valores_string
    (54) instruccion -> . array_length_con_valores_boolean
    (71) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (72) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (73) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (74) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (78) instruccion -> . init_struct
    (30) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (92) resultado_inc_dec -> . ID operador_matematico
    (87) expression -> . valores
    (88) expression -> . resultado
    (89) expression -> . llamada_func
    (90) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (104) print -> . PRINTLN
    (105) print -> . PRINTF
    (106) print -> . PRINT
    (55) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (56) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (57) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (58) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (59) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (60) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (61) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (62) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (63) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (64) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (65) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (66) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (67) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (68) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (69) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (70) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (79) init_struct -> . VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE
    (80) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (93) valores -> . valor
    (94) valores -> . valor COMA valores
    (91) resultado -> . expression operacion_binaria expression
    (111) array_length -> . I_CORCHETE INT D_CORCHETE
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    I_LLAVE         shift and go to state 129
    VAR             shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 13
    ELSE            shift and go to state 14
    ELSEIF          shift and go to state 15
    FOR             shift and go to state 16
    MAP             shift and go to state 33
    MAKE            shift and go to state 35
    TYPE            shift and go to state 36
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 40
    PRINTF          shift and go to state 41
    PRINT           shift and go to state 42
    I_CORCHETE      shift and go to state 34
    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43

    instruccion                    shift and go to state 131
    valor                          shift and go to state 12
    body                           shift and go to state 277
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    valores                        shift and go to state 9
    array_int                      shift and go to state 17
    array_double                   shift and go to state 18
    array_string                   shift and go to state 19
    array_boolean                  shift and go to state 20
    array_length_int               shift and go to state 21
    array_length_double            shift and go to state 22
    array_length_string            shift and go to state 23
    array_length_boolean           shift and go to state 24
    array_con_valores_int          shift and go to state 25
    array_con_valores_double       shift and go to state 26
    array_con_valores_string       shift and go to state 27
    array_con_valores_boolean      shift and go to state 28
    array_length_con_valores_int   shift and go to state 29
    array_length_con_valores_double shift and go to state 30
    array_length_con_valores_string shift and go to state 31
    array_length_con_valores_boolean shift and go to state 32
    init_struct                    shift and go to state 37
    resultado                      shift and go to state 39
    array_length                   shift and go to state 44
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 272

    (73) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .

    $end            reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    D_LLAVE         reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    VAR             reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ID              reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    IF              reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ELSE            reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ELSEIF          reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    FOR             reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    MAP             reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    MAKE            reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    TYPE            reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINTLN         reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINTF          reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINT           reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    I_CORCHETE      reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    INT             reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    DOUBLE          reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    STRING          reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    BOOLEAN         reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    RETURN          reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    FUNC            reduce using rule 73 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)


state 273

    (83) claves_valores -> clave_valor COMA . claves_valores
    (82) claves_valores -> . clave_valor
    (83) claves_valores -> . clave_valor COMA claves_valores
    (81) clave_valor -> . valor DOS_PUNTOS valor
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    clave_valor                    shift and go to state 265
    claves_valores                 shift and go to state 278
    valor                          shift and go to state 266
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 274

    (81) clave_valor -> valor DOS_PUNTOS . valor
    (103) valor -> . valor operacion_binaria valor
    (138) valor -> . valor_int
    (139) valor -> . valor_double
    (140) valor -> . valor_string
    (141) valor -> . valor_boolean
    (142) valor -> . valor_variable
    (143) valor_int -> . INT
    (144) valor_double -> . DOUBLE
    (145) valor_string -> . STRING
    (146) valor_boolean -> . BOOLEAN
    (147) valor_variable -> . ID

    INT             shift and go to state 45
    DOUBLE          shift and go to state 51
    STRING          shift and go to state 52
    BOOLEAN         shift and go to state 43
    ID              shift and go to state 89

    valor                          shift and go to state 279
    valor_int                      shift and go to state 46
    valor_double                   shift and go to state 47
    valor_string                   shift and go to state 48
    valor_boolean                  shift and go to state 49
    valor_variable                 shift and go to state 50

state 275

    (72) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .

    $end            reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    D_LLAVE         reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    VAR             reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ID              reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    IF              reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ELSE            reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ELSEIF          reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    FOR             reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    MAP             reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    MAKE            reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    TYPE            reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINTLN         reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINTF          reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINT           reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    I_CORCHETE      reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    INT             reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    DOUBLE          reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    STRING          reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    BOOLEAN         reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    RETURN          reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    FUNC            reduce using rule 72 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)


state 276

    (38) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 280


state 277

    (37) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 281


state 278

    (83) claves_valores -> clave_valor COMA claves_valores .

    D_LLAVE         reduce using rule 83 (claves_valores -> clave_valor COMA claves_valores .)


state 279

    (81) clave_valor -> valor DOS_PUNTOS valor .
    (103) valor -> valor . operacion_binaria valor
    (127) operacion_binaria -> . ADICION
    (128) operacion_binaria -> . RESTA
    (129) operacion_binaria -> . MULTIPLICACION
    (130) operacion_binaria -> . DIVISION
    (131) operacion_binaria -> . MODULO
    (132) operacion_binaria -> . MENOR_IGUAL
    (133) operacion_binaria -> . IGUAL
    (134) operacion_binaria -> . DIFERENTE
    (135) operacion_binaria -> . MAYOR
    (136) operacion_binaria -> . MAYOR_IGUAL
    (137) operacion_binaria -> . MENOR

    COMA            reduce using rule 81 (clave_valor -> valor DOS_PUNTOS valor .)
    D_LLAVE         reduce using rule 81 (clave_valor -> valor DOS_PUNTOS valor .)
    ADICION         shift and go to state 55
    RESTA           shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    DIVISION        shift and go to state 58
    MODULO          shift and go to state 59
    MENOR_IGUAL     shift and go to state 60
    IGUAL           shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR           shift and go to state 63
    MAYOR_IGUAL     shift and go to state 64
    MENOR           shift and go to state 65

    operacion_binaria              shift and go to state 85

state 280

    (38) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .

    $end            reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ID              reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    IF              reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    INT             reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 38 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)


state 281

    (37) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .

    $end            reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ID              reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    IF              reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    INT             reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 37 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for I_PARENTESIS in state 11 resolved as shift
WARNING: shift/reduce conflict for COMA in state 12 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 12 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 12 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 12 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 12 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 12 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 12 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 12 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 12 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 12 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 12 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 12 resolved as shift
WARNING: shift/reduce conflict for I_PARENTESIS in state 70 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for COMA in state 92 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 106 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 106 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 106 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 106 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 106 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 106 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 106 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 106 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 106 resolved as shift
WARNING: shift/reduce conflict for I_PARENTESIS in state 119 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 120 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 120 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 120 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 120 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 126 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 126 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 126 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 126 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 126 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 126 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 126 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 126 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 154 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 154 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 154 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 154 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 154 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 154 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 154 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 154 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 154 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 208 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 208 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 208 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 208 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 208 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 208 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 208 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 208 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 208 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (instruccion -> llamada_func)
WARNING: rejected rule (expression -> llamada_func) in state 4
WARNING: reduce/reduce conflict in state 120 resolved using rule (instruccion -> ID asignacion valor)
WARNING: rejected rule (valores -> valor) in state 120
WARNING: reduce/reduce conflict in state 154 resolved using rule (instruccion -> VAR ID ASIGNACION valor)
WARNING: rejected rule (valores -> valor) in state 154
