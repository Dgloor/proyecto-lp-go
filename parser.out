Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    CASE
    CHAN
    CONST
    CONTINUE
    DEFAULT
    DEFER
    FALLTHROUGH
    GO
    GOTO
    IDENTIFICADOR
    IMPORT
    INTERFACE
    NOT
    OR
    PACKAGE
    SELECT
    SWITCH

Grammar

Rule 0     S' -> go
Rule 1     go -> instruccion
Rule 2     go -> funcion go
Rule 3     go -> funcion
Rule 4     body -> instruccion
Rule 5     body -> I_LLAVE instruct_expression D_LLAVE
Rule 6     body -> I_LLAVE varias_instrucciones D_LLAVE
Rule 7     body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE
Rule 8     body -> I_LLAVE D_LLAVE
Rule 9     varias_instrucciones -> instruccion
Rule 10    varias_instrucciones -> instruccion varias_instrucciones
Rule 11    instruct_expression -> RETURN valor
Rule 12    instruct_expression -> RETURN resultado
Rule 13    instruccion -> llamada_func
Rule 14    instruccion -> resultado_inc_dec
Rule 15    instruccion -> expression
Rule 16    instruccion -> print I_PARENTESIS valores D_PARENTESIS
Rule 17    instruccion -> declaracion_comun
Rule 18    instruccion -> decla_header ASIGNACION instruccion
Rule 19    instruccion -> decla_header array_type_spec ASIGNACION instruccion
Rule 20    instruccion -> empty_struct
Rule 21    instruccion -> empty_array
Rule 22    instruccion -> ID asignacion valor
Rule 23    instruccion -> ID asignacion instruccion
Rule 24    declaracion_comun -> decla_header type ASIGNACION valor
Rule 25    declaracion_comun -> decla_header ASIGNACION valor
Rule 26    empty_struct -> decla_header ID
Rule 27    empty_array -> decla_header array_type_spec
Rule 28    decla_header -> VAR ID
Rule 29    funcion -> FUNC ID cuerpo_fun
Rule 30    cuerpo_fun -> parametrosMetodo body
Rule 31    parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type
Rule 32    parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS
Rule 33    parametros -> atributo
Rule 34    parametros -> atributo COMA parametros
Rule 35    parametros -> <empty>
Rule 36    llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS
Rule 37    llamada_params -> expression
Rule 38    llamada_params -> expression COMA llamada_params
Rule 39    instruccion -> IF condicion I_LLAVE body D_LLAVE
Rule 40    instruccion -> ELSE I_LLAVE body D_LLAVE
Rule 41    instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE
Rule 42    instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
Rule 43    instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
Rule 44    instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
Rule 45    instruccion -> array_int
Rule 46    instruccion -> array_double
Rule 47    instruccion -> array_string
Rule 48    instruccion -> array_boolean
Rule 49    instruccion -> array_length_int
Rule 50    instruccion -> array_length_double
Rule 51    instruccion -> array_length_string
Rule 52    instruccion -> array_length_boolean
Rule 53    instruccion -> array_con_valores_int
Rule 54    instruccion -> array_con_valores_double
Rule 55    instruccion -> array_con_valores_string
Rule 56    instruccion -> array_con_valores_boolean
Rule 57    instruccion -> array_length_con_valores_int
Rule 58    instruccion -> array_length_con_valores_double
Rule 59    instruccion -> array_length_con_valores_string
Rule 60    instruccion -> array_length_con_valores_boolean
Rule 61    array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
Rule 62    array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
Rule 63    array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
Rule 64    array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
Rule 65    array_length_int -> array_length INTEGER I_LLAVE D_LLAVE
Rule 66    array_length_double -> array_length floating_type I_LLAVE D_LLAVE
Rule 67    array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE
Rule 68    array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE
Rule 69    array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
Rule 70    array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
Rule 71    array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
Rule 72    array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
Rule 73    array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE
Rule 74    array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE
Rule 75    array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
Rule 76    array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
Rule 77    instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
Rule 78    instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
Rule 79    instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
Rule 80    instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
Rule 81    atributos_struct -> atributo
Rule 82    atributos_struct -> atributo atributos_struct
Rule 83    atributo -> ID type
Rule 84    instruccion -> init_struct
Rule 85    init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
Rule 86    init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
Rule 87    init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
Rule 88    init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
Rule 89    atributos_nombrados -> declara_atributo
Rule 90    atributos_nombrados -> declara_atributo COMA atributos_nombrados
Rule 91    valor_struct -> ID PUNTO ID
Rule 92    declara_atributo -> ID DOS_PUNTOS expression
Rule 93    clave_valor -> valor DOS_PUNTOS valor
Rule 94    claves_valores -> clave_valor
Rule 95    claves_valores -> clave_valor COMA claves_valores
Rule 96    condicion -> valor
Rule 97    condicion -> I_PARENTESIS valor D_PARENTESIS
Rule 98    iteracion_for -> ID
Rule 99    expression -> valor
Rule 100   expression -> resultado
Rule 101   expression -> llamada_func
Rule 102   expression -> I_PARENTESIS resultado D_PARENTESIS
Rule 103   resultado -> expression operacion_binaria expression
Rule 104   resultado_inc_dec -> ID operador_matematico
Rule 105   valores -> valor
Rule 106   valores -> valor COMA valores
Rule 107   valores_int -> valor_int
Rule 108   valores_int -> valor_int COMA valores_int
Rule 109   valores_double -> valor_double
Rule 110   valores_double -> valor_double COMA valores_double
Rule 111   valores_string -> valor_string
Rule 112   valores_string -> valor_string COMA valores_string
Rule 113   valores_boolean -> valor_boolean
Rule 114   valores_boolean -> valor_boolean COMA valores_boolean
Rule 115   valor -> valor operacion_binaria valor
Rule 116   print -> PRINTLN
Rule 117   print -> PRINTF
Rule 118   print -> PRINT
Rule 119   array_type_spec -> array_length INTEGER
Rule 120   array_type_spec -> array_length STRINGTYPE
Rule 121   array_type_spec -> array_length BOOLEAN
Rule 122   array_type_spec -> array_length floating_type
Rule 123   array_length -> I_CORCHETE INT D_CORCHETE
Rule 124   type -> BOOL
Rule 125   type -> STRINGTYPE
Rule 126   type -> INTEGER
Rule 127   type -> floating_type
Rule 128   floating_type -> FLOAT32
Rule 129   floating_type -> FLOAT64
Rule 130   operador_matematico -> INCREMENTO
Rule 131   operador_matematico -> DECREMENTO
Rule 132   asignacion -> ASIGNACION
Rule 133   asignacion -> ASIGNACION_ADICION
Rule 134   asignacion -> ASIGNACION_RESTA
Rule 135   asignacion -> ASIGNACION_MULTI
Rule 136   asignacion -> DECLARACION_ASIGNACION
Rule 137   asignacion -> ASIGNACION_DIVISION
Rule 138   asignacion -> ASIGNACION_MODULO
Rule 139   operacion_binaria -> ADICION
Rule 140   operacion_binaria -> RESTA
Rule 141   operacion_binaria -> MULTIPLICACION
Rule 142   operacion_binaria -> DIVISION
Rule 143   operacion_binaria -> MODULO
Rule 144   operacion_binaria -> MENOR_IGUAL
Rule 145   operacion_binaria -> IGUAL
Rule 146   operacion_binaria -> DIFERENTE
Rule 147   operacion_binaria -> MAYOR
Rule 148   operacion_binaria -> MAYOR_IGUAL
Rule 149   operacion_binaria -> MENOR
Rule 150   valor -> valor_int
Rule 151   valor -> valor_double
Rule 152   valor -> valor_string
Rule 153   valor -> valor_boolean
Rule 154   valor -> valor_variable
Rule 155   valor -> valor_struct
Rule 156   valor_int -> INT
Rule 157   valor_double -> DOUBLE
Rule 158   valor_string -> STRING
Rule 159   valor_boolean -> BOOLEAN
Rule 160   valor_variable -> ID

Terminals, with rules where they appear

ADICION              : 139
AND                  : 
ASIGNACION           : 18 19 24 25 85 87 132
ASIGNACION_ADICION   : 133
ASIGNACION_DIVISION  : 137
ASIGNACION_MODULO    : 138
ASIGNACION_MULTI     : 135
ASIGNACION_RESTA     : 134
BOOL                 : 124
BOOLEAN              : 64 68 72 76 121 159
BREAK                : 
CASE                 : 
CHAN                 : 
COMA                 : 34 38 44 90 95 106 108 110 112 114
CONST                : 
CONTINUE             : 
DECLARACION_ASIGNACION : 42 44 86 88 136
DECREMENTO           : 131
DEFAULT              : 
DEFER                : 
DIFERENTE            : 146
DIVISION             : 142
DOS_PUNTOS           : 92 93
DOUBLE               : 157
D_CORCHETE           : 61 62 63 64 69 70 71 72 77 78 79 123
D_LLAVE              : 5 6 7 8 39 40 41 42 43 44 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 79 80 85 86 87 88
D_PARENTESIS         : 16 31 32 36 78 97 102
ELSE                 : 40
ELSEIF               : 41
FALLTHROUGH          : 
FLOAT32              : 128
FLOAT64              : 129
FOR                  : 42 43 44
FUNC                 : 29
GO                   : 
GOTO                 : 
ID                   : 22 23 26 28 29 36 42 42 43 44 44 44 80 83 85 86 86 87 88 88 91 91 92 98 104 160
IDENTIFICADOR        : 
IF                   : 39
IGUAL                : 145
IMPORT               : 
INCREMENTO           : 130
INT                  : 123 156
INTEGER              : 61 65 69 73 119 126
INTERFACE            : 
I_CORCHETE           : 61 62 63 64 69 70 71 72 77 78 79 123
I_LLAVE              : 5 6 7 8 39 40 41 42 43 44 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 79 80 85 86 87 88
I_PARENTESIS         : 16 31 32 36 78 97 102
MAKE                 : 78
MAP                  : 77 78 79
MAYOR                : 147
MAYOR_IGUAL          : 148
MENOR                : 149
MENOR_IGUAL          : 144
MODULO               : 143
MULTIPLICACION       : 141
NOT                  : 
OR                   : 
PACKAGE              : 
PRINT                : 118
PRINTF               : 117
PRINTLN              : 116
PUNTO                : 91
PUNTO_COMA           : 43 43
RANGE                : 42 44
RESTA                : 140
RETURN               : 11 12
SELECT               : 
STRING               : 158
STRINGTYPE           : 63 67 71 75 120 125
STRUCT               : 80
SWITCH               : 
TYPE                 : 80
VAR                  : 28
error                : 

Nonterminals, with rules where they appear

array_boolean        : 48
array_con_valores_boolean : 56
array_con_valores_double : 54
array_con_valores_int : 53
array_con_valores_string : 55
array_double         : 46
array_int            : 45
array_length         : 65 66 67 68 73 74 75 76 119 120 121 122
array_length_boolean : 52
array_length_con_valores_boolean : 60
array_length_con_valores_double : 58
array_length_con_valores_int : 57
array_length_con_valores_string : 59
array_length_double  : 50
array_length_int     : 49
array_length_string  : 51
array_string         : 47
array_type_spec      : 19 27
asignacion           : 22 23
atributo             : 33 34 81 82
atributos_nombrados  : 87 88 90
atributos_struct     : 80 82
body                 : 30 39 40 41 42 43 44
clave_valor          : 94 95
claves_valores       : 79 95
condicion            : 39 41
cuerpo_fun           : 29
decla_header         : 18 19 24 25 26 27
declara_atributo     : 89 90
declaracion_comun    : 17
empty_array          : 21
empty_struct         : 20 85 87
expression           : 15 37 38 92 103 103
floating_type        : 62 66 70 74 122 127
funcion              : 2 3
go                   : 2 0
init_struct          : 84
instruccion          : 1 4 9 10 18 19 23 43
instruct_expression  : 5 7
iteracion_for        : 
llamada_func         : 13 101
llamada_params       : 36 38
operacion_binaria    : 103 115
operador_matematico  : 43 104
parametros           : 31 32 34
parametrosMetodo     : 30
print                : 16
resultado            : 12 100 102
resultado_inc_dec    : 14
type                 : 24 31 77 77 78 78 79 79 83
valor                : 11 22 24 25 43 93 93 96 97 99 105 106 115 115
valor_boolean        : 113 114 153
valor_double         : 109 110 151
valor_int            : 107 108 150
valor_string         : 111 112 152
valor_struct         : 155
valor_variable       : 154
valores              : 16 85 86 106
valores_boolean      : 72 76 114
valores_double       : 70 74 110
valores_int          : 69 73 108
valores_string       : 71 75 112
varias_instrucciones : 6 7 10

Parsing method: LALR

state 0

    (0) S' -> . go
    (1) go -> . instruccion
    (2) go -> . funcion go
    (3) go -> . funcion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (29) funcion -> . FUNC ID cuerpo_fun
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    FUNC            shift and go to state 40
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    go                             shift and go to state 1
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 1

    (0) S' -> go .



state 2

    (1) go -> instruccion .

    $end            reduce using rule 1 (go -> instruccion .)


state 3

    (2) go -> funcion . go
    (3) go -> funcion .
    (1) go -> . instruccion
    (2) go -> . funcion go
    (3) go -> . funcion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (29) funcion -> . FUNC ID cuerpo_fun
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    $end            reduce using rule 3 (go -> funcion .)
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    FUNC            shift and go to state 40
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    funcion                        shift and go to state 3
    go                             shift and go to state 57
    instruccion                    shift and go to state 2
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 4

    (13) instruccion -> llamada_func .
    (101) expression -> llamada_func .

  ! reduce/reduce conflict for $end resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ID resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for IF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for MAP resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for MAKE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for TYPE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINTF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for VAR resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for INT resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for FUNC resolved using rule 13 (instruccion -> llamada_func .)
    $end            reduce using rule 13 (instruccion -> llamada_func .)
    PUNTO_COMA      reduce using rule 13 (instruccion -> llamada_func .)
    D_LLAVE         reduce using rule 13 (instruccion -> llamada_func .)
    ID              reduce using rule 13 (instruccion -> llamada_func .)
    IF              reduce using rule 13 (instruccion -> llamada_func .)
    ELSE            reduce using rule 13 (instruccion -> llamada_func .)
    ELSEIF          reduce using rule 13 (instruccion -> llamada_func .)
    FOR             reduce using rule 13 (instruccion -> llamada_func .)
    MAP             reduce using rule 13 (instruccion -> llamada_func .)
    MAKE            reduce using rule 13 (instruccion -> llamada_func .)
    TYPE            reduce using rule 13 (instruccion -> llamada_func .)
    I_PARENTESIS    reduce using rule 13 (instruccion -> llamada_func .)
    PRINTLN         reduce using rule 13 (instruccion -> llamada_func .)
    PRINTF          reduce using rule 13 (instruccion -> llamada_func .)
    PRINT           reduce using rule 13 (instruccion -> llamada_func .)
    VAR             reduce using rule 13 (instruccion -> llamada_func .)
    I_CORCHETE      reduce using rule 13 (instruccion -> llamada_func .)
    INT             reduce using rule 13 (instruccion -> llamada_func .)
    DOUBLE          reduce using rule 13 (instruccion -> llamada_func .)
    STRING          reduce using rule 13 (instruccion -> llamada_func .)
    BOOLEAN         reduce using rule 13 (instruccion -> llamada_func .)
    RETURN          reduce using rule 13 (instruccion -> llamada_func .)
    FUNC            reduce using rule 13 (instruccion -> llamada_func .)
    ADICION         reduce using rule 101 (expression -> llamada_func .)
    RESTA           reduce using rule 101 (expression -> llamada_func .)
    MULTIPLICACION  reduce using rule 101 (expression -> llamada_func .)
    DIVISION        reduce using rule 101 (expression -> llamada_func .)
    MODULO          reduce using rule 101 (expression -> llamada_func .)
    MENOR_IGUAL     reduce using rule 101 (expression -> llamada_func .)
    IGUAL           reduce using rule 101 (expression -> llamada_func .)
    DIFERENTE       reduce using rule 101 (expression -> llamada_func .)
    MAYOR           reduce using rule 101 (expression -> llamada_func .)
    MAYOR_IGUAL     reduce using rule 101 (expression -> llamada_func .)
    MENOR           reduce using rule 101 (expression -> llamada_func .)

  ! $end            [ reduce using rule 101 (expression -> llamada_func .) ]
  ! PUNTO_COMA      [ reduce using rule 101 (expression -> llamada_func .) ]
  ! D_LLAVE         [ reduce using rule 101 (expression -> llamada_func .) ]
  ! ID              [ reduce using rule 101 (expression -> llamada_func .) ]
  ! IF              [ reduce using rule 101 (expression -> llamada_func .) ]
  ! ELSE            [ reduce using rule 101 (expression -> llamada_func .) ]
  ! ELSEIF          [ reduce using rule 101 (expression -> llamada_func .) ]
  ! FOR             [ reduce using rule 101 (expression -> llamada_func .) ]
  ! MAP             [ reduce using rule 101 (expression -> llamada_func .) ]
  ! MAKE            [ reduce using rule 101 (expression -> llamada_func .) ]
  ! TYPE            [ reduce using rule 101 (expression -> llamada_func .) ]
  ! I_PARENTESIS    [ reduce using rule 101 (expression -> llamada_func .) ]
  ! PRINTLN         [ reduce using rule 101 (expression -> llamada_func .) ]
  ! PRINTF          [ reduce using rule 101 (expression -> llamada_func .) ]
  ! PRINT           [ reduce using rule 101 (expression -> llamada_func .) ]
  ! VAR             [ reduce using rule 101 (expression -> llamada_func .) ]
  ! I_CORCHETE      [ reduce using rule 101 (expression -> llamada_func .) ]
  ! INT             [ reduce using rule 101 (expression -> llamada_func .) ]
  ! DOUBLE          [ reduce using rule 101 (expression -> llamada_func .) ]
  ! STRING          [ reduce using rule 101 (expression -> llamada_func .) ]
  ! BOOLEAN         [ reduce using rule 101 (expression -> llamada_func .) ]
  ! RETURN          [ reduce using rule 101 (expression -> llamada_func .) ]
  ! FUNC            [ reduce using rule 101 (expression -> llamada_func .) ]


state 5

    (14) instruccion -> resultado_inc_dec .

    $end            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PUNTO_COMA      reduce using rule 14 (instruccion -> resultado_inc_dec .)
    D_LLAVE         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ID              reduce using rule 14 (instruccion -> resultado_inc_dec .)
    IF              reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ELSE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ELSEIF          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    FOR             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    MAP             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    MAKE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    TYPE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    I_PARENTESIS    reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINTLN         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINTF          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINT           reduce using rule 14 (instruccion -> resultado_inc_dec .)
    VAR             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    I_CORCHETE      reduce using rule 14 (instruccion -> resultado_inc_dec .)
    INT             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    DOUBLE          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    STRING          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    BOOLEAN         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    RETURN          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    FUNC            reduce using rule 14 (instruccion -> resultado_inc_dec .)


state 6

    (15) instruccion -> expression .
    (103) resultado -> expression . operacion_binaria expression
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    $end            reduce using rule 15 (instruccion -> expression .)
    PUNTO_COMA      reduce using rule 15 (instruccion -> expression .)
    D_LLAVE         reduce using rule 15 (instruccion -> expression .)
    ID              reduce using rule 15 (instruccion -> expression .)
    IF              reduce using rule 15 (instruccion -> expression .)
    ELSE            reduce using rule 15 (instruccion -> expression .)
    ELSEIF          reduce using rule 15 (instruccion -> expression .)
    FOR             reduce using rule 15 (instruccion -> expression .)
    MAP             reduce using rule 15 (instruccion -> expression .)
    MAKE            reduce using rule 15 (instruccion -> expression .)
    TYPE            reduce using rule 15 (instruccion -> expression .)
    I_PARENTESIS    reduce using rule 15 (instruccion -> expression .)
    PRINTLN         reduce using rule 15 (instruccion -> expression .)
    PRINTF          reduce using rule 15 (instruccion -> expression .)
    PRINT           reduce using rule 15 (instruccion -> expression .)
    VAR             reduce using rule 15 (instruccion -> expression .)
    I_CORCHETE      reduce using rule 15 (instruccion -> expression .)
    INT             reduce using rule 15 (instruccion -> expression .)
    DOUBLE          reduce using rule 15 (instruccion -> expression .)
    STRING          reduce using rule 15 (instruccion -> expression .)
    BOOLEAN         reduce using rule 15 (instruccion -> expression .)
    RETURN          reduce using rule 15 (instruccion -> expression .)
    FUNC            reduce using rule 15 (instruccion -> expression .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 58

state 7

    (16) instruccion -> print . I_PARENTESIS valores D_PARENTESIS

    I_PARENTESIS    shift and go to state 70


state 8

    (102) expression -> I_PARENTESIS . resultado D_PARENTESIS
    (103) resultado -> . expression operacion_binaria expression
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 74
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    resultado                      shift and go to state 71
    expression                     shift and go to state 72
    valor                          shift and go to state 14
    llamada_func                   shift and go to state 73
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 9

    (17) instruccion -> declaracion_comun .

    $end            reduce using rule 17 (instruccion -> declaracion_comun .)
    PUNTO_COMA      reduce using rule 17 (instruccion -> declaracion_comun .)
    D_LLAVE         reduce using rule 17 (instruccion -> declaracion_comun .)
    ID              reduce using rule 17 (instruccion -> declaracion_comun .)
    IF              reduce using rule 17 (instruccion -> declaracion_comun .)
    ELSE            reduce using rule 17 (instruccion -> declaracion_comun .)
    ELSEIF          reduce using rule 17 (instruccion -> declaracion_comun .)
    FOR             reduce using rule 17 (instruccion -> declaracion_comun .)
    MAP             reduce using rule 17 (instruccion -> declaracion_comun .)
    MAKE            reduce using rule 17 (instruccion -> declaracion_comun .)
    TYPE            reduce using rule 17 (instruccion -> declaracion_comun .)
    I_PARENTESIS    reduce using rule 17 (instruccion -> declaracion_comun .)
    PRINTLN         reduce using rule 17 (instruccion -> declaracion_comun .)
    PRINTF          reduce using rule 17 (instruccion -> declaracion_comun .)
    PRINT           reduce using rule 17 (instruccion -> declaracion_comun .)
    VAR             reduce using rule 17 (instruccion -> declaracion_comun .)
    I_CORCHETE      reduce using rule 17 (instruccion -> declaracion_comun .)
    INT             reduce using rule 17 (instruccion -> declaracion_comun .)
    DOUBLE          reduce using rule 17 (instruccion -> declaracion_comun .)
    STRING          reduce using rule 17 (instruccion -> declaracion_comun .)
    BOOLEAN         reduce using rule 17 (instruccion -> declaracion_comun .)
    RETURN          reduce using rule 17 (instruccion -> declaracion_comun .)
    FUNC            reduce using rule 17 (instruccion -> declaracion_comun .)


state 10

    (18) instruccion -> decla_header . ASIGNACION instruccion
    (19) instruccion -> decla_header . array_type_spec ASIGNACION instruccion
    (24) declaracion_comun -> decla_header . type ASIGNACION valor
    (25) declaracion_comun -> decla_header . ASIGNACION valor
    (26) empty_struct -> decla_header . ID
    (27) empty_array -> decla_header . array_type_spec
    (119) array_type_spec -> . array_length INTEGER
    (120) array_type_spec -> . array_length STRINGTYPE
    (121) array_type_spec -> . array_length BOOLEAN
    (122) array_type_spec -> . array_length floating_type
    (124) type -> . BOOL
    (125) type -> . STRINGTYPE
    (126) type -> . INTEGER
    (127) type -> . floating_type
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    ASIGNACION      shift and go to state 75
    ID              shift and go to state 78
    BOOL            shift and go to state 83
    STRINGTYPE      shift and go to state 81
    INTEGER         shift and go to state 80
    I_CORCHETE      shift and go to state 84
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    array_type_spec                shift and go to state 76
    type                           shift and go to state 77
    array_length                   shift and go to state 79
    floating_type                  shift and go to state 82

state 11

    (20) instruccion -> empty_struct .
    (85) init_struct -> empty_struct . ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> empty_struct . ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE

    $end            reduce using rule 20 (instruccion -> empty_struct .)
    PUNTO_COMA      reduce using rule 20 (instruccion -> empty_struct .)
    D_LLAVE         reduce using rule 20 (instruccion -> empty_struct .)
    ID              reduce using rule 20 (instruccion -> empty_struct .)
    IF              reduce using rule 20 (instruccion -> empty_struct .)
    ELSE            reduce using rule 20 (instruccion -> empty_struct .)
    ELSEIF          reduce using rule 20 (instruccion -> empty_struct .)
    FOR             reduce using rule 20 (instruccion -> empty_struct .)
    MAP             reduce using rule 20 (instruccion -> empty_struct .)
    MAKE            reduce using rule 20 (instruccion -> empty_struct .)
    TYPE            reduce using rule 20 (instruccion -> empty_struct .)
    I_PARENTESIS    reduce using rule 20 (instruccion -> empty_struct .)
    PRINTLN         reduce using rule 20 (instruccion -> empty_struct .)
    PRINTF          reduce using rule 20 (instruccion -> empty_struct .)
    PRINT           reduce using rule 20 (instruccion -> empty_struct .)
    VAR             reduce using rule 20 (instruccion -> empty_struct .)
    I_CORCHETE      reduce using rule 20 (instruccion -> empty_struct .)
    INT             reduce using rule 20 (instruccion -> empty_struct .)
    DOUBLE          reduce using rule 20 (instruccion -> empty_struct .)
    STRING          reduce using rule 20 (instruccion -> empty_struct .)
    BOOLEAN         reduce using rule 20 (instruccion -> empty_struct .)
    RETURN          reduce using rule 20 (instruccion -> empty_struct .)
    FUNC            reduce using rule 20 (instruccion -> empty_struct .)
    ASIGNACION      shift and go to state 87


state 12

    (21) instruccion -> empty_array .

    $end            reduce using rule 21 (instruccion -> empty_array .)
    PUNTO_COMA      reduce using rule 21 (instruccion -> empty_array .)
    D_LLAVE         reduce using rule 21 (instruccion -> empty_array .)
    ID              reduce using rule 21 (instruccion -> empty_array .)
    IF              reduce using rule 21 (instruccion -> empty_array .)
    ELSE            reduce using rule 21 (instruccion -> empty_array .)
    ELSEIF          reduce using rule 21 (instruccion -> empty_array .)
    FOR             reduce using rule 21 (instruccion -> empty_array .)
    MAP             reduce using rule 21 (instruccion -> empty_array .)
    MAKE            reduce using rule 21 (instruccion -> empty_array .)
    TYPE            reduce using rule 21 (instruccion -> empty_array .)
    I_PARENTESIS    reduce using rule 21 (instruccion -> empty_array .)
    PRINTLN         reduce using rule 21 (instruccion -> empty_array .)
    PRINTF          reduce using rule 21 (instruccion -> empty_array .)
    PRINT           reduce using rule 21 (instruccion -> empty_array .)
    VAR             reduce using rule 21 (instruccion -> empty_array .)
    I_CORCHETE      reduce using rule 21 (instruccion -> empty_array .)
    INT             reduce using rule 21 (instruccion -> empty_array .)
    DOUBLE          reduce using rule 21 (instruccion -> empty_array .)
    STRING          reduce using rule 21 (instruccion -> empty_array .)
    BOOLEAN         reduce using rule 21 (instruccion -> empty_array .)
    RETURN          reduce using rule 21 (instruccion -> empty_array .)
    FUNC            reduce using rule 21 (instruccion -> empty_array .)


state 13

    (22) instruccion -> ID . asignacion valor
    (23) instruccion -> ID . asignacion instruccion
    (36) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> ID . operador_matematico
    (86) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (88) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (160) valor_variable -> ID .
    (91) valor_struct -> ID . PUNTO ID
    (132) asignacion -> . ASIGNACION
    (133) asignacion -> . ASIGNACION_ADICION
    (134) asignacion -> . ASIGNACION_RESTA
    (135) asignacion -> . ASIGNACION_MULTI
    (136) asignacion -> . DECLARACION_ASIGNACION
    (137) asignacion -> . ASIGNACION_DIVISION
    (138) asignacion -> . ASIGNACION_MODULO
    (130) operador_matematico -> . INCREMENTO
    (131) operador_matematico -> . DECREMENTO

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    I_PARENTESIS    shift and go to state 89
    DECLARACION_ASIGNACION shift and go to state 91
    ADICION         reduce using rule 160 (valor_variable -> ID .)
    RESTA           reduce using rule 160 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 160 (valor_variable -> ID .)
    DIVISION        reduce using rule 160 (valor_variable -> ID .)
    MODULO          reduce using rule 160 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    IGUAL           reduce using rule 160 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 160 (valor_variable -> ID .)
    MAYOR           reduce using rule 160 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    MENOR           reduce using rule 160 (valor_variable -> ID .)
    $end            reduce using rule 160 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 160 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 160 (valor_variable -> ID .)
    ID              reduce using rule 160 (valor_variable -> ID .)
    IF              reduce using rule 160 (valor_variable -> ID .)
    ELSE            reduce using rule 160 (valor_variable -> ID .)
    ELSEIF          reduce using rule 160 (valor_variable -> ID .)
    FOR             reduce using rule 160 (valor_variable -> ID .)
    MAP             reduce using rule 160 (valor_variable -> ID .)
    MAKE            reduce using rule 160 (valor_variable -> ID .)
    TYPE            reduce using rule 160 (valor_variable -> ID .)
    PRINTLN         reduce using rule 160 (valor_variable -> ID .)
    PRINTF          reduce using rule 160 (valor_variable -> ID .)
    PRINT           reduce using rule 160 (valor_variable -> ID .)
    VAR             reduce using rule 160 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 160 (valor_variable -> ID .)
    INT             reduce using rule 160 (valor_variable -> ID .)
    DOUBLE          reduce using rule 160 (valor_variable -> ID .)
    STRING          reduce using rule 160 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 160 (valor_variable -> ID .)
    RETURN          reduce using rule 160 (valor_variable -> ID .)
    FUNC            reduce using rule 160 (valor_variable -> ID .)
    PUNTO           shift and go to state 92
    ASIGNACION      shift and go to state 93
    ASIGNACION_ADICION shift and go to state 94
    ASIGNACION_RESTA shift and go to state 95
    ASIGNACION_MULTI shift and go to state 96
    ASIGNACION_DIVISION shift and go to state 97
    ASIGNACION_MODULO shift and go to state 98
    INCREMENTO      shift and go to state 99
    DECREMENTO      shift and go to state 100

  ! I_PARENTESIS    [ reduce using rule 160 (valor_variable -> ID .) ]

    asignacion                     shift and go to state 88
    operador_matematico            shift and go to state 90

state 14

    (99) expression -> valor .
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 99 (expression -> valor .)
    PUNTO_COMA      reduce using rule 99 (expression -> valor .)
    D_PARENTESIS    reduce using rule 99 (expression -> valor .)
    D_LLAVE         reduce using rule 99 (expression -> valor .)
    ID              reduce using rule 99 (expression -> valor .)
    IF              reduce using rule 99 (expression -> valor .)
    ELSE            reduce using rule 99 (expression -> valor .)
    ELSEIF          reduce using rule 99 (expression -> valor .)
    FOR             reduce using rule 99 (expression -> valor .)
    MAP             reduce using rule 99 (expression -> valor .)
    MAKE            reduce using rule 99 (expression -> valor .)
    TYPE            reduce using rule 99 (expression -> valor .)
    I_PARENTESIS    reduce using rule 99 (expression -> valor .)
    PRINTLN         reduce using rule 99 (expression -> valor .)
    PRINTF          reduce using rule 99 (expression -> valor .)
    PRINT           reduce using rule 99 (expression -> valor .)
    VAR             reduce using rule 99 (expression -> valor .)
    I_CORCHETE      reduce using rule 99 (expression -> valor .)
    INT             reduce using rule 99 (expression -> valor .)
    DOUBLE          reduce using rule 99 (expression -> valor .)
    STRING          reduce using rule 99 (expression -> valor .)
    BOOLEAN         reduce using rule 99 (expression -> valor .)
    RETURN          reduce using rule 99 (expression -> valor .)
    FUNC            reduce using rule 99 (expression -> valor .)
    COMA            reduce using rule 99 (expression -> valor .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

  ! ADICION         [ reduce using rule 99 (expression -> valor .) ]
  ! RESTA           [ reduce using rule 99 (expression -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 99 (expression -> valor .) ]
  ! DIVISION        [ reduce using rule 99 (expression -> valor .) ]
  ! MODULO          [ reduce using rule 99 (expression -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 99 (expression -> valor .) ]
  ! IGUAL           [ reduce using rule 99 (expression -> valor .) ]
  ! DIFERENTE       [ reduce using rule 99 (expression -> valor .) ]
  ! MAYOR           [ reduce using rule 99 (expression -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 99 (expression -> valor .) ]
  ! MENOR           [ reduce using rule 99 (expression -> valor .) ]

    operacion_binaria              shift and go to state 101

state 15

    (39) instruccion -> IF . condicion I_LLAVE body D_LLAVE
    (96) condicion -> . valor
    (97) condicion -> . I_PARENTESIS valor D_PARENTESIS
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 104
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    condicion                      shift and go to state 102
    valor                          shift and go to state 103
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 16

    (40) instruccion -> ELSE . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 106


state 17

    (41) instruccion -> ELSEIF . condicion I_LLAVE body D_LLAVE
    (96) condicion -> . valor
    (97) condicion -> . I_PARENTESIS valor D_PARENTESIS
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 104
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    condicion                      shift and go to state 107
    valor                          shift and go to state 103
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 18

    (42) instruccion -> FOR . ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> FOR . instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> FOR . ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 108
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    instruccion                    shift and go to state 109
    valor                          shift and go to state 14
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 19

    (45) instruccion -> array_int .

    $end            reduce using rule 45 (instruccion -> array_int .)
    PUNTO_COMA      reduce using rule 45 (instruccion -> array_int .)
    D_LLAVE         reduce using rule 45 (instruccion -> array_int .)
    ID              reduce using rule 45 (instruccion -> array_int .)
    IF              reduce using rule 45 (instruccion -> array_int .)
    ELSE            reduce using rule 45 (instruccion -> array_int .)
    ELSEIF          reduce using rule 45 (instruccion -> array_int .)
    FOR             reduce using rule 45 (instruccion -> array_int .)
    MAP             reduce using rule 45 (instruccion -> array_int .)
    MAKE            reduce using rule 45 (instruccion -> array_int .)
    TYPE            reduce using rule 45 (instruccion -> array_int .)
    I_PARENTESIS    reduce using rule 45 (instruccion -> array_int .)
    PRINTLN         reduce using rule 45 (instruccion -> array_int .)
    PRINTF          reduce using rule 45 (instruccion -> array_int .)
    PRINT           reduce using rule 45 (instruccion -> array_int .)
    VAR             reduce using rule 45 (instruccion -> array_int .)
    I_CORCHETE      reduce using rule 45 (instruccion -> array_int .)
    INT             reduce using rule 45 (instruccion -> array_int .)
    DOUBLE          reduce using rule 45 (instruccion -> array_int .)
    STRING          reduce using rule 45 (instruccion -> array_int .)
    BOOLEAN         reduce using rule 45 (instruccion -> array_int .)
    RETURN          reduce using rule 45 (instruccion -> array_int .)
    FUNC            reduce using rule 45 (instruccion -> array_int .)


state 20

    (46) instruccion -> array_double .

    $end            reduce using rule 46 (instruccion -> array_double .)
    PUNTO_COMA      reduce using rule 46 (instruccion -> array_double .)
    D_LLAVE         reduce using rule 46 (instruccion -> array_double .)
    ID              reduce using rule 46 (instruccion -> array_double .)
    IF              reduce using rule 46 (instruccion -> array_double .)
    ELSE            reduce using rule 46 (instruccion -> array_double .)
    ELSEIF          reduce using rule 46 (instruccion -> array_double .)
    FOR             reduce using rule 46 (instruccion -> array_double .)
    MAP             reduce using rule 46 (instruccion -> array_double .)
    MAKE            reduce using rule 46 (instruccion -> array_double .)
    TYPE            reduce using rule 46 (instruccion -> array_double .)
    I_PARENTESIS    reduce using rule 46 (instruccion -> array_double .)
    PRINTLN         reduce using rule 46 (instruccion -> array_double .)
    PRINTF          reduce using rule 46 (instruccion -> array_double .)
    PRINT           reduce using rule 46 (instruccion -> array_double .)
    VAR             reduce using rule 46 (instruccion -> array_double .)
    I_CORCHETE      reduce using rule 46 (instruccion -> array_double .)
    INT             reduce using rule 46 (instruccion -> array_double .)
    DOUBLE          reduce using rule 46 (instruccion -> array_double .)
    STRING          reduce using rule 46 (instruccion -> array_double .)
    BOOLEAN         reduce using rule 46 (instruccion -> array_double .)
    RETURN          reduce using rule 46 (instruccion -> array_double .)
    FUNC            reduce using rule 46 (instruccion -> array_double .)


state 21

    (47) instruccion -> array_string .

    $end            reduce using rule 47 (instruccion -> array_string .)
    PUNTO_COMA      reduce using rule 47 (instruccion -> array_string .)
    D_LLAVE         reduce using rule 47 (instruccion -> array_string .)
    ID              reduce using rule 47 (instruccion -> array_string .)
    IF              reduce using rule 47 (instruccion -> array_string .)
    ELSE            reduce using rule 47 (instruccion -> array_string .)
    ELSEIF          reduce using rule 47 (instruccion -> array_string .)
    FOR             reduce using rule 47 (instruccion -> array_string .)
    MAP             reduce using rule 47 (instruccion -> array_string .)
    MAKE            reduce using rule 47 (instruccion -> array_string .)
    TYPE            reduce using rule 47 (instruccion -> array_string .)
    I_PARENTESIS    reduce using rule 47 (instruccion -> array_string .)
    PRINTLN         reduce using rule 47 (instruccion -> array_string .)
    PRINTF          reduce using rule 47 (instruccion -> array_string .)
    PRINT           reduce using rule 47 (instruccion -> array_string .)
    VAR             reduce using rule 47 (instruccion -> array_string .)
    I_CORCHETE      reduce using rule 47 (instruccion -> array_string .)
    INT             reduce using rule 47 (instruccion -> array_string .)
    DOUBLE          reduce using rule 47 (instruccion -> array_string .)
    STRING          reduce using rule 47 (instruccion -> array_string .)
    BOOLEAN         reduce using rule 47 (instruccion -> array_string .)
    RETURN          reduce using rule 47 (instruccion -> array_string .)
    FUNC            reduce using rule 47 (instruccion -> array_string .)


state 22

    (48) instruccion -> array_boolean .

    $end            reduce using rule 48 (instruccion -> array_boolean .)
    PUNTO_COMA      reduce using rule 48 (instruccion -> array_boolean .)
    D_LLAVE         reduce using rule 48 (instruccion -> array_boolean .)
    ID              reduce using rule 48 (instruccion -> array_boolean .)
    IF              reduce using rule 48 (instruccion -> array_boolean .)
    ELSE            reduce using rule 48 (instruccion -> array_boolean .)
    ELSEIF          reduce using rule 48 (instruccion -> array_boolean .)
    FOR             reduce using rule 48 (instruccion -> array_boolean .)
    MAP             reduce using rule 48 (instruccion -> array_boolean .)
    MAKE            reduce using rule 48 (instruccion -> array_boolean .)
    TYPE            reduce using rule 48 (instruccion -> array_boolean .)
    I_PARENTESIS    reduce using rule 48 (instruccion -> array_boolean .)
    PRINTLN         reduce using rule 48 (instruccion -> array_boolean .)
    PRINTF          reduce using rule 48 (instruccion -> array_boolean .)
    PRINT           reduce using rule 48 (instruccion -> array_boolean .)
    VAR             reduce using rule 48 (instruccion -> array_boolean .)
    I_CORCHETE      reduce using rule 48 (instruccion -> array_boolean .)
    INT             reduce using rule 48 (instruccion -> array_boolean .)
    DOUBLE          reduce using rule 48 (instruccion -> array_boolean .)
    STRING          reduce using rule 48 (instruccion -> array_boolean .)
    BOOLEAN         reduce using rule 48 (instruccion -> array_boolean .)
    RETURN          reduce using rule 48 (instruccion -> array_boolean .)
    FUNC            reduce using rule 48 (instruccion -> array_boolean .)


state 23

    (49) instruccion -> array_length_int .

    $end            reduce using rule 49 (instruccion -> array_length_int .)
    PUNTO_COMA      reduce using rule 49 (instruccion -> array_length_int .)
    D_LLAVE         reduce using rule 49 (instruccion -> array_length_int .)
    ID              reduce using rule 49 (instruccion -> array_length_int .)
    IF              reduce using rule 49 (instruccion -> array_length_int .)
    ELSE            reduce using rule 49 (instruccion -> array_length_int .)
    ELSEIF          reduce using rule 49 (instruccion -> array_length_int .)
    FOR             reduce using rule 49 (instruccion -> array_length_int .)
    MAP             reduce using rule 49 (instruccion -> array_length_int .)
    MAKE            reduce using rule 49 (instruccion -> array_length_int .)
    TYPE            reduce using rule 49 (instruccion -> array_length_int .)
    I_PARENTESIS    reduce using rule 49 (instruccion -> array_length_int .)
    PRINTLN         reduce using rule 49 (instruccion -> array_length_int .)
    PRINTF          reduce using rule 49 (instruccion -> array_length_int .)
    PRINT           reduce using rule 49 (instruccion -> array_length_int .)
    VAR             reduce using rule 49 (instruccion -> array_length_int .)
    I_CORCHETE      reduce using rule 49 (instruccion -> array_length_int .)
    INT             reduce using rule 49 (instruccion -> array_length_int .)
    DOUBLE          reduce using rule 49 (instruccion -> array_length_int .)
    STRING          reduce using rule 49 (instruccion -> array_length_int .)
    BOOLEAN         reduce using rule 49 (instruccion -> array_length_int .)
    RETURN          reduce using rule 49 (instruccion -> array_length_int .)
    FUNC            reduce using rule 49 (instruccion -> array_length_int .)


state 24

    (50) instruccion -> array_length_double .

    $end            reduce using rule 50 (instruccion -> array_length_double .)
    PUNTO_COMA      reduce using rule 50 (instruccion -> array_length_double .)
    D_LLAVE         reduce using rule 50 (instruccion -> array_length_double .)
    ID              reduce using rule 50 (instruccion -> array_length_double .)
    IF              reduce using rule 50 (instruccion -> array_length_double .)
    ELSE            reduce using rule 50 (instruccion -> array_length_double .)
    ELSEIF          reduce using rule 50 (instruccion -> array_length_double .)
    FOR             reduce using rule 50 (instruccion -> array_length_double .)
    MAP             reduce using rule 50 (instruccion -> array_length_double .)
    MAKE            reduce using rule 50 (instruccion -> array_length_double .)
    TYPE            reduce using rule 50 (instruccion -> array_length_double .)
    I_PARENTESIS    reduce using rule 50 (instruccion -> array_length_double .)
    PRINTLN         reduce using rule 50 (instruccion -> array_length_double .)
    PRINTF          reduce using rule 50 (instruccion -> array_length_double .)
    PRINT           reduce using rule 50 (instruccion -> array_length_double .)
    VAR             reduce using rule 50 (instruccion -> array_length_double .)
    I_CORCHETE      reduce using rule 50 (instruccion -> array_length_double .)
    INT             reduce using rule 50 (instruccion -> array_length_double .)
    DOUBLE          reduce using rule 50 (instruccion -> array_length_double .)
    STRING          reduce using rule 50 (instruccion -> array_length_double .)
    BOOLEAN         reduce using rule 50 (instruccion -> array_length_double .)
    RETURN          reduce using rule 50 (instruccion -> array_length_double .)
    FUNC            reduce using rule 50 (instruccion -> array_length_double .)


state 25

    (51) instruccion -> array_length_string .

    $end            reduce using rule 51 (instruccion -> array_length_string .)
    PUNTO_COMA      reduce using rule 51 (instruccion -> array_length_string .)
    D_LLAVE         reduce using rule 51 (instruccion -> array_length_string .)
    ID              reduce using rule 51 (instruccion -> array_length_string .)
    IF              reduce using rule 51 (instruccion -> array_length_string .)
    ELSE            reduce using rule 51 (instruccion -> array_length_string .)
    ELSEIF          reduce using rule 51 (instruccion -> array_length_string .)
    FOR             reduce using rule 51 (instruccion -> array_length_string .)
    MAP             reduce using rule 51 (instruccion -> array_length_string .)
    MAKE            reduce using rule 51 (instruccion -> array_length_string .)
    TYPE            reduce using rule 51 (instruccion -> array_length_string .)
    I_PARENTESIS    reduce using rule 51 (instruccion -> array_length_string .)
    PRINTLN         reduce using rule 51 (instruccion -> array_length_string .)
    PRINTF          reduce using rule 51 (instruccion -> array_length_string .)
    PRINT           reduce using rule 51 (instruccion -> array_length_string .)
    VAR             reduce using rule 51 (instruccion -> array_length_string .)
    I_CORCHETE      reduce using rule 51 (instruccion -> array_length_string .)
    INT             reduce using rule 51 (instruccion -> array_length_string .)
    DOUBLE          reduce using rule 51 (instruccion -> array_length_string .)
    STRING          reduce using rule 51 (instruccion -> array_length_string .)
    BOOLEAN         reduce using rule 51 (instruccion -> array_length_string .)
    RETURN          reduce using rule 51 (instruccion -> array_length_string .)
    FUNC            reduce using rule 51 (instruccion -> array_length_string .)


state 26

    (52) instruccion -> array_length_boolean .

    $end            reduce using rule 52 (instruccion -> array_length_boolean .)
    PUNTO_COMA      reduce using rule 52 (instruccion -> array_length_boolean .)
    D_LLAVE         reduce using rule 52 (instruccion -> array_length_boolean .)
    ID              reduce using rule 52 (instruccion -> array_length_boolean .)
    IF              reduce using rule 52 (instruccion -> array_length_boolean .)
    ELSE            reduce using rule 52 (instruccion -> array_length_boolean .)
    ELSEIF          reduce using rule 52 (instruccion -> array_length_boolean .)
    FOR             reduce using rule 52 (instruccion -> array_length_boolean .)
    MAP             reduce using rule 52 (instruccion -> array_length_boolean .)
    MAKE            reduce using rule 52 (instruccion -> array_length_boolean .)
    TYPE            reduce using rule 52 (instruccion -> array_length_boolean .)
    I_PARENTESIS    reduce using rule 52 (instruccion -> array_length_boolean .)
    PRINTLN         reduce using rule 52 (instruccion -> array_length_boolean .)
    PRINTF          reduce using rule 52 (instruccion -> array_length_boolean .)
    PRINT           reduce using rule 52 (instruccion -> array_length_boolean .)
    VAR             reduce using rule 52 (instruccion -> array_length_boolean .)
    I_CORCHETE      reduce using rule 52 (instruccion -> array_length_boolean .)
    INT             reduce using rule 52 (instruccion -> array_length_boolean .)
    DOUBLE          reduce using rule 52 (instruccion -> array_length_boolean .)
    STRING          reduce using rule 52 (instruccion -> array_length_boolean .)
    BOOLEAN         reduce using rule 52 (instruccion -> array_length_boolean .)
    RETURN          reduce using rule 52 (instruccion -> array_length_boolean .)
    FUNC            reduce using rule 52 (instruccion -> array_length_boolean .)


state 27

    (53) instruccion -> array_con_valores_int .

    $end            reduce using rule 53 (instruccion -> array_con_valores_int .)
    PUNTO_COMA      reduce using rule 53 (instruccion -> array_con_valores_int .)
    D_LLAVE         reduce using rule 53 (instruccion -> array_con_valores_int .)
    ID              reduce using rule 53 (instruccion -> array_con_valores_int .)
    IF              reduce using rule 53 (instruccion -> array_con_valores_int .)
    ELSE            reduce using rule 53 (instruccion -> array_con_valores_int .)
    ELSEIF          reduce using rule 53 (instruccion -> array_con_valores_int .)
    FOR             reduce using rule 53 (instruccion -> array_con_valores_int .)
    MAP             reduce using rule 53 (instruccion -> array_con_valores_int .)
    MAKE            reduce using rule 53 (instruccion -> array_con_valores_int .)
    TYPE            reduce using rule 53 (instruccion -> array_con_valores_int .)
    I_PARENTESIS    reduce using rule 53 (instruccion -> array_con_valores_int .)
    PRINTLN         reduce using rule 53 (instruccion -> array_con_valores_int .)
    PRINTF          reduce using rule 53 (instruccion -> array_con_valores_int .)
    PRINT           reduce using rule 53 (instruccion -> array_con_valores_int .)
    VAR             reduce using rule 53 (instruccion -> array_con_valores_int .)
    I_CORCHETE      reduce using rule 53 (instruccion -> array_con_valores_int .)
    INT             reduce using rule 53 (instruccion -> array_con_valores_int .)
    DOUBLE          reduce using rule 53 (instruccion -> array_con_valores_int .)
    STRING          reduce using rule 53 (instruccion -> array_con_valores_int .)
    BOOLEAN         reduce using rule 53 (instruccion -> array_con_valores_int .)
    RETURN          reduce using rule 53 (instruccion -> array_con_valores_int .)
    FUNC            reduce using rule 53 (instruccion -> array_con_valores_int .)


state 28

    (54) instruccion -> array_con_valores_double .

    $end            reduce using rule 54 (instruccion -> array_con_valores_double .)
    PUNTO_COMA      reduce using rule 54 (instruccion -> array_con_valores_double .)
    D_LLAVE         reduce using rule 54 (instruccion -> array_con_valores_double .)
    ID              reduce using rule 54 (instruccion -> array_con_valores_double .)
    IF              reduce using rule 54 (instruccion -> array_con_valores_double .)
    ELSE            reduce using rule 54 (instruccion -> array_con_valores_double .)
    ELSEIF          reduce using rule 54 (instruccion -> array_con_valores_double .)
    FOR             reduce using rule 54 (instruccion -> array_con_valores_double .)
    MAP             reduce using rule 54 (instruccion -> array_con_valores_double .)
    MAKE            reduce using rule 54 (instruccion -> array_con_valores_double .)
    TYPE            reduce using rule 54 (instruccion -> array_con_valores_double .)
    I_PARENTESIS    reduce using rule 54 (instruccion -> array_con_valores_double .)
    PRINTLN         reduce using rule 54 (instruccion -> array_con_valores_double .)
    PRINTF          reduce using rule 54 (instruccion -> array_con_valores_double .)
    PRINT           reduce using rule 54 (instruccion -> array_con_valores_double .)
    VAR             reduce using rule 54 (instruccion -> array_con_valores_double .)
    I_CORCHETE      reduce using rule 54 (instruccion -> array_con_valores_double .)
    INT             reduce using rule 54 (instruccion -> array_con_valores_double .)
    DOUBLE          reduce using rule 54 (instruccion -> array_con_valores_double .)
    STRING          reduce using rule 54 (instruccion -> array_con_valores_double .)
    BOOLEAN         reduce using rule 54 (instruccion -> array_con_valores_double .)
    RETURN          reduce using rule 54 (instruccion -> array_con_valores_double .)
    FUNC            reduce using rule 54 (instruccion -> array_con_valores_double .)


state 29

    (55) instruccion -> array_con_valores_string .

    $end            reduce using rule 55 (instruccion -> array_con_valores_string .)
    PUNTO_COMA      reduce using rule 55 (instruccion -> array_con_valores_string .)
    D_LLAVE         reduce using rule 55 (instruccion -> array_con_valores_string .)
    ID              reduce using rule 55 (instruccion -> array_con_valores_string .)
    IF              reduce using rule 55 (instruccion -> array_con_valores_string .)
    ELSE            reduce using rule 55 (instruccion -> array_con_valores_string .)
    ELSEIF          reduce using rule 55 (instruccion -> array_con_valores_string .)
    FOR             reduce using rule 55 (instruccion -> array_con_valores_string .)
    MAP             reduce using rule 55 (instruccion -> array_con_valores_string .)
    MAKE            reduce using rule 55 (instruccion -> array_con_valores_string .)
    TYPE            reduce using rule 55 (instruccion -> array_con_valores_string .)
    I_PARENTESIS    reduce using rule 55 (instruccion -> array_con_valores_string .)
    PRINTLN         reduce using rule 55 (instruccion -> array_con_valores_string .)
    PRINTF          reduce using rule 55 (instruccion -> array_con_valores_string .)
    PRINT           reduce using rule 55 (instruccion -> array_con_valores_string .)
    VAR             reduce using rule 55 (instruccion -> array_con_valores_string .)
    I_CORCHETE      reduce using rule 55 (instruccion -> array_con_valores_string .)
    INT             reduce using rule 55 (instruccion -> array_con_valores_string .)
    DOUBLE          reduce using rule 55 (instruccion -> array_con_valores_string .)
    STRING          reduce using rule 55 (instruccion -> array_con_valores_string .)
    BOOLEAN         reduce using rule 55 (instruccion -> array_con_valores_string .)
    RETURN          reduce using rule 55 (instruccion -> array_con_valores_string .)
    FUNC            reduce using rule 55 (instruccion -> array_con_valores_string .)


state 30

    (56) instruccion -> array_con_valores_boolean .

    $end            reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    PUNTO_COMA      reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    D_LLAVE         reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    ID              reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    IF              reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    ELSE            reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    ELSEIF          reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    FOR             reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    MAP             reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    MAKE            reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    TYPE            reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    I_PARENTESIS    reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    PRINTLN         reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    PRINTF          reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    PRINT           reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    VAR             reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    I_CORCHETE      reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    INT             reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    DOUBLE          reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    STRING          reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    BOOLEAN         reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    RETURN          reduce using rule 56 (instruccion -> array_con_valores_boolean .)
    FUNC            reduce using rule 56 (instruccion -> array_con_valores_boolean .)


state 31

    (57) instruccion -> array_length_con_valores_int .

    $end            reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    PUNTO_COMA      reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    D_LLAVE         reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    ID              reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    IF              reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    ELSE            reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    ELSEIF          reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    FOR             reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    MAP             reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    MAKE            reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    TYPE            reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    I_PARENTESIS    reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    PRINTLN         reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    PRINTF          reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    PRINT           reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    VAR             reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    I_CORCHETE      reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    INT             reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    DOUBLE          reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    STRING          reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    BOOLEAN         reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    RETURN          reduce using rule 57 (instruccion -> array_length_con_valores_int .)
    FUNC            reduce using rule 57 (instruccion -> array_length_con_valores_int .)


state 32

    (58) instruccion -> array_length_con_valores_double .

    $end            reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    PUNTO_COMA      reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    D_LLAVE         reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    ID              reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    IF              reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    ELSE            reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    ELSEIF          reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    FOR             reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    MAP             reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    MAKE            reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    TYPE            reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    I_PARENTESIS    reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    PRINTLN         reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    PRINTF          reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    PRINT           reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    VAR             reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    I_CORCHETE      reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    INT             reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    DOUBLE          reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    STRING          reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    BOOLEAN         reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    RETURN          reduce using rule 58 (instruccion -> array_length_con_valores_double .)
    FUNC            reduce using rule 58 (instruccion -> array_length_con_valores_double .)


state 33

    (59) instruccion -> array_length_con_valores_string .

    $end            reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    PUNTO_COMA      reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    D_LLAVE         reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    ID              reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    IF              reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    ELSE            reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    ELSEIF          reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    FOR             reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    MAP             reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    MAKE            reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    TYPE            reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    I_PARENTESIS    reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    PRINTLN         reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    PRINTF          reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    PRINT           reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    VAR             reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    I_CORCHETE      reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    INT             reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    DOUBLE          reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    STRING          reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    BOOLEAN         reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    RETURN          reduce using rule 59 (instruccion -> array_length_con_valores_string .)
    FUNC            reduce using rule 59 (instruccion -> array_length_con_valores_string .)


state 34

    (60) instruccion -> array_length_con_valores_boolean .

    $end            reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    PUNTO_COMA      reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    D_LLAVE         reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    ID              reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    IF              reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    ELSE            reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    ELSEIF          reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    FOR             reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    MAP             reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    MAKE            reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    TYPE            reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    I_PARENTESIS    reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    PRINTLN         reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    PRINTF          reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    PRINT           reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    VAR             reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    I_CORCHETE      reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    INT             reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    DOUBLE          reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    STRING          reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    BOOLEAN         reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    RETURN          reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)
    FUNC            reduce using rule 60 (instruccion -> array_length_con_valores_boolean .)


state 35

    (77) instruccion -> MAP . I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (79) instruccion -> MAP . I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE

    I_CORCHETE      shift and go to state 110


state 36

    (61) array_int -> I_CORCHETE . D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> I_CORCHETE . D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> I_CORCHETE . D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> I_CORCHETE . D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> I_CORCHETE . D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> I_CORCHETE . D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> I_CORCHETE . D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> I_CORCHETE . D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (123) array_length -> I_CORCHETE . INT D_CORCHETE

    D_CORCHETE      shift and go to state 111
    INT             shift and go to state 112


state 37

    (78) instruccion -> MAKE . I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS

    I_PARENTESIS    shift and go to state 113


state 38

    (80) instruccion -> TYPE . ID STRUCT I_LLAVE atributos_struct D_LLAVE

    ID              shift and go to state 114


state 39

    (84) instruccion -> init_struct .

    $end            reduce using rule 84 (instruccion -> init_struct .)
    PUNTO_COMA      reduce using rule 84 (instruccion -> init_struct .)
    D_LLAVE         reduce using rule 84 (instruccion -> init_struct .)
    ID              reduce using rule 84 (instruccion -> init_struct .)
    IF              reduce using rule 84 (instruccion -> init_struct .)
    ELSE            reduce using rule 84 (instruccion -> init_struct .)
    ELSEIF          reduce using rule 84 (instruccion -> init_struct .)
    FOR             reduce using rule 84 (instruccion -> init_struct .)
    MAP             reduce using rule 84 (instruccion -> init_struct .)
    MAKE            reduce using rule 84 (instruccion -> init_struct .)
    TYPE            reduce using rule 84 (instruccion -> init_struct .)
    I_PARENTESIS    reduce using rule 84 (instruccion -> init_struct .)
    PRINTLN         reduce using rule 84 (instruccion -> init_struct .)
    PRINTF          reduce using rule 84 (instruccion -> init_struct .)
    PRINT           reduce using rule 84 (instruccion -> init_struct .)
    VAR             reduce using rule 84 (instruccion -> init_struct .)
    I_CORCHETE      reduce using rule 84 (instruccion -> init_struct .)
    INT             reduce using rule 84 (instruccion -> init_struct .)
    DOUBLE          reduce using rule 84 (instruccion -> init_struct .)
    STRING          reduce using rule 84 (instruccion -> init_struct .)
    BOOLEAN         reduce using rule 84 (instruccion -> init_struct .)
    RETURN          reduce using rule 84 (instruccion -> init_struct .)
    FUNC            reduce using rule 84 (instruccion -> init_struct .)


state 40

    (29) funcion -> FUNC . ID cuerpo_fun

    ID              shift and go to state 115


state 41

    (100) expression -> resultado .

    ADICION         reduce using rule 100 (expression -> resultado .)
    RESTA           reduce using rule 100 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 100 (expression -> resultado .)
    DIVISION        reduce using rule 100 (expression -> resultado .)
    MODULO          reduce using rule 100 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 100 (expression -> resultado .)
    IGUAL           reduce using rule 100 (expression -> resultado .)
    DIFERENTE       reduce using rule 100 (expression -> resultado .)
    MAYOR           reduce using rule 100 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 100 (expression -> resultado .)
    MENOR           reduce using rule 100 (expression -> resultado .)
    $end            reduce using rule 100 (expression -> resultado .)
    PUNTO_COMA      reduce using rule 100 (expression -> resultado .)
    D_PARENTESIS    reduce using rule 100 (expression -> resultado .)
    D_LLAVE         reduce using rule 100 (expression -> resultado .)
    ID              reduce using rule 100 (expression -> resultado .)
    IF              reduce using rule 100 (expression -> resultado .)
    ELSE            reduce using rule 100 (expression -> resultado .)
    ELSEIF          reduce using rule 100 (expression -> resultado .)
    FOR             reduce using rule 100 (expression -> resultado .)
    MAP             reduce using rule 100 (expression -> resultado .)
    MAKE            reduce using rule 100 (expression -> resultado .)
    TYPE            reduce using rule 100 (expression -> resultado .)
    I_PARENTESIS    reduce using rule 100 (expression -> resultado .)
    PRINTLN         reduce using rule 100 (expression -> resultado .)
    PRINTF          reduce using rule 100 (expression -> resultado .)
    PRINT           reduce using rule 100 (expression -> resultado .)
    VAR             reduce using rule 100 (expression -> resultado .)
    I_CORCHETE      reduce using rule 100 (expression -> resultado .)
    INT             reduce using rule 100 (expression -> resultado .)
    DOUBLE          reduce using rule 100 (expression -> resultado .)
    STRING          reduce using rule 100 (expression -> resultado .)
    BOOLEAN         reduce using rule 100 (expression -> resultado .)
    RETURN          reduce using rule 100 (expression -> resultado .)
    FUNC            reduce using rule 100 (expression -> resultado .)
    COMA            reduce using rule 100 (expression -> resultado .)


state 42

    (116) print -> PRINTLN .

    I_PARENTESIS    reduce using rule 116 (print -> PRINTLN .)


state 43

    (117) print -> PRINTF .

    I_PARENTESIS    reduce using rule 117 (print -> PRINTF .)


state 44

    (118) print -> PRINT .

    I_PARENTESIS    reduce using rule 118 (print -> PRINT .)


state 45

    (28) decla_header -> VAR . ID

    ID              shift and go to state 116


state 46

    (159) valor_boolean -> BOOLEAN .

    ADICION         reduce using rule 159 (valor_boolean -> BOOLEAN .)
    RESTA           reduce using rule 159 (valor_boolean -> BOOLEAN .)
    MULTIPLICACION  reduce using rule 159 (valor_boolean -> BOOLEAN .)
    DIVISION        reduce using rule 159 (valor_boolean -> BOOLEAN .)
    MODULO          reduce using rule 159 (valor_boolean -> BOOLEAN .)
    MENOR_IGUAL     reduce using rule 159 (valor_boolean -> BOOLEAN .)
    IGUAL           reduce using rule 159 (valor_boolean -> BOOLEAN .)
    DIFERENTE       reduce using rule 159 (valor_boolean -> BOOLEAN .)
    MAYOR           reduce using rule 159 (valor_boolean -> BOOLEAN .)
    MAYOR_IGUAL     reduce using rule 159 (valor_boolean -> BOOLEAN .)
    MENOR           reduce using rule 159 (valor_boolean -> BOOLEAN .)
    $end            reduce using rule 159 (valor_boolean -> BOOLEAN .)
    I_LLAVE         reduce using rule 159 (valor_boolean -> BOOLEAN .)
    PUNTO_COMA      reduce using rule 159 (valor_boolean -> BOOLEAN .)
    D_PARENTESIS    reduce using rule 159 (valor_boolean -> BOOLEAN .)
    D_LLAVE         reduce using rule 159 (valor_boolean -> BOOLEAN .)
    ID              reduce using rule 159 (valor_boolean -> BOOLEAN .)
    IF              reduce using rule 159 (valor_boolean -> BOOLEAN .)
    ELSE            reduce using rule 159 (valor_boolean -> BOOLEAN .)
    ELSEIF          reduce using rule 159 (valor_boolean -> BOOLEAN .)
    FOR             reduce using rule 159 (valor_boolean -> BOOLEAN .)
    MAP             reduce using rule 159 (valor_boolean -> BOOLEAN .)
    MAKE            reduce using rule 159 (valor_boolean -> BOOLEAN .)
    TYPE            reduce using rule 159 (valor_boolean -> BOOLEAN .)
    I_PARENTESIS    reduce using rule 159 (valor_boolean -> BOOLEAN .)
    PRINTLN         reduce using rule 159 (valor_boolean -> BOOLEAN .)
    PRINTF          reduce using rule 159 (valor_boolean -> BOOLEAN .)
    PRINT           reduce using rule 159 (valor_boolean -> BOOLEAN .)
    VAR             reduce using rule 159 (valor_boolean -> BOOLEAN .)
    I_CORCHETE      reduce using rule 159 (valor_boolean -> BOOLEAN .)
    INT             reduce using rule 159 (valor_boolean -> BOOLEAN .)
    DOUBLE          reduce using rule 159 (valor_boolean -> BOOLEAN .)
    STRING          reduce using rule 159 (valor_boolean -> BOOLEAN .)
    BOOLEAN         reduce using rule 159 (valor_boolean -> BOOLEAN .)
    RETURN          reduce using rule 159 (valor_boolean -> BOOLEAN .)
    FUNC            reduce using rule 159 (valor_boolean -> BOOLEAN .)
    COMA            reduce using rule 159 (valor_boolean -> BOOLEAN .)
    DOS_PUNTOS      reduce using rule 159 (valor_boolean -> BOOLEAN .)


state 47

    (65) array_length_int -> array_length . INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> array_length . floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> array_length . STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> array_length . BOOLEAN I_LLAVE D_LLAVE
    (73) array_length_con_valores_int -> array_length . INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> array_length . floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> array_length . STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> array_length . BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    INTEGER         shift and go to state 117
    STRINGTYPE      shift and go to state 119
    BOOLEAN         shift and go to state 120
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    floating_type                  shift and go to state 118

state 48

    (150) valor -> valor_int .

    ADICION         reduce using rule 150 (valor -> valor_int .)
    RESTA           reduce using rule 150 (valor -> valor_int .)
    MULTIPLICACION  reduce using rule 150 (valor -> valor_int .)
    DIVISION        reduce using rule 150 (valor -> valor_int .)
    MODULO          reduce using rule 150 (valor -> valor_int .)
    MENOR_IGUAL     reduce using rule 150 (valor -> valor_int .)
    IGUAL           reduce using rule 150 (valor -> valor_int .)
    DIFERENTE       reduce using rule 150 (valor -> valor_int .)
    MAYOR           reduce using rule 150 (valor -> valor_int .)
    MAYOR_IGUAL     reduce using rule 150 (valor -> valor_int .)
    MENOR           reduce using rule 150 (valor -> valor_int .)
    $end            reduce using rule 150 (valor -> valor_int .)
    I_LLAVE         reduce using rule 150 (valor -> valor_int .)
    PUNTO_COMA      reduce using rule 150 (valor -> valor_int .)
    D_PARENTESIS    reduce using rule 150 (valor -> valor_int .)
    D_LLAVE         reduce using rule 150 (valor -> valor_int .)
    ID              reduce using rule 150 (valor -> valor_int .)
    IF              reduce using rule 150 (valor -> valor_int .)
    ELSE            reduce using rule 150 (valor -> valor_int .)
    ELSEIF          reduce using rule 150 (valor -> valor_int .)
    FOR             reduce using rule 150 (valor -> valor_int .)
    MAP             reduce using rule 150 (valor -> valor_int .)
    MAKE            reduce using rule 150 (valor -> valor_int .)
    TYPE            reduce using rule 150 (valor -> valor_int .)
    I_PARENTESIS    reduce using rule 150 (valor -> valor_int .)
    PRINTLN         reduce using rule 150 (valor -> valor_int .)
    PRINTF          reduce using rule 150 (valor -> valor_int .)
    PRINT           reduce using rule 150 (valor -> valor_int .)
    VAR             reduce using rule 150 (valor -> valor_int .)
    I_CORCHETE      reduce using rule 150 (valor -> valor_int .)
    INT             reduce using rule 150 (valor -> valor_int .)
    DOUBLE          reduce using rule 150 (valor -> valor_int .)
    STRING          reduce using rule 150 (valor -> valor_int .)
    BOOLEAN         reduce using rule 150 (valor -> valor_int .)
    RETURN          reduce using rule 150 (valor -> valor_int .)
    FUNC            reduce using rule 150 (valor -> valor_int .)
    COMA            reduce using rule 150 (valor -> valor_int .)
    DOS_PUNTOS      reduce using rule 150 (valor -> valor_int .)


state 49

    (151) valor -> valor_double .

    ADICION         reduce using rule 151 (valor -> valor_double .)
    RESTA           reduce using rule 151 (valor -> valor_double .)
    MULTIPLICACION  reduce using rule 151 (valor -> valor_double .)
    DIVISION        reduce using rule 151 (valor -> valor_double .)
    MODULO          reduce using rule 151 (valor -> valor_double .)
    MENOR_IGUAL     reduce using rule 151 (valor -> valor_double .)
    IGUAL           reduce using rule 151 (valor -> valor_double .)
    DIFERENTE       reduce using rule 151 (valor -> valor_double .)
    MAYOR           reduce using rule 151 (valor -> valor_double .)
    MAYOR_IGUAL     reduce using rule 151 (valor -> valor_double .)
    MENOR           reduce using rule 151 (valor -> valor_double .)
    $end            reduce using rule 151 (valor -> valor_double .)
    I_LLAVE         reduce using rule 151 (valor -> valor_double .)
    PUNTO_COMA      reduce using rule 151 (valor -> valor_double .)
    D_PARENTESIS    reduce using rule 151 (valor -> valor_double .)
    D_LLAVE         reduce using rule 151 (valor -> valor_double .)
    ID              reduce using rule 151 (valor -> valor_double .)
    IF              reduce using rule 151 (valor -> valor_double .)
    ELSE            reduce using rule 151 (valor -> valor_double .)
    ELSEIF          reduce using rule 151 (valor -> valor_double .)
    FOR             reduce using rule 151 (valor -> valor_double .)
    MAP             reduce using rule 151 (valor -> valor_double .)
    MAKE            reduce using rule 151 (valor -> valor_double .)
    TYPE            reduce using rule 151 (valor -> valor_double .)
    I_PARENTESIS    reduce using rule 151 (valor -> valor_double .)
    PRINTLN         reduce using rule 151 (valor -> valor_double .)
    PRINTF          reduce using rule 151 (valor -> valor_double .)
    PRINT           reduce using rule 151 (valor -> valor_double .)
    VAR             reduce using rule 151 (valor -> valor_double .)
    I_CORCHETE      reduce using rule 151 (valor -> valor_double .)
    INT             reduce using rule 151 (valor -> valor_double .)
    DOUBLE          reduce using rule 151 (valor -> valor_double .)
    STRING          reduce using rule 151 (valor -> valor_double .)
    BOOLEAN         reduce using rule 151 (valor -> valor_double .)
    RETURN          reduce using rule 151 (valor -> valor_double .)
    FUNC            reduce using rule 151 (valor -> valor_double .)
    COMA            reduce using rule 151 (valor -> valor_double .)
    DOS_PUNTOS      reduce using rule 151 (valor -> valor_double .)


state 50

    (152) valor -> valor_string .

    ADICION         reduce using rule 152 (valor -> valor_string .)
    RESTA           reduce using rule 152 (valor -> valor_string .)
    MULTIPLICACION  reduce using rule 152 (valor -> valor_string .)
    DIVISION        reduce using rule 152 (valor -> valor_string .)
    MODULO          reduce using rule 152 (valor -> valor_string .)
    MENOR_IGUAL     reduce using rule 152 (valor -> valor_string .)
    IGUAL           reduce using rule 152 (valor -> valor_string .)
    DIFERENTE       reduce using rule 152 (valor -> valor_string .)
    MAYOR           reduce using rule 152 (valor -> valor_string .)
    MAYOR_IGUAL     reduce using rule 152 (valor -> valor_string .)
    MENOR           reduce using rule 152 (valor -> valor_string .)
    $end            reduce using rule 152 (valor -> valor_string .)
    I_LLAVE         reduce using rule 152 (valor -> valor_string .)
    PUNTO_COMA      reduce using rule 152 (valor -> valor_string .)
    D_PARENTESIS    reduce using rule 152 (valor -> valor_string .)
    D_LLAVE         reduce using rule 152 (valor -> valor_string .)
    ID              reduce using rule 152 (valor -> valor_string .)
    IF              reduce using rule 152 (valor -> valor_string .)
    ELSE            reduce using rule 152 (valor -> valor_string .)
    ELSEIF          reduce using rule 152 (valor -> valor_string .)
    FOR             reduce using rule 152 (valor -> valor_string .)
    MAP             reduce using rule 152 (valor -> valor_string .)
    MAKE            reduce using rule 152 (valor -> valor_string .)
    TYPE            reduce using rule 152 (valor -> valor_string .)
    I_PARENTESIS    reduce using rule 152 (valor -> valor_string .)
    PRINTLN         reduce using rule 152 (valor -> valor_string .)
    PRINTF          reduce using rule 152 (valor -> valor_string .)
    PRINT           reduce using rule 152 (valor -> valor_string .)
    VAR             reduce using rule 152 (valor -> valor_string .)
    I_CORCHETE      reduce using rule 152 (valor -> valor_string .)
    INT             reduce using rule 152 (valor -> valor_string .)
    DOUBLE          reduce using rule 152 (valor -> valor_string .)
    STRING          reduce using rule 152 (valor -> valor_string .)
    BOOLEAN         reduce using rule 152 (valor -> valor_string .)
    RETURN          reduce using rule 152 (valor -> valor_string .)
    FUNC            reduce using rule 152 (valor -> valor_string .)
    COMA            reduce using rule 152 (valor -> valor_string .)
    DOS_PUNTOS      reduce using rule 152 (valor -> valor_string .)


state 51

    (153) valor -> valor_boolean .

    ADICION         reduce using rule 153 (valor -> valor_boolean .)
    RESTA           reduce using rule 153 (valor -> valor_boolean .)
    MULTIPLICACION  reduce using rule 153 (valor -> valor_boolean .)
    DIVISION        reduce using rule 153 (valor -> valor_boolean .)
    MODULO          reduce using rule 153 (valor -> valor_boolean .)
    MENOR_IGUAL     reduce using rule 153 (valor -> valor_boolean .)
    IGUAL           reduce using rule 153 (valor -> valor_boolean .)
    DIFERENTE       reduce using rule 153 (valor -> valor_boolean .)
    MAYOR           reduce using rule 153 (valor -> valor_boolean .)
    MAYOR_IGUAL     reduce using rule 153 (valor -> valor_boolean .)
    MENOR           reduce using rule 153 (valor -> valor_boolean .)
    $end            reduce using rule 153 (valor -> valor_boolean .)
    I_LLAVE         reduce using rule 153 (valor -> valor_boolean .)
    PUNTO_COMA      reduce using rule 153 (valor -> valor_boolean .)
    D_PARENTESIS    reduce using rule 153 (valor -> valor_boolean .)
    D_LLAVE         reduce using rule 153 (valor -> valor_boolean .)
    ID              reduce using rule 153 (valor -> valor_boolean .)
    IF              reduce using rule 153 (valor -> valor_boolean .)
    ELSE            reduce using rule 153 (valor -> valor_boolean .)
    ELSEIF          reduce using rule 153 (valor -> valor_boolean .)
    FOR             reduce using rule 153 (valor -> valor_boolean .)
    MAP             reduce using rule 153 (valor -> valor_boolean .)
    MAKE            reduce using rule 153 (valor -> valor_boolean .)
    TYPE            reduce using rule 153 (valor -> valor_boolean .)
    I_PARENTESIS    reduce using rule 153 (valor -> valor_boolean .)
    PRINTLN         reduce using rule 153 (valor -> valor_boolean .)
    PRINTF          reduce using rule 153 (valor -> valor_boolean .)
    PRINT           reduce using rule 153 (valor -> valor_boolean .)
    VAR             reduce using rule 153 (valor -> valor_boolean .)
    I_CORCHETE      reduce using rule 153 (valor -> valor_boolean .)
    INT             reduce using rule 153 (valor -> valor_boolean .)
    DOUBLE          reduce using rule 153 (valor -> valor_boolean .)
    STRING          reduce using rule 153 (valor -> valor_boolean .)
    BOOLEAN         reduce using rule 153 (valor -> valor_boolean .)
    RETURN          reduce using rule 153 (valor -> valor_boolean .)
    FUNC            reduce using rule 153 (valor -> valor_boolean .)
    COMA            reduce using rule 153 (valor -> valor_boolean .)
    DOS_PUNTOS      reduce using rule 153 (valor -> valor_boolean .)


state 52

    (154) valor -> valor_variable .

    ADICION         reduce using rule 154 (valor -> valor_variable .)
    RESTA           reduce using rule 154 (valor -> valor_variable .)
    MULTIPLICACION  reduce using rule 154 (valor -> valor_variable .)
    DIVISION        reduce using rule 154 (valor -> valor_variable .)
    MODULO          reduce using rule 154 (valor -> valor_variable .)
    MENOR_IGUAL     reduce using rule 154 (valor -> valor_variable .)
    IGUAL           reduce using rule 154 (valor -> valor_variable .)
    DIFERENTE       reduce using rule 154 (valor -> valor_variable .)
    MAYOR           reduce using rule 154 (valor -> valor_variable .)
    MAYOR_IGUAL     reduce using rule 154 (valor -> valor_variable .)
    MENOR           reduce using rule 154 (valor -> valor_variable .)
    $end            reduce using rule 154 (valor -> valor_variable .)
    I_LLAVE         reduce using rule 154 (valor -> valor_variable .)
    PUNTO_COMA      reduce using rule 154 (valor -> valor_variable .)
    D_PARENTESIS    reduce using rule 154 (valor -> valor_variable .)
    D_LLAVE         reduce using rule 154 (valor -> valor_variable .)
    ID              reduce using rule 154 (valor -> valor_variable .)
    IF              reduce using rule 154 (valor -> valor_variable .)
    ELSE            reduce using rule 154 (valor -> valor_variable .)
    ELSEIF          reduce using rule 154 (valor -> valor_variable .)
    FOR             reduce using rule 154 (valor -> valor_variable .)
    MAP             reduce using rule 154 (valor -> valor_variable .)
    MAKE            reduce using rule 154 (valor -> valor_variable .)
    TYPE            reduce using rule 154 (valor -> valor_variable .)
    I_PARENTESIS    reduce using rule 154 (valor -> valor_variable .)
    PRINTLN         reduce using rule 154 (valor -> valor_variable .)
    PRINTF          reduce using rule 154 (valor -> valor_variable .)
    PRINT           reduce using rule 154 (valor -> valor_variable .)
    VAR             reduce using rule 154 (valor -> valor_variable .)
    I_CORCHETE      reduce using rule 154 (valor -> valor_variable .)
    INT             reduce using rule 154 (valor -> valor_variable .)
    DOUBLE          reduce using rule 154 (valor -> valor_variable .)
    STRING          reduce using rule 154 (valor -> valor_variable .)
    BOOLEAN         reduce using rule 154 (valor -> valor_variable .)
    RETURN          reduce using rule 154 (valor -> valor_variable .)
    FUNC            reduce using rule 154 (valor -> valor_variable .)
    COMA            reduce using rule 154 (valor -> valor_variable .)
    DOS_PUNTOS      reduce using rule 154 (valor -> valor_variable .)


state 53

    (155) valor -> valor_struct .

    ADICION         reduce using rule 155 (valor -> valor_struct .)
    RESTA           reduce using rule 155 (valor -> valor_struct .)
    MULTIPLICACION  reduce using rule 155 (valor -> valor_struct .)
    DIVISION        reduce using rule 155 (valor -> valor_struct .)
    MODULO          reduce using rule 155 (valor -> valor_struct .)
    MENOR_IGUAL     reduce using rule 155 (valor -> valor_struct .)
    IGUAL           reduce using rule 155 (valor -> valor_struct .)
    DIFERENTE       reduce using rule 155 (valor -> valor_struct .)
    MAYOR           reduce using rule 155 (valor -> valor_struct .)
    MAYOR_IGUAL     reduce using rule 155 (valor -> valor_struct .)
    MENOR           reduce using rule 155 (valor -> valor_struct .)
    $end            reduce using rule 155 (valor -> valor_struct .)
    I_LLAVE         reduce using rule 155 (valor -> valor_struct .)
    PUNTO_COMA      reduce using rule 155 (valor -> valor_struct .)
    D_PARENTESIS    reduce using rule 155 (valor -> valor_struct .)
    D_LLAVE         reduce using rule 155 (valor -> valor_struct .)
    ID              reduce using rule 155 (valor -> valor_struct .)
    IF              reduce using rule 155 (valor -> valor_struct .)
    ELSE            reduce using rule 155 (valor -> valor_struct .)
    ELSEIF          reduce using rule 155 (valor -> valor_struct .)
    FOR             reduce using rule 155 (valor -> valor_struct .)
    MAP             reduce using rule 155 (valor -> valor_struct .)
    MAKE            reduce using rule 155 (valor -> valor_struct .)
    TYPE            reduce using rule 155 (valor -> valor_struct .)
    I_PARENTESIS    reduce using rule 155 (valor -> valor_struct .)
    PRINTLN         reduce using rule 155 (valor -> valor_struct .)
    PRINTF          reduce using rule 155 (valor -> valor_struct .)
    PRINT           reduce using rule 155 (valor -> valor_struct .)
    VAR             reduce using rule 155 (valor -> valor_struct .)
    I_CORCHETE      reduce using rule 155 (valor -> valor_struct .)
    INT             reduce using rule 155 (valor -> valor_struct .)
    DOUBLE          reduce using rule 155 (valor -> valor_struct .)
    STRING          reduce using rule 155 (valor -> valor_struct .)
    BOOLEAN         reduce using rule 155 (valor -> valor_struct .)
    RETURN          reduce using rule 155 (valor -> valor_struct .)
    FUNC            reduce using rule 155 (valor -> valor_struct .)
    COMA            reduce using rule 155 (valor -> valor_struct .)
    DOS_PUNTOS      reduce using rule 155 (valor -> valor_struct .)


state 54

    (156) valor_int -> INT .

    ADICION         reduce using rule 156 (valor_int -> INT .)
    RESTA           reduce using rule 156 (valor_int -> INT .)
    MULTIPLICACION  reduce using rule 156 (valor_int -> INT .)
    DIVISION        reduce using rule 156 (valor_int -> INT .)
    MODULO          reduce using rule 156 (valor_int -> INT .)
    MENOR_IGUAL     reduce using rule 156 (valor_int -> INT .)
    IGUAL           reduce using rule 156 (valor_int -> INT .)
    DIFERENTE       reduce using rule 156 (valor_int -> INT .)
    MAYOR           reduce using rule 156 (valor_int -> INT .)
    MAYOR_IGUAL     reduce using rule 156 (valor_int -> INT .)
    MENOR           reduce using rule 156 (valor_int -> INT .)
    $end            reduce using rule 156 (valor_int -> INT .)
    I_LLAVE         reduce using rule 156 (valor_int -> INT .)
    PUNTO_COMA      reduce using rule 156 (valor_int -> INT .)
    D_PARENTESIS    reduce using rule 156 (valor_int -> INT .)
    D_LLAVE         reduce using rule 156 (valor_int -> INT .)
    ID              reduce using rule 156 (valor_int -> INT .)
    IF              reduce using rule 156 (valor_int -> INT .)
    ELSE            reduce using rule 156 (valor_int -> INT .)
    ELSEIF          reduce using rule 156 (valor_int -> INT .)
    FOR             reduce using rule 156 (valor_int -> INT .)
    MAP             reduce using rule 156 (valor_int -> INT .)
    MAKE            reduce using rule 156 (valor_int -> INT .)
    TYPE            reduce using rule 156 (valor_int -> INT .)
    I_PARENTESIS    reduce using rule 156 (valor_int -> INT .)
    PRINTLN         reduce using rule 156 (valor_int -> INT .)
    PRINTF          reduce using rule 156 (valor_int -> INT .)
    PRINT           reduce using rule 156 (valor_int -> INT .)
    VAR             reduce using rule 156 (valor_int -> INT .)
    I_CORCHETE      reduce using rule 156 (valor_int -> INT .)
    INT             reduce using rule 156 (valor_int -> INT .)
    DOUBLE          reduce using rule 156 (valor_int -> INT .)
    STRING          reduce using rule 156 (valor_int -> INT .)
    BOOLEAN         reduce using rule 156 (valor_int -> INT .)
    RETURN          reduce using rule 156 (valor_int -> INT .)
    FUNC            reduce using rule 156 (valor_int -> INT .)
    COMA            reduce using rule 156 (valor_int -> INT .)
    DOS_PUNTOS      reduce using rule 156 (valor_int -> INT .)


state 55

    (157) valor_double -> DOUBLE .

    ADICION         reduce using rule 157 (valor_double -> DOUBLE .)
    RESTA           reduce using rule 157 (valor_double -> DOUBLE .)
    MULTIPLICACION  reduce using rule 157 (valor_double -> DOUBLE .)
    DIVISION        reduce using rule 157 (valor_double -> DOUBLE .)
    MODULO          reduce using rule 157 (valor_double -> DOUBLE .)
    MENOR_IGUAL     reduce using rule 157 (valor_double -> DOUBLE .)
    IGUAL           reduce using rule 157 (valor_double -> DOUBLE .)
    DIFERENTE       reduce using rule 157 (valor_double -> DOUBLE .)
    MAYOR           reduce using rule 157 (valor_double -> DOUBLE .)
    MAYOR_IGUAL     reduce using rule 157 (valor_double -> DOUBLE .)
    MENOR           reduce using rule 157 (valor_double -> DOUBLE .)
    $end            reduce using rule 157 (valor_double -> DOUBLE .)
    I_LLAVE         reduce using rule 157 (valor_double -> DOUBLE .)
    PUNTO_COMA      reduce using rule 157 (valor_double -> DOUBLE .)
    D_PARENTESIS    reduce using rule 157 (valor_double -> DOUBLE .)
    D_LLAVE         reduce using rule 157 (valor_double -> DOUBLE .)
    ID              reduce using rule 157 (valor_double -> DOUBLE .)
    IF              reduce using rule 157 (valor_double -> DOUBLE .)
    ELSE            reduce using rule 157 (valor_double -> DOUBLE .)
    ELSEIF          reduce using rule 157 (valor_double -> DOUBLE .)
    FOR             reduce using rule 157 (valor_double -> DOUBLE .)
    MAP             reduce using rule 157 (valor_double -> DOUBLE .)
    MAKE            reduce using rule 157 (valor_double -> DOUBLE .)
    TYPE            reduce using rule 157 (valor_double -> DOUBLE .)
    I_PARENTESIS    reduce using rule 157 (valor_double -> DOUBLE .)
    PRINTLN         reduce using rule 157 (valor_double -> DOUBLE .)
    PRINTF          reduce using rule 157 (valor_double -> DOUBLE .)
    PRINT           reduce using rule 157 (valor_double -> DOUBLE .)
    VAR             reduce using rule 157 (valor_double -> DOUBLE .)
    I_CORCHETE      reduce using rule 157 (valor_double -> DOUBLE .)
    INT             reduce using rule 157 (valor_double -> DOUBLE .)
    DOUBLE          reduce using rule 157 (valor_double -> DOUBLE .)
    STRING          reduce using rule 157 (valor_double -> DOUBLE .)
    BOOLEAN         reduce using rule 157 (valor_double -> DOUBLE .)
    RETURN          reduce using rule 157 (valor_double -> DOUBLE .)
    FUNC            reduce using rule 157 (valor_double -> DOUBLE .)
    COMA            reduce using rule 157 (valor_double -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 157 (valor_double -> DOUBLE .)


state 56

    (158) valor_string -> STRING .

    ADICION         reduce using rule 158 (valor_string -> STRING .)
    RESTA           reduce using rule 158 (valor_string -> STRING .)
    MULTIPLICACION  reduce using rule 158 (valor_string -> STRING .)
    DIVISION        reduce using rule 158 (valor_string -> STRING .)
    MODULO          reduce using rule 158 (valor_string -> STRING .)
    MENOR_IGUAL     reduce using rule 158 (valor_string -> STRING .)
    IGUAL           reduce using rule 158 (valor_string -> STRING .)
    DIFERENTE       reduce using rule 158 (valor_string -> STRING .)
    MAYOR           reduce using rule 158 (valor_string -> STRING .)
    MAYOR_IGUAL     reduce using rule 158 (valor_string -> STRING .)
    MENOR           reduce using rule 158 (valor_string -> STRING .)
    $end            reduce using rule 158 (valor_string -> STRING .)
    I_LLAVE         reduce using rule 158 (valor_string -> STRING .)
    PUNTO_COMA      reduce using rule 158 (valor_string -> STRING .)
    D_PARENTESIS    reduce using rule 158 (valor_string -> STRING .)
    D_LLAVE         reduce using rule 158 (valor_string -> STRING .)
    ID              reduce using rule 158 (valor_string -> STRING .)
    IF              reduce using rule 158 (valor_string -> STRING .)
    ELSE            reduce using rule 158 (valor_string -> STRING .)
    ELSEIF          reduce using rule 158 (valor_string -> STRING .)
    FOR             reduce using rule 158 (valor_string -> STRING .)
    MAP             reduce using rule 158 (valor_string -> STRING .)
    MAKE            reduce using rule 158 (valor_string -> STRING .)
    TYPE            reduce using rule 158 (valor_string -> STRING .)
    I_PARENTESIS    reduce using rule 158 (valor_string -> STRING .)
    PRINTLN         reduce using rule 158 (valor_string -> STRING .)
    PRINTF          reduce using rule 158 (valor_string -> STRING .)
    PRINT           reduce using rule 158 (valor_string -> STRING .)
    VAR             reduce using rule 158 (valor_string -> STRING .)
    I_CORCHETE      reduce using rule 158 (valor_string -> STRING .)
    INT             reduce using rule 158 (valor_string -> STRING .)
    DOUBLE          reduce using rule 158 (valor_string -> STRING .)
    STRING          reduce using rule 158 (valor_string -> STRING .)
    BOOLEAN         reduce using rule 158 (valor_string -> STRING .)
    RETURN          reduce using rule 158 (valor_string -> STRING .)
    FUNC            reduce using rule 158 (valor_string -> STRING .)
    COMA            reduce using rule 158 (valor_string -> STRING .)
    DOS_PUNTOS      reduce using rule 158 (valor_string -> STRING .)


state 57

    (2) go -> funcion go .

    $end            reduce using rule 2 (go -> funcion go .)


state 58

    (103) resultado -> expression operacion_binaria . expression
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 74
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    expression                     shift and go to state 121
    valor                          shift and go to state 14
    resultado                      shift and go to state 41
    llamada_func                   shift and go to state 73
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 59

    (139) operacion_binaria -> ADICION .

    I_PARENTESIS    reduce using rule 139 (operacion_binaria -> ADICION .)
    ID              reduce using rule 139 (operacion_binaria -> ADICION .)
    INT             reduce using rule 139 (operacion_binaria -> ADICION .)
    DOUBLE          reduce using rule 139 (operacion_binaria -> ADICION .)
    STRING          reduce using rule 139 (operacion_binaria -> ADICION .)
    BOOLEAN         reduce using rule 139 (operacion_binaria -> ADICION .)


state 60

    (140) operacion_binaria -> RESTA .

    I_PARENTESIS    reduce using rule 140 (operacion_binaria -> RESTA .)
    ID              reduce using rule 140 (operacion_binaria -> RESTA .)
    INT             reduce using rule 140 (operacion_binaria -> RESTA .)
    DOUBLE          reduce using rule 140 (operacion_binaria -> RESTA .)
    STRING          reduce using rule 140 (operacion_binaria -> RESTA .)
    BOOLEAN         reduce using rule 140 (operacion_binaria -> RESTA .)


state 61

    (141) operacion_binaria -> MULTIPLICACION .

    I_PARENTESIS    reduce using rule 141 (operacion_binaria -> MULTIPLICACION .)
    ID              reduce using rule 141 (operacion_binaria -> MULTIPLICACION .)
    INT             reduce using rule 141 (operacion_binaria -> MULTIPLICACION .)
    DOUBLE          reduce using rule 141 (operacion_binaria -> MULTIPLICACION .)
    STRING          reduce using rule 141 (operacion_binaria -> MULTIPLICACION .)
    BOOLEAN         reduce using rule 141 (operacion_binaria -> MULTIPLICACION .)


state 62

    (142) operacion_binaria -> DIVISION .

    I_PARENTESIS    reduce using rule 142 (operacion_binaria -> DIVISION .)
    ID              reduce using rule 142 (operacion_binaria -> DIVISION .)
    INT             reduce using rule 142 (operacion_binaria -> DIVISION .)
    DOUBLE          reduce using rule 142 (operacion_binaria -> DIVISION .)
    STRING          reduce using rule 142 (operacion_binaria -> DIVISION .)
    BOOLEAN         reduce using rule 142 (operacion_binaria -> DIVISION .)


state 63

    (143) operacion_binaria -> MODULO .

    I_PARENTESIS    reduce using rule 143 (operacion_binaria -> MODULO .)
    ID              reduce using rule 143 (operacion_binaria -> MODULO .)
    INT             reduce using rule 143 (operacion_binaria -> MODULO .)
    DOUBLE          reduce using rule 143 (operacion_binaria -> MODULO .)
    STRING          reduce using rule 143 (operacion_binaria -> MODULO .)
    BOOLEAN         reduce using rule 143 (operacion_binaria -> MODULO .)


state 64

    (144) operacion_binaria -> MENOR_IGUAL .

    I_PARENTESIS    reduce using rule 144 (operacion_binaria -> MENOR_IGUAL .)
    ID              reduce using rule 144 (operacion_binaria -> MENOR_IGUAL .)
    INT             reduce using rule 144 (operacion_binaria -> MENOR_IGUAL .)
    DOUBLE          reduce using rule 144 (operacion_binaria -> MENOR_IGUAL .)
    STRING          reduce using rule 144 (operacion_binaria -> MENOR_IGUAL .)
    BOOLEAN         reduce using rule 144 (operacion_binaria -> MENOR_IGUAL .)


state 65

    (145) operacion_binaria -> IGUAL .

    I_PARENTESIS    reduce using rule 145 (operacion_binaria -> IGUAL .)
    ID              reduce using rule 145 (operacion_binaria -> IGUAL .)
    INT             reduce using rule 145 (operacion_binaria -> IGUAL .)
    DOUBLE          reduce using rule 145 (operacion_binaria -> IGUAL .)
    STRING          reduce using rule 145 (operacion_binaria -> IGUAL .)
    BOOLEAN         reduce using rule 145 (operacion_binaria -> IGUAL .)


state 66

    (146) operacion_binaria -> DIFERENTE .

    I_PARENTESIS    reduce using rule 146 (operacion_binaria -> DIFERENTE .)
    ID              reduce using rule 146 (operacion_binaria -> DIFERENTE .)
    INT             reduce using rule 146 (operacion_binaria -> DIFERENTE .)
    DOUBLE          reduce using rule 146 (operacion_binaria -> DIFERENTE .)
    STRING          reduce using rule 146 (operacion_binaria -> DIFERENTE .)
    BOOLEAN         reduce using rule 146 (operacion_binaria -> DIFERENTE .)


state 67

    (147) operacion_binaria -> MAYOR .

    I_PARENTESIS    reduce using rule 147 (operacion_binaria -> MAYOR .)
    ID              reduce using rule 147 (operacion_binaria -> MAYOR .)
    INT             reduce using rule 147 (operacion_binaria -> MAYOR .)
    DOUBLE          reduce using rule 147 (operacion_binaria -> MAYOR .)
    STRING          reduce using rule 147 (operacion_binaria -> MAYOR .)
    BOOLEAN         reduce using rule 147 (operacion_binaria -> MAYOR .)


state 68

    (148) operacion_binaria -> MAYOR_IGUAL .

    I_PARENTESIS    reduce using rule 148 (operacion_binaria -> MAYOR_IGUAL .)
    ID              reduce using rule 148 (operacion_binaria -> MAYOR_IGUAL .)
    INT             reduce using rule 148 (operacion_binaria -> MAYOR_IGUAL .)
    DOUBLE          reduce using rule 148 (operacion_binaria -> MAYOR_IGUAL .)
    STRING          reduce using rule 148 (operacion_binaria -> MAYOR_IGUAL .)
    BOOLEAN         reduce using rule 148 (operacion_binaria -> MAYOR_IGUAL .)


state 69

    (149) operacion_binaria -> MENOR .

    I_PARENTESIS    reduce using rule 149 (operacion_binaria -> MENOR .)
    ID              reduce using rule 149 (operacion_binaria -> MENOR .)
    INT             reduce using rule 149 (operacion_binaria -> MENOR .)
    DOUBLE          reduce using rule 149 (operacion_binaria -> MENOR .)
    STRING          reduce using rule 149 (operacion_binaria -> MENOR .)
    BOOLEAN         reduce using rule 149 (operacion_binaria -> MENOR .)


state 70

    (16) instruccion -> print I_PARENTESIS . valores D_PARENTESIS
    (105) valores -> . valor
    (106) valores -> . valor COMA valores
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    valores                        shift and go to state 122
    valor                          shift and go to state 123
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 71

    (102) expression -> I_PARENTESIS resultado . D_PARENTESIS
    (100) expression -> resultado .

    D_PARENTESIS    shift and go to state 124
    ADICION         reduce using rule 100 (expression -> resultado .)
    RESTA           reduce using rule 100 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 100 (expression -> resultado .)
    DIVISION        reduce using rule 100 (expression -> resultado .)
    MODULO          reduce using rule 100 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 100 (expression -> resultado .)
    IGUAL           reduce using rule 100 (expression -> resultado .)
    DIFERENTE       reduce using rule 100 (expression -> resultado .)
    MAYOR           reduce using rule 100 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 100 (expression -> resultado .)
    MENOR           reduce using rule 100 (expression -> resultado .)


state 72

    (103) resultado -> expression . operacion_binaria expression
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 58

state 73

    (101) expression -> llamada_func .

    ADICION         reduce using rule 101 (expression -> llamada_func .)
    RESTA           reduce using rule 101 (expression -> llamada_func .)
    MULTIPLICACION  reduce using rule 101 (expression -> llamada_func .)
    DIVISION        reduce using rule 101 (expression -> llamada_func .)
    MODULO          reduce using rule 101 (expression -> llamada_func .)
    MENOR_IGUAL     reduce using rule 101 (expression -> llamada_func .)
    IGUAL           reduce using rule 101 (expression -> llamada_func .)
    DIFERENTE       reduce using rule 101 (expression -> llamada_func .)
    MAYOR           reduce using rule 101 (expression -> llamada_func .)
    MAYOR_IGUAL     reduce using rule 101 (expression -> llamada_func .)
    MENOR           reduce using rule 101 (expression -> llamada_func .)
    $end            reduce using rule 101 (expression -> llamada_func .)
    D_PARENTESIS    reduce using rule 101 (expression -> llamada_func .)
    PUNTO_COMA      reduce using rule 101 (expression -> llamada_func .)
    D_LLAVE         reduce using rule 101 (expression -> llamada_func .)
    ID              reduce using rule 101 (expression -> llamada_func .)
    IF              reduce using rule 101 (expression -> llamada_func .)
    ELSE            reduce using rule 101 (expression -> llamada_func .)
    ELSEIF          reduce using rule 101 (expression -> llamada_func .)
    FOR             reduce using rule 101 (expression -> llamada_func .)
    MAP             reduce using rule 101 (expression -> llamada_func .)
    MAKE            reduce using rule 101 (expression -> llamada_func .)
    TYPE            reduce using rule 101 (expression -> llamada_func .)
    I_PARENTESIS    reduce using rule 101 (expression -> llamada_func .)
    PRINTLN         reduce using rule 101 (expression -> llamada_func .)
    PRINTF          reduce using rule 101 (expression -> llamada_func .)
    PRINT           reduce using rule 101 (expression -> llamada_func .)
    VAR             reduce using rule 101 (expression -> llamada_func .)
    I_CORCHETE      reduce using rule 101 (expression -> llamada_func .)
    INT             reduce using rule 101 (expression -> llamada_func .)
    DOUBLE          reduce using rule 101 (expression -> llamada_func .)
    STRING          reduce using rule 101 (expression -> llamada_func .)
    BOOLEAN         reduce using rule 101 (expression -> llamada_func .)
    RETURN          reduce using rule 101 (expression -> llamada_func .)
    FUNC            reduce using rule 101 (expression -> llamada_func .)
    COMA            reduce using rule 101 (expression -> llamada_func .)


state 74

    (36) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (160) valor_variable -> ID .
    (91) valor_struct -> ID . PUNTO ID

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    I_PARENTESIS    shift and go to state 89
    ADICION         reduce using rule 160 (valor_variable -> ID .)
    RESTA           reduce using rule 160 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 160 (valor_variable -> ID .)
    DIVISION        reduce using rule 160 (valor_variable -> ID .)
    MODULO          reduce using rule 160 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    IGUAL           reduce using rule 160 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 160 (valor_variable -> ID .)
    MAYOR           reduce using rule 160 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    MENOR           reduce using rule 160 (valor_variable -> ID .)
    $end            reduce using rule 160 (valor_variable -> ID .)
    D_PARENTESIS    reduce using rule 160 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 160 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 160 (valor_variable -> ID .)
    ID              reduce using rule 160 (valor_variable -> ID .)
    IF              reduce using rule 160 (valor_variable -> ID .)
    ELSE            reduce using rule 160 (valor_variable -> ID .)
    ELSEIF          reduce using rule 160 (valor_variable -> ID .)
    FOR             reduce using rule 160 (valor_variable -> ID .)
    MAP             reduce using rule 160 (valor_variable -> ID .)
    MAKE            reduce using rule 160 (valor_variable -> ID .)
    TYPE            reduce using rule 160 (valor_variable -> ID .)
    PRINTLN         reduce using rule 160 (valor_variable -> ID .)
    PRINTF          reduce using rule 160 (valor_variable -> ID .)
    PRINT           reduce using rule 160 (valor_variable -> ID .)
    VAR             reduce using rule 160 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 160 (valor_variable -> ID .)
    INT             reduce using rule 160 (valor_variable -> ID .)
    DOUBLE          reduce using rule 160 (valor_variable -> ID .)
    STRING          reduce using rule 160 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 160 (valor_variable -> ID .)
    RETURN          reduce using rule 160 (valor_variable -> ID .)
    FUNC            reduce using rule 160 (valor_variable -> ID .)
    COMA            reduce using rule 160 (valor_variable -> ID .)
    PUNTO           shift and go to state 92

  ! I_PARENTESIS    [ reduce using rule 160 (valor_variable -> ID .) ]


state 75

    (18) instruccion -> decla_header ASIGNACION . instruccion
    (25) declaracion_comun -> decla_header ASIGNACION . valor
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE

    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    decla_header                   shift and go to state 10
    instruccion                    shift and go to state 125
    valor                          shift and go to state 126
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47

state 76

    (19) instruccion -> decla_header array_type_spec . ASIGNACION instruccion
    (27) empty_array -> decla_header array_type_spec .

    ASIGNACION      shift and go to state 127
    $end            reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    PUNTO_COMA      reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    D_LLAVE         reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    ID              reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    IF              reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    ELSE            reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    ELSEIF          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    FOR             reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    MAP             reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    MAKE            reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    TYPE            reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    I_PARENTESIS    reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    PRINTLN         reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    PRINTF          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    PRINT           reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    VAR             reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    I_CORCHETE      reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    INT             reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    DOUBLE          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    STRING          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    BOOLEAN         reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    RETURN          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    FUNC            reduce using rule 27 (empty_array -> decla_header array_type_spec .)


state 77

    (24) declaracion_comun -> decla_header type . ASIGNACION valor

    ASIGNACION      shift and go to state 128


state 78

    (26) empty_struct -> decla_header ID .

    ASIGNACION      reduce using rule 26 (empty_struct -> decla_header ID .)
    $end            reduce using rule 26 (empty_struct -> decla_header ID .)
    PUNTO_COMA      reduce using rule 26 (empty_struct -> decla_header ID .)
    D_LLAVE         reduce using rule 26 (empty_struct -> decla_header ID .)
    ID              reduce using rule 26 (empty_struct -> decla_header ID .)
    IF              reduce using rule 26 (empty_struct -> decla_header ID .)
    ELSE            reduce using rule 26 (empty_struct -> decla_header ID .)
    ELSEIF          reduce using rule 26 (empty_struct -> decla_header ID .)
    FOR             reduce using rule 26 (empty_struct -> decla_header ID .)
    MAP             reduce using rule 26 (empty_struct -> decla_header ID .)
    MAKE            reduce using rule 26 (empty_struct -> decla_header ID .)
    TYPE            reduce using rule 26 (empty_struct -> decla_header ID .)
    I_PARENTESIS    reduce using rule 26 (empty_struct -> decla_header ID .)
    PRINTLN         reduce using rule 26 (empty_struct -> decla_header ID .)
    PRINTF          reduce using rule 26 (empty_struct -> decla_header ID .)
    PRINT           reduce using rule 26 (empty_struct -> decla_header ID .)
    VAR             reduce using rule 26 (empty_struct -> decla_header ID .)
    I_CORCHETE      reduce using rule 26 (empty_struct -> decla_header ID .)
    INT             reduce using rule 26 (empty_struct -> decla_header ID .)
    DOUBLE          reduce using rule 26 (empty_struct -> decla_header ID .)
    STRING          reduce using rule 26 (empty_struct -> decla_header ID .)
    BOOLEAN         reduce using rule 26 (empty_struct -> decla_header ID .)
    RETURN          reduce using rule 26 (empty_struct -> decla_header ID .)
    FUNC            reduce using rule 26 (empty_struct -> decla_header ID .)


state 79

    (119) array_type_spec -> array_length . INTEGER
    (120) array_type_spec -> array_length . STRINGTYPE
    (121) array_type_spec -> array_length . BOOLEAN
    (122) array_type_spec -> array_length . floating_type
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    INTEGER         shift and go to state 129
    STRINGTYPE      shift and go to state 130
    BOOLEAN         shift and go to state 131
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    floating_type                  shift and go to state 132

state 80

    (126) type -> INTEGER .

    ASIGNACION      reduce using rule 126 (type -> INTEGER .)
    D_CORCHETE      reduce using rule 126 (type -> INTEGER .)
    I_LLAVE         reduce using rule 126 (type -> INTEGER .)
    COMA            reduce using rule 126 (type -> INTEGER .)
    D_PARENTESIS    reduce using rule 126 (type -> INTEGER .)
    ID              reduce using rule 126 (type -> INTEGER .)
    D_LLAVE         reduce using rule 126 (type -> INTEGER .)
    IF              reduce using rule 126 (type -> INTEGER .)
    ELSE            reduce using rule 126 (type -> INTEGER .)
    ELSEIF          reduce using rule 126 (type -> INTEGER .)
    FOR             reduce using rule 126 (type -> INTEGER .)
    MAP             reduce using rule 126 (type -> INTEGER .)
    MAKE            reduce using rule 126 (type -> INTEGER .)
    TYPE            reduce using rule 126 (type -> INTEGER .)
    I_PARENTESIS    reduce using rule 126 (type -> INTEGER .)
    PRINTLN         reduce using rule 126 (type -> INTEGER .)
    PRINTF          reduce using rule 126 (type -> INTEGER .)
    PRINT           reduce using rule 126 (type -> INTEGER .)
    VAR             reduce using rule 126 (type -> INTEGER .)
    I_CORCHETE      reduce using rule 126 (type -> INTEGER .)
    INT             reduce using rule 126 (type -> INTEGER .)
    DOUBLE          reduce using rule 126 (type -> INTEGER .)
    STRING          reduce using rule 126 (type -> INTEGER .)
    BOOLEAN         reduce using rule 126 (type -> INTEGER .)


state 81

    (125) type -> STRINGTYPE .

    ASIGNACION      reduce using rule 125 (type -> STRINGTYPE .)
    D_CORCHETE      reduce using rule 125 (type -> STRINGTYPE .)
    I_LLAVE         reduce using rule 125 (type -> STRINGTYPE .)
    COMA            reduce using rule 125 (type -> STRINGTYPE .)
    D_PARENTESIS    reduce using rule 125 (type -> STRINGTYPE .)
    ID              reduce using rule 125 (type -> STRINGTYPE .)
    D_LLAVE         reduce using rule 125 (type -> STRINGTYPE .)
    IF              reduce using rule 125 (type -> STRINGTYPE .)
    ELSE            reduce using rule 125 (type -> STRINGTYPE .)
    ELSEIF          reduce using rule 125 (type -> STRINGTYPE .)
    FOR             reduce using rule 125 (type -> STRINGTYPE .)
    MAP             reduce using rule 125 (type -> STRINGTYPE .)
    MAKE            reduce using rule 125 (type -> STRINGTYPE .)
    TYPE            reduce using rule 125 (type -> STRINGTYPE .)
    I_PARENTESIS    reduce using rule 125 (type -> STRINGTYPE .)
    PRINTLN         reduce using rule 125 (type -> STRINGTYPE .)
    PRINTF          reduce using rule 125 (type -> STRINGTYPE .)
    PRINT           reduce using rule 125 (type -> STRINGTYPE .)
    VAR             reduce using rule 125 (type -> STRINGTYPE .)
    I_CORCHETE      reduce using rule 125 (type -> STRINGTYPE .)
    INT             reduce using rule 125 (type -> STRINGTYPE .)
    DOUBLE          reduce using rule 125 (type -> STRINGTYPE .)
    STRING          reduce using rule 125 (type -> STRINGTYPE .)
    BOOLEAN         reduce using rule 125 (type -> STRINGTYPE .)


state 82

    (127) type -> floating_type .

    ASIGNACION      reduce using rule 127 (type -> floating_type .)
    D_CORCHETE      reduce using rule 127 (type -> floating_type .)
    I_LLAVE         reduce using rule 127 (type -> floating_type .)
    COMA            reduce using rule 127 (type -> floating_type .)
    D_PARENTESIS    reduce using rule 127 (type -> floating_type .)
    ID              reduce using rule 127 (type -> floating_type .)
    D_LLAVE         reduce using rule 127 (type -> floating_type .)
    IF              reduce using rule 127 (type -> floating_type .)
    ELSE            reduce using rule 127 (type -> floating_type .)
    ELSEIF          reduce using rule 127 (type -> floating_type .)
    FOR             reduce using rule 127 (type -> floating_type .)
    MAP             reduce using rule 127 (type -> floating_type .)
    MAKE            reduce using rule 127 (type -> floating_type .)
    TYPE            reduce using rule 127 (type -> floating_type .)
    I_PARENTESIS    reduce using rule 127 (type -> floating_type .)
    PRINTLN         reduce using rule 127 (type -> floating_type .)
    PRINTF          reduce using rule 127 (type -> floating_type .)
    PRINT           reduce using rule 127 (type -> floating_type .)
    VAR             reduce using rule 127 (type -> floating_type .)
    I_CORCHETE      reduce using rule 127 (type -> floating_type .)
    INT             reduce using rule 127 (type -> floating_type .)
    DOUBLE          reduce using rule 127 (type -> floating_type .)
    STRING          reduce using rule 127 (type -> floating_type .)
    BOOLEAN         reduce using rule 127 (type -> floating_type .)


state 83

    (124) type -> BOOL .

    ASIGNACION      reduce using rule 124 (type -> BOOL .)
    D_CORCHETE      reduce using rule 124 (type -> BOOL .)
    I_LLAVE         reduce using rule 124 (type -> BOOL .)
    COMA            reduce using rule 124 (type -> BOOL .)
    D_PARENTESIS    reduce using rule 124 (type -> BOOL .)
    ID              reduce using rule 124 (type -> BOOL .)
    D_LLAVE         reduce using rule 124 (type -> BOOL .)
    IF              reduce using rule 124 (type -> BOOL .)
    ELSE            reduce using rule 124 (type -> BOOL .)
    ELSEIF          reduce using rule 124 (type -> BOOL .)
    FOR             reduce using rule 124 (type -> BOOL .)
    MAP             reduce using rule 124 (type -> BOOL .)
    MAKE            reduce using rule 124 (type -> BOOL .)
    TYPE            reduce using rule 124 (type -> BOOL .)
    I_PARENTESIS    reduce using rule 124 (type -> BOOL .)
    PRINTLN         reduce using rule 124 (type -> BOOL .)
    PRINTF          reduce using rule 124 (type -> BOOL .)
    PRINT           reduce using rule 124 (type -> BOOL .)
    VAR             reduce using rule 124 (type -> BOOL .)
    I_CORCHETE      reduce using rule 124 (type -> BOOL .)
    INT             reduce using rule 124 (type -> BOOL .)
    DOUBLE          reduce using rule 124 (type -> BOOL .)
    STRING          reduce using rule 124 (type -> BOOL .)
    BOOLEAN         reduce using rule 124 (type -> BOOL .)


state 84

    (123) array_length -> I_CORCHETE . INT D_CORCHETE

    INT             shift and go to state 112


state 85

    (128) floating_type -> FLOAT32 .

    ASIGNACION      reduce using rule 128 (floating_type -> FLOAT32 .)
    I_LLAVE         reduce using rule 128 (floating_type -> FLOAT32 .)
    $end            reduce using rule 128 (floating_type -> FLOAT32 .)
    PUNTO_COMA      reduce using rule 128 (floating_type -> FLOAT32 .)
    D_LLAVE         reduce using rule 128 (floating_type -> FLOAT32 .)
    ID              reduce using rule 128 (floating_type -> FLOAT32 .)
    IF              reduce using rule 128 (floating_type -> FLOAT32 .)
    ELSE            reduce using rule 128 (floating_type -> FLOAT32 .)
    ELSEIF          reduce using rule 128 (floating_type -> FLOAT32 .)
    FOR             reduce using rule 128 (floating_type -> FLOAT32 .)
    MAP             reduce using rule 128 (floating_type -> FLOAT32 .)
    MAKE            reduce using rule 128 (floating_type -> FLOAT32 .)
    TYPE            reduce using rule 128 (floating_type -> FLOAT32 .)
    I_PARENTESIS    reduce using rule 128 (floating_type -> FLOAT32 .)
    PRINTLN         reduce using rule 128 (floating_type -> FLOAT32 .)
    PRINTF          reduce using rule 128 (floating_type -> FLOAT32 .)
    PRINT           reduce using rule 128 (floating_type -> FLOAT32 .)
    VAR             reduce using rule 128 (floating_type -> FLOAT32 .)
    I_CORCHETE      reduce using rule 128 (floating_type -> FLOAT32 .)
    INT             reduce using rule 128 (floating_type -> FLOAT32 .)
    DOUBLE          reduce using rule 128 (floating_type -> FLOAT32 .)
    STRING          reduce using rule 128 (floating_type -> FLOAT32 .)
    BOOLEAN         reduce using rule 128 (floating_type -> FLOAT32 .)
    RETURN          reduce using rule 128 (floating_type -> FLOAT32 .)
    FUNC            reduce using rule 128 (floating_type -> FLOAT32 .)
    D_CORCHETE      reduce using rule 128 (floating_type -> FLOAT32 .)
    COMA            reduce using rule 128 (floating_type -> FLOAT32 .)
    D_PARENTESIS    reduce using rule 128 (floating_type -> FLOAT32 .)


state 86

    (129) floating_type -> FLOAT64 .

    ASIGNACION      reduce using rule 129 (floating_type -> FLOAT64 .)
    I_LLAVE         reduce using rule 129 (floating_type -> FLOAT64 .)
    $end            reduce using rule 129 (floating_type -> FLOAT64 .)
    PUNTO_COMA      reduce using rule 129 (floating_type -> FLOAT64 .)
    D_LLAVE         reduce using rule 129 (floating_type -> FLOAT64 .)
    ID              reduce using rule 129 (floating_type -> FLOAT64 .)
    IF              reduce using rule 129 (floating_type -> FLOAT64 .)
    ELSE            reduce using rule 129 (floating_type -> FLOAT64 .)
    ELSEIF          reduce using rule 129 (floating_type -> FLOAT64 .)
    FOR             reduce using rule 129 (floating_type -> FLOAT64 .)
    MAP             reduce using rule 129 (floating_type -> FLOAT64 .)
    MAKE            reduce using rule 129 (floating_type -> FLOAT64 .)
    TYPE            reduce using rule 129 (floating_type -> FLOAT64 .)
    I_PARENTESIS    reduce using rule 129 (floating_type -> FLOAT64 .)
    PRINTLN         reduce using rule 129 (floating_type -> FLOAT64 .)
    PRINTF          reduce using rule 129 (floating_type -> FLOAT64 .)
    PRINT           reduce using rule 129 (floating_type -> FLOAT64 .)
    VAR             reduce using rule 129 (floating_type -> FLOAT64 .)
    I_CORCHETE      reduce using rule 129 (floating_type -> FLOAT64 .)
    INT             reduce using rule 129 (floating_type -> FLOAT64 .)
    DOUBLE          reduce using rule 129 (floating_type -> FLOAT64 .)
    STRING          reduce using rule 129 (floating_type -> FLOAT64 .)
    BOOLEAN         reduce using rule 129 (floating_type -> FLOAT64 .)
    RETURN          reduce using rule 129 (floating_type -> FLOAT64 .)
    FUNC            reduce using rule 129 (floating_type -> FLOAT64 .)
    D_CORCHETE      reduce using rule 129 (floating_type -> FLOAT64 .)
    COMA            reduce using rule 129 (floating_type -> FLOAT64 .)
    D_PARENTESIS    reduce using rule 129 (floating_type -> FLOAT64 .)


state 87

    (85) init_struct -> empty_struct ASIGNACION . ID I_LLAVE valores D_LLAVE
    (87) init_struct -> empty_struct ASIGNACION . ID I_LLAVE atributos_nombrados D_LLAVE

    ID              shift and go to state 133


state 88

    (22) instruccion -> ID asignacion . valor
    (23) instruccion -> ID asignacion . instruccion
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE

    ID              shift and go to state 134
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36

    valor                          shift and go to state 135
    instruccion                    shift and go to state 136
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47

state 89

    (36) llamada_func -> ID I_PARENTESIS . llamada_params D_PARENTESIS
    (37) llamada_params -> . expression
    (38) llamada_params -> . expression COMA llamada_params
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 74
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    llamada_params                 shift and go to state 137
    expression                     shift and go to state 138
    valor                          shift and go to state 14
    resultado                      shift and go to state 41
    llamada_func                   shift and go to state 73
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 90

    (104) resultado_inc_dec -> ID operador_matematico .

    $end            reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    PUNTO_COMA      reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    D_LLAVE         reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    ID              reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    IF              reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    ELSE            reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    ELSEIF          reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    FOR             reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    MAP             reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    MAKE            reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    TYPE            reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    I_PARENTESIS    reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    PRINTLN         reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    PRINTF          reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    PRINT           reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    VAR             reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    I_CORCHETE      reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    INT             reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    DOUBLE          reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    STRING          reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    BOOLEAN         reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    RETURN          reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)
    FUNC            reduce using rule 104 (resultado_inc_dec -> ID operador_matematico .)


state 91

    (86) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE valores D_LLAVE
    (88) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE atributos_nombrados D_LLAVE
    (136) asignacion -> DECLARACION_ASIGNACION .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 139
    IF              reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    ELSE            reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    ELSEIF          reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    FOR             reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    MAP             reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    MAKE            reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    TYPE            reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    INT             reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    BOOLEAN         reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    I_PARENTESIS    reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTLN         reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTF          reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    PRINT           reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    VAR             reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    I_CORCHETE      reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)

  ! ID              [ reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .) ]


state 92

    (91) valor_struct -> ID PUNTO . ID

    ID              shift and go to state 140


state 93

    (132) asignacion -> ASIGNACION .

    ID              reduce using rule 132 (asignacion -> ASIGNACION .)
    IF              reduce using rule 132 (asignacion -> ASIGNACION .)
    ELSE            reduce using rule 132 (asignacion -> ASIGNACION .)
    ELSEIF          reduce using rule 132 (asignacion -> ASIGNACION .)
    FOR             reduce using rule 132 (asignacion -> ASIGNACION .)
    MAP             reduce using rule 132 (asignacion -> ASIGNACION .)
    MAKE            reduce using rule 132 (asignacion -> ASIGNACION .)
    TYPE            reduce using rule 132 (asignacion -> ASIGNACION .)
    INT             reduce using rule 132 (asignacion -> ASIGNACION .)
    DOUBLE          reduce using rule 132 (asignacion -> ASIGNACION .)
    STRING          reduce using rule 132 (asignacion -> ASIGNACION .)
    BOOLEAN         reduce using rule 132 (asignacion -> ASIGNACION .)
    I_PARENTESIS    reduce using rule 132 (asignacion -> ASIGNACION .)
    PRINTLN         reduce using rule 132 (asignacion -> ASIGNACION .)
    PRINTF          reduce using rule 132 (asignacion -> ASIGNACION .)
    PRINT           reduce using rule 132 (asignacion -> ASIGNACION .)
    VAR             reduce using rule 132 (asignacion -> ASIGNACION .)
    I_CORCHETE      reduce using rule 132 (asignacion -> ASIGNACION .)


state 94

    (133) asignacion -> ASIGNACION_ADICION .

    ID              reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    IF              reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    ELSE            reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    ELSEIF          reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    FOR             reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    MAP             reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    MAKE            reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    TYPE            reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    INT             reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    DOUBLE          reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    STRING          reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    BOOLEAN         reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    I_PARENTESIS    reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    PRINTLN         reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    PRINTF          reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    PRINT           reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    VAR             reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)
    I_CORCHETE      reduce using rule 133 (asignacion -> ASIGNACION_ADICION .)


state 95

    (134) asignacion -> ASIGNACION_RESTA .

    ID              reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    IF              reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    ELSE            reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    ELSEIF          reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    FOR             reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    MAP             reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    MAKE            reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    TYPE            reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    INT             reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    DOUBLE          reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    STRING          reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    BOOLEAN         reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    I_PARENTESIS    reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    PRINTLN         reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    PRINTF          reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    PRINT           reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    VAR             reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)
    I_CORCHETE      reduce using rule 134 (asignacion -> ASIGNACION_RESTA .)


state 96

    (135) asignacion -> ASIGNACION_MULTI .

    ID              reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    IF              reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    ELSE            reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    ELSEIF          reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    FOR             reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    MAP             reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    MAKE            reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    TYPE            reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    INT             reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    DOUBLE          reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    STRING          reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    BOOLEAN         reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    I_PARENTESIS    reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    PRINTLN         reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    PRINTF          reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    PRINT           reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    VAR             reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)
    I_CORCHETE      reduce using rule 135 (asignacion -> ASIGNACION_MULTI .)


state 97

    (137) asignacion -> ASIGNACION_DIVISION .

    ID              reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    IF              reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    ELSE            reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    ELSEIF          reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    FOR             reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    MAP             reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    MAKE            reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    TYPE            reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    INT             reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    DOUBLE          reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    STRING          reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    BOOLEAN         reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    I_PARENTESIS    reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    PRINTLN         reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    PRINTF          reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    PRINT           reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    VAR             reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)
    I_CORCHETE      reduce using rule 137 (asignacion -> ASIGNACION_DIVISION .)


state 98

    (138) asignacion -> ASIGNACION_MODULO .

    ID              reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    IF              reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    ELSE            reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    ELSEIF          reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    FOR             reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    MAP             reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    MAKE            reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    TYPE            reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    INT             reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    DOUBLE          reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    STRING          reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    BOOLEAN         reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    I_PARENTESIS    reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    PRINTLN         reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    PRINTF          reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    PRINT           reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    VAR             reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)
    I_CORCHETE      reduce using rule 138 (asignacion -> ASIGNACION_MODULO .)


state 99

    (130) operador_matematico -> INCREMENTO .

    $end            reduce using rule 130 (operador_matematico -> INCREMENTO .)
    PUNTO_COMA      reduce using rule 130 (operador_matematico -> INCREMENTO .)
    D_LLAVE         reduce using rule 130 (operador_matematico -> INCREMENTO .)
    ID              reduce using rule 130 (operador_matematico -> INCREMENTO .)
    IF              reduce using rule 130 (operador_matematico -> INCREMENTO .)
    ELSE            reduce using rule 130 (operador_matematico -> INCREMENTO .)
    ELSEIF          reduce using rule 130 (operador_matematico -> INCREMENTO .)
    FOR             reduce using rule 130 (operador_matematico -> INCREMENTO .)
    MAP             reduce using rule 130 (operador_matematico -> INCREMENTO .)
    MAKE            reduce using rule 130 (operador_matematico -> INCREMENTO .)
    TYPE            reduce using rule 130 (operador_matematico -> INCREMENTO .)
    I_PARENTESIS    reduce using rule 130 (operador_matematico -> INCREMENTO .)
    PRINTLN         reduce using rule 130 (operador_matematico -> INCREMENTO .)
    PRINTF          reduce using rule 130 (operador_matematico -> INCREMENTO .)
    PRINT           reduce using rule 130 (operador_matematico -> INCREMENTO .)
    VAR             reduce using rule 130 (operador_matematico -> INCREMENTO .)
    I_CORCHETE      reduce using rule 130 (operador_matematico -> INCREMENTO .)
    INT             reduce using rule 130 (operador_matematico -> INCREMENTO .)
    DOUBLE          reduce using rule 130 (operador_matematico -> INCREMENTO .)
    STRING          reduce using rule 130 (operador_matematico -> INCREMENTO .)
    BOOLEAN         reduce using rule 130 (operador_matematico -> INCREMENTO .)
    RETURN          reduce using rule 130 (operador_matematico -> INCREMENTO .)
    FUNC            reduce using rule 130 (operador_matematico -> INCREMENTO .)
    I_LLAVE         reduce using rule 130 (operador_matematico -> INCREMENTO .)


state 100

    (131) operador_matematico -> DECREMENTO .

    $end            reduce using rule 131 (operador_matematico -> DECREMENTO .)
    PUNTO_COMA      reduce using rule 131 (operador_matematico -> DECREMENTO .)
    D_LLAVE         reduce using rule 131 (operador_matematico -> DECREMENTO .)
    ID              reduce using rule 131 (operador_matematico -> DECREMENTO .)
    IF              reduce using rule 131 (operador_matematico -> DECREMENTO .)
    ELSE            reduce using rule 131 (operador_matematico -> DECREMENTO .)
    ELSEIF          reduce using rule 131 (operador_matematico -> DECREMENTO .)
    FOR             reduce using rule 131 (operador_matematico -> DECREMENTO .)
    MAP             reduce using rule 131 (operador_matematico -> DECREMENTO .)
    MAKE            reduce using rule 131 (operador_matematico -> DECREMENTO .)
    TYPE            reduce using rule 131 (operador_matematico -> DECREMENTO .)
    I_PARENTESIS    reduce using rule 131 (operador_matematico -> DECREMENTO .)
    PRINTLN         reduce using rule 131 (operador_matematico -> DECREMENTO .)
    PRINTF          reduce using rule 131 (operador_matematico -> DECREMENTO .)
    PRINT           reduce using rule 131 (operador_matematico -> DECREMENTO .)
    VAR             reduce using rule 131 (operador_matematico -> DECREMENTO .)
    I_CORCHETE      reduce using rule 131 (operador_matematico -> DECREMENTO .)
    INT             reduce using rule 131 (operador_matematico -> DECREMENTO .)
    DOUBLE          reduce using rule 131 (operador_matematico -> DECREMENTO .)
    STRING          reduce using rule 131 (operador_matematico -> DECREMENTO .)
    BOOLEAN         reduce using rule 131 (operador_matematico -> DECREMENTO .)
    RETURN          reduce using rule 131 (operador_matematico -> DECREMENTO .)
    FUNC            reduce using rule 131 (operador_matematico -> DECREMENTO .)
    I_LLAVE         reduce using rule 131 (operador_matematico -> DECREMENTO .)


state 101

    (115) valor -> valor operacion_binaria . valor
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    valor                          shift and go to state 141
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 102

    (39) instruccion -> IF condicion . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 142


state 103

    (96) condicion -> valor .
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    I_LLAVE         reduce using rule 96 (condicion -> valor .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 101

state 104

    (97) condicion -> I_PARENTESIS . valor D_PARENTESIS
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    valor                          shift and go to state 143
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 105

    (160) valor_variable -> ID .
    (91) valor_struct -> ID . PUNTO ID

    ADICION         reduce using rule 160 (valor_variable -> ID .)
    RESTA           reduce using rule 160 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 160 (valor_variable -> ID .)
    DIVISION        reduce using rule 160 (valor_variable -> ID .)
    MODULO          reduce using rule 160 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    IGUAL           reduce using rule 160 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 160 (valor_variable -> ID .)
    MAYOR           reduce using rule 160 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    MENOR           reduce using rule 160 (valor_variable -> ID .)
    I_LLAVE         reduce using rule 160 (valor_variable -> ID .)
    COMA            reduce using rule 160 (valor_variable -> ID .)
    D_PARENTESIS    reduce using rule 160 (valor_variable -> ID .)
    $end            reduce using rule 160 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 160 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 160 (valor_variable -> ID .)
    ID              reduce using rule 160 (valor_variable -> ID .)
    IF              reduce using rule 160 (valor_variable -> ID .)
    ELSE            reduce using rule 160 (valor_variable -> ID .)
    ELSEIF          reduce using rule 160 (valor_variable -> ID .)
    FOR             reduce using rule 160 (valor_variable -> ID .)
    MAP             reduce using rule 160 (valor_variable -> ID .)
    MAKE            reduce using rule 160 (valor_variable -> ID .)
    TYPE            reduce using rule 160 (valor_variable -> ID .)
    I_PARENTESIS    reduce using rule 160 (valor_variable -> ID .)
    PRINTLN         reduce using rule 160 (valor_variable -> ID .)
    PRINTF          reduce using rule 160 (valor_variable -> ID .)
    PRINT           reduce using rule 160 (valor_variable -> ID .)
    VAR             reduce using rule 160 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 160 (valor_variable -> ID .)
    INT             reduce using rule 160 (valor_variable -> ID .)
    DOUBLE          reduce using rule 160 (valor_variable -> ID .)
    STRING          reduce using rule 160 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 160 (valor_variable -> ID .)
    RETURN          reduce using rule 160 (valor_variable -> ID .)
    FUNC            reduce using rule 160 (valor_variable -> ID .)
    DOS_PUNTOS      reduce using rule 160 (valor_variable -> ID .)
    PUNTO           shift and go to state 92


state 106

    (40) instruccion -> ELSE I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_LLAVE         shift and go to state 144
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    body                           shift and go to state 145
    instruccion                    shift and go to state 146
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 107

    (41) instruccion -> ELSEIF condicion . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 147


state 108

    (42) instruccion -> FOR ID . DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (44) instruccion -> FOR ID . COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (22) instruccion -> ID . asignacion valor
    (23) instruccion -> ID . asignacion instruccion
    (36) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> ID . operador_matematico
    (86) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (88) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (160) valor_variable -> ID .
    (91) valor_struct -> ID . PUNTO ID
    (132) asignacion -> . ASIGNACION
    (133) asignacion -> . ASIGNACION_ADICION
    (134) asignacion -> . ASIGNACION_RESTA
    (135) asignacion -> . ASIGNACION_MULTI
    (136) asignacion -> . DECLARACION_ASIGNACION
    (137) asignacion -> . ASIGNACION_DIVISION
    (138) asignacion -> . ASIGNACION_MODULO
    (130) operador_matematico -> . INCREMENTO
    (131) operador_matematico -> . DECREMENTO

    DECLARACION_ASIGNACION shift and go to state 148
    COMA            shift and go to state 149
    I_PARENTESIS    shift and go to state 89
    ADICION         reduce using rule 160 (valor_variable -> ID .)
    RESTA           reduce using rule 160 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 160 (valor_variable -> ID .)
    DIVISION        reduce using rule 160 (valor_variable -> ID .)
    MODULO          reduce using rule 160 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    IGUAL           reduce using rule 160 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 160 (valor_variable -> ID .)
    MAYOR           reduce using rule 160 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    MENOR           reduce using rule 160 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 160 (valor_variable -> ID .)
    PUNTO           shift and go to state 92
    ASIGNACION      shift and go to state 93
    ASIGNACION_ADICION shift and go to state 94
    ASIGNACION_RESTA shift and go to state 95
    ASIGNACION_MULTI shift and go to state 96
    ASIGNACION_DIVISION shift and go to state 97
    ASIGNACION_MODULO shift and go to state 98
    INCREMENTO      shift and go to state 99
    DECREMENTO      shift and go to state 100

    asignacion                     shift and go to state 88
    operador_matematico            shift and go to state 90

state 109

    (43) instruccion -> FOR instruccion . PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE

    PUNTO_COMA      shift and go to state 150


state 110

    (77) instruccion -> MAP I_CORCHETE . type D_CORCHETE type I_LLAVE D_LLAVE
    (79) instruccion -> MAP I_CORCHETE . type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (124) type -> . BOOL
    (125) type -> . STRINGTYPE
    (126) type -> . INTEGER
    (127) type -> . floating_type
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    BOOL            shift and go to state 83
    STRINGTYPE      shift and go to state 81
    INTEGER         shift and go to state 80
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    type                           shift and go to state 151
    floating_type                  shift and go to state 82

state 111

    (61) array_int -> I_CORCHETE D_CORCHETE . INTEGER I_LLAVE D_LLAVE
    (62) array_double -> I_CORCHETE D_CORCHETE . floating_type I_LLAVE D_LLAVE
    (63) array_string -> I_CORCHETE D_CORCHETE . STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> I_CORCHETE D_CORCHETE . BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> I_CORCHETE D_CORCHETE . INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> I_CORCHETE D_CORCHETE . floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> I_CORCHETE D_CORCHETE . STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> I_CORCHETE D_CORCHETE . BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    INTEGER         shift and go to state 152
    STRINGTYPE      shift and go to state 154
    BOOLEAN         shift and go to state 155
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    floating_type                  shift and go to state 153

state 112

    (123) array_length -> I_CORCHETE INT . D_CORCHETE

    D_CORCHETE      shift and go to state 156


state 113

    (78) instruccion -> MAKE I_PARENTESIS . MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS

    MAP             shift and go to state 157


state 114

    (80) instruccion -> TYPE ID . STRUCT I_LLAVE atributos_struct D_LLAVE

    STRUCT          shift and go to state 158


state 115

    (29) funcion -> FUNC ID . cuerpo_fun
    (30) cuerpo_fun -> . parametrosMetodo body
    (31) parametrosMetodo -> . I_PARENTESIS parametros D_PARENTESIS type
    (32) parametrosMetodo -> . I_PARENTESIS parametros D_PARENTESIS

    I_PARENTESIS    shift and go to state 161

    cuerpo_fun                     shift and go to state 159
    parametrosMetodo               shift and go to state 160

state 116

    (28) decla_header -> VAR ID .

    ASIGNACION      reduce using rule 28 (decla_header -> VAR ID .)
    ID              reduce using rule 28 (decla_header -> VAR ID .)
    BOOL            reduce using rule 28 (decla_header -> VAR ID .)
    STRINGTYPE      reduce using rule 28 (decla_header -> VAR ID .)
    INTEGER         reduce using rule 28 (decla_header -> VAR ID .)
    I_CORCHETE      reduce using rule 28 (decla_header -> VAR ID .)
    FLOAT32         reduce using rule 28 (decla_header -> VAR ID .)
    FLOAT64         reduce using rule 28 (decla_header -> VAR ID .)


state 117

    (65) array_length_int -> array_length INTEGER . I_LLAVE D_LLAVE
    (73) array_length_con_valores_int -> array_length INTEGER . I_LLAVE valores_int D_LLAVE

    I_LLAVE         shift and go to state 162


state 118

    (66) array_length_double -> array_length floating_type . I_LLAVE D_LLAVE
    (74) array_length_con_valores_double -> array_length floating_type . I_LLAVE valores_double D_LLAVE

    I_LLAVE         shift and go to state 163


state 119

    (67) array_length_string -> array_length STRINGTYPE . I_LLAVE D_LLAVE
    (75) array_length_con_valores_string -> array_length STRINGTYPE . I_LLAVE valores_string D_LLAVE

    I_LLAVE         shift and go to state 164


state 120

    (68) array_length_boolean -> array_length BOOLEAN . I_LLAVE D_LLAVE
    (76) array_length_con_valores_boolean -> array_length BOOLEAN . I_LLAVE valores_boolean D_LLAVE

    I_LLAVE         shift and go to state 165


state 121

    (103) resultado -> expression operacion_binaria expression .
    (103) resultado -> expression . operacion_binaria expression
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    D_PARENTESIS    reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    PUNTO_COMA      reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    D_LLAVE         reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    ID              reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    IF              reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    ELSE            reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    ELSEIF          reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    FOR             reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    MAP             reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    MAKE            reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    TYPE            reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    I_PARENTESIS    reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    PRINTLN         reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    PRINTF          reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    PRINT           reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    VAR             reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    I_CORCHETE      reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    INT             reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    DOUBLE          reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    STRING          reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    BOOLEAN         reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    RETURN          reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    FUNC            reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    COMA            reduce using rule 103 (resultado -> expression operacion_binaria expression .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

  ! ADICION         [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! RESTA           [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! MULTIPLICACION  [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! DIVISION        [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! MODULO          [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! IGUAL           [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! DIFERENTE       [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! MAYOR           [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]
  ! MENOR           [ reduce using rule 103 (resultado -> expression operacion_binaria expression .) ]

    operacion_binaria              shift and go to state 58

state 122

    (16) instruccion -> print I_PARENTESIS valores . D_PARENTESIS

    D_PARENTESIS    shift and go to state 166


state 123

    (105) valores -> valor .
    (106) valores -> valor . COMA valores
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 105 (valores -> valor .)
    D_LLAVE         reduce using rule 105 (valores -> valor .)
    COMA            shift and go to state 167
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 101

state 124

    (102) expression -> I_PARENTESIS resultado D_PARENTESIS .

    ADICION         reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    RESTA           reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MULTIPLICACION  reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DIVISION        reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MODULO          reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MENOR_IGUAL     reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    IGUAL           reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DIFERENTE       reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAYOR           reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAYOR_IGUAL     reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MENOR           reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    $end            reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    D_PARENTESIS    reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    D_LLAVE         reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ID              reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    IF              reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ELSE            reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ELSEIF          reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    FOR             reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAP             reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAKE            reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    TYPE            reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINTLN         reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINTF          reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINT           reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    VAR             reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    I_CORCHETE      reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    INT             reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DOUBLE          reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    STRING          reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    BOOLEAN         reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    RETURN          reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    FUNC            reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    COMA            reduce using rule 102 (expression -> I_PARENTESIS resultado D_PARENTESIS .)


state 125

    (18) instruccion -> decla_header ASIGNACION instruccion .

    $end            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    PUNTO_COMA      reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    D_LLAVE         reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    ID              reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    IF              reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    ELSE            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    ELSEIF          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    FOR             reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    MAP             reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    MAKE            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    TYPE            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    I_PARENTESIS    reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    PRINTLN         reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    PRINTF          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    PRINT           reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    VAR             reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    I_CORCHETE      reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    INT             reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    DOUBLE          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    STRING          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    BOOLEAN         reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    RETURN          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    FUNC            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)


state 126

    (25) declaracion_comun -> decla_header ASIGNACION valor .
    (115) valor -> valor . operacion_binaria valor
    (99) expression -> valor .
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

  ! reduce/reduce conflict for $end resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for ID resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for IF resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for FOR resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for MAP resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for MAKE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for TYPE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for PRINTF resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for PRINT resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for VAR resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for INT resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for STRING resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for RETURN resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for FUNC resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    PUNTO_COMA      reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    D_LLAVE         reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    ID              reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    IF              reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    ELSE            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    ELSEIF          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    FOR             reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    MAP             reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    MAKE            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    TYPE            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    I_PARENTESIS    reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    PRINTLN         reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    PRINTF          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    PRINT           reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    VAR             reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    I_CORCHETE      reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    INT             reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    DOUBLE          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    STRING          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    BOOLEAN         reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    RETURN          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    FUNC            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

  ! ADICION         [ reduce using rule 99 (expression -> valor .) ]
  ! RESTA           [ reduce using rule 99 (expression -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 99 (expression -> valor .) ]
  ! DIVISION        [ reduce using rule 99 (expression -> valor .) ]
  ! MODULO          [ reduce using rule 99 (expression -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 99 (expression -> valor .) ]
  ! IGUAL           [ reduce using rule 99 (expression -> valor .) ]
  ! DIFERENTE       [ reduce using rule 99 (expression -> valor .) ]
  ! MAYOR           [ reduce using rule 99 (expression -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 99 (expression -> valor .) ]
  ! MENOR           [ reduce using rule 99 (expression -> valor .) ]
  ! $end            [ reduce using rule 99 (expression -> valor .) ]
  ! PUNTO_COMA      [ reduce using rule 99 (expression -> valor .) ]
  ! D_LLAVE         [ reduce using rule 99 (expression -> valor .) ]
  ! ID              [ reduce using rule 99 (expression -> valor .) ]
  ! IF              [ reduce using rule 99 (expression -> valor .) ]
  ! ELSE            [ reduce using rule 99 (expression -> valor .) ]
  ! ELSEIF          [ reduce using rule 99 (expression -> valor .) ]
  ! FOR             [ reduce using rule 99 (expression -> valor .) ]
  ! MAP             [ reduce using rule 99 (expression -> valor .) ]
  ! MAKE            [ reduce using rule 99 (expression -> valor .) ]
  ! TYPE            [ reduce using rule 99 (expression -> valor .) ]
  ! I_PARENTESIS    [ reduce using rule 99 (expression -> valor .) ]
  ! PRINTLN         [ reduce using rule 99 (expression -> valor .) ]
  ! PRINTF          [ reduce using rule 99 (expression -> valor .) ]
  ! PRINT           [ reduce using rule 99 (expression -> valor .) ]
  ! VAR             [ reduce using rule 99 (expression -> valor .) ]
  ! I_CORCHETE      [ reduce using rule 99 (expression -> valor .) ]
  ! INT             [ reduce using rule 99 (expression -> valor .) ]
  ! DOUBLE          [ reduce using rule 99 (expression -> valor .) ]
  ! STRING          [ reduce using rule 99 (expression -> valor .) ]
  ! BOOLEAN         [ reduce using rule 99 (expression -> valor .) ]
  ! RETURN          [ reduce using rule 99 (expression -> valor .) ]
  ! FUNC            [ reduce using rule 99 (expression -> valor .) ]

    operacion_binaria              shift and go to state 101

state 127

    (19) instruccion -> decla_header array_type_spec ASIGNACION . instruccion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    decla_header                   shift and go to state 10
    instruccion                    shift and go to state 168
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 128

    (24) declaracion_comun -> decla_header type ASIGNACION . valor
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    valor                          shift and go to state 169
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 129

    (119) array_type_spec -> array_length INTEGER .

    ASIGNACION      reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    $end            reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    PUNTO_COMA      reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    D_LLAVE         reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    ID              reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    IF              reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    ELSE            reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    ELSEIF          reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    FOR             reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    MAP             reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    MAKE            reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    TYPE            reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    I_PARENTESIS    reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    PRINTLN         reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    PRINTF          reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    PRINT           reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    VAR             reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    I_CORCHETE      reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    INT             reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    DOUBLE          reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    STRING          reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    BOOLEAN         reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    RETURN          reduce using rule 119 (array_type_spec -> array_length INTEGER .)
    FUNC            reduce using rule 119 (array_type_spec -> array_length INTEGER .)


state 130

    (120) array_type_spec -> array_length STRINGTYPE .

    ASIGNACION      reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    $end            reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    PUNTO_COMA      reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    D_LLAVE         reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    ID              reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    IF              reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    ELSE            reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    ELSEIF          reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    FOR             reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    MAP             reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    MAKE            reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    TYPE            reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    I_PARENTESIS    reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    PRINTLN         reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    PRINTF          reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    PRINT           reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    VAR             reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    I_CORCHETE      reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    INT             reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    DOUBLE          reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    STRING          reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    BOOLEAN         reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    RETURN          reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)
    FUNC            reduce using rule 120 (array_type_spec -> array_length STRINGTYPE .)


state 131

    (121) array_type_spec -> array_length BOOLEAN .

    ASIGNACION      reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    $end            reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    PUNTO_COMA      reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    D_LLAVE         reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    ID              reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    IF              reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    ELSE            reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    ELSEIF          reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    FOR             reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    MAP             reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    MAKE            reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    TYPE            reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    I_PARENTESIS    reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    PRINTLN         reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    PRINTF          reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    PRINT           reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    VAR             reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    I_CORCHETE      reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    INT             reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    DOUBLE          reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    STRING          reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    BOOLEAN         reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    RETURN          reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)
    FUNC            reduce using rule 121 (array_type_spec -> array_length BOOLEAN .)


state 132

    (122) array_type_spec -> array_length floating_type .

    ASIGNACION      reduce using rule 122 (array_type_spec -> array_length floating_type .)
    $end            reduce using rule 122 (array_type_spec -> array_length floating_type .)
    PUNTO_COMA      reduce using rule 122 (array_type_spec -> array_length floating_type .)
    D_LLAVE         reduce using rule 122 (array_type_spec -> array_length floating_type .)
    ID              reduce using rule 122 (array_type_spec -> array_length floating_type .)
    IF              reduce using rule 122 (array_type_spec -> array_length floating_type .)
    ELSE            reduce using rule 122 (array_type_spec -> array_length floating_type .)
    ELSEIF          reduce using rule 122 (array_type_spec -> array_length floating_type .)
    FOR             reduce using rule 122 (array_type_spec -> array_length floating_type .)
    MAP             reduce using rule 122 (array_type_spec -> array_length floating_type .)
    MAKE            reduce using rule 122 (array_type_spec -> array_length floating_type .)
    TYPE            reduce using rule 122 (array_type_spec -> array_length floating_type .)
    I_PARENTESIS    reduce using rule 122 (array_type_spec -> array_length floating_type .)
    PRINTLN         reduce using rule 122 (array_type_spec -> array_length floating_type .)
    PRINTF          reduce using rule 122 (array_type_spec -> array_length floating_type .)
    PRINT           reduce using rule 122 (array_type_spec -> array_length floating_type .)
    VAR             reduce using rule 122 (array_type_spec -> array_length floating_type .)
    I_CORCHETE      reduce using rule 122 (array_type_spec -> array_length floating_type .)
    INT             reduce using rule 122 (array_type_spec -> array_length floating_type .)
    DOUBLE          reduce using rule 122 (array_type_spec -> array_length floating_type .)
    STRING          reduce using rule 122 (array_type_spec -> array_length floating_type .)
    BOOLEAN         reduce using rule 122 (array_type_spec -> array_length floating_type .)
    RETURN          reduce using rule 122 (array_type_spec -> array_length floating_type .)
    FUNC            reduce using rule 122 (array_type_spec -> array_length floating_type .)


state 133

    (85) init_struct -> empty_struct ASIGNACION ID . I_LLAVE valores D_LLAVE
    (87) init_struct -> empty_struct ASIGNACION ID . I_LLAVE atributos_nombrados D_LLAVE

    I_LLAVE         shift and go to state 170


state 134

    (22) instruccion -> ID . asignacion valor
    (23) instruccion -> ID . asignacion instruccion
    (160) valor_variable -> ID .
    (91) valor_struct -> ID . PUNTO ID
    (36) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> ID . operador_matematico
    (86) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (88) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (132) asignacion -> . ASIGNACION
    (133) asignacion -> . ASIGNACION_ADICION
    (134) asignacion -> . ASIGNACION_RESTA
    (135) asignacion -> . ASIGNACION_MULTI
    (136) asignacion -> . DECLARACION_ASIGNACION
    (137) asignacion -> . ASIGNACION_DIVISION
    (138) asignacion -> . ASIGNACION_MODULO
    (130) operador_matematico -> . INCREMENTO
    (131) operador_matematico -> . DECREMENTO

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    ADICION         reduce using rule 160 (valor_variable -> ID .)
    RESTA           reduce using rule 160 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 160 (valor_variable -> ID .)
    DIVISION        reduce using rule 160 (valor_variable -> ID .)
    MODULO          reduce using rule 160 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    IGUAL           reduce using rule 160 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 160 (valor_variable -> ID .)
    MAYOR           reduce using rule 160 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    MENOR           reduce using rule 160 (valor_variable -> ID .)
    $end            reduce using rule 160 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 160 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 160 (valor_variable -> ID .)
    ID              reduce using rule 160 (valor_variable -> ID .)
    IF              reduce using rule 160 (valor_variable -> ID .)
    ELSE            reduce using rule 160 (valor_variable -> ID .)
    ELSEIF          reduce using rule 160 (valor_variable -> ID .)
    FOR             reduce using rule 160 (valor_variable -> ID .)
    MAP             reduce using rule 160 (valor_variable -> ID .)
    MAKE            reduce using rule 160 (valor_variable -> ID .)
    TYPE            reduce using rule 160 (valor_variable -> ID .)
    PRINTLN         reduce using rule 160 (valor_variable -> ID .)
    PRINTF          reduce using rule 160 (valor_variable -> ID .)
    PRINT           reduce using rule 160 (valor_variable -> ID .)
    VAR             reduce using rule 160 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 160 (valor_variable -> ID .)
    INT             reduce using rule 160 (valor_variable -> ID .)
    DOUBLE          reduce using rule 160 (valor_variable -> ID .)
    STRING          reduce using rule 160 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 160 (valor_variable -> ID .)
    RETURN          reduce using rule 160 (valor_variable -> ID .)
    FUNC            reduce using rule 160 (valor_variable -> ID .)
    PUNTO           shift and go to state 92
    I_PARENTESIS    shift and go to state 89
    DECLARACION_ASIGNACION shift and go to state 91
    ASIGNACION      shift and go to state 93
    ASIGNACION_ADICION shift and go to state 94
    ASIGNACION_RESTA shift and go to state 95
    ASIGNACION_MULTI shift and go to state 96
    ASIGNACION_DIVISION shift and go to state 97
    ASIGNACION_MODULO shift and go to state 98
    INCREMENTO      shift and go to state 99
    DECREMENTO      shift and go to state 100

  ! I_PARENTESIS    [ reduce using rule 160 (valor_variable -> ID .) ]

    asignacion                     shift and go to state 88
    operador_matematico            shift and go to state 90

state 135

    (22) instruccion -> ID asignacion valor .
    (115) valor -> valor . operacion_binaria valor
    (99) expression -> valor .
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

  ! reduce/reduce conflict for $end resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ID resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for IF resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ELSE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for FOR resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for MAP resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for MAKE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for TYPE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINTF resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINT resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for VAR resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for INT resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for STRING resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for RETURN resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for FUNC resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 22 (instruccion -> ID asignacion valor .)
    PUNTO_COMA      reduce using rule 22 (instruccion -> ID asignacion valor .)
    D_LLAVE         reduce using rule 22 (instruccion -> ID asignacion valor .)
    ID              reduce using rule 22 (instruccion -> ID asignacion valor .)
    IF              reduce using rule 22 (instruccion -> ID asignacion valor .)
    ELSE            reduce using rule 22 (instruccion -> ID asignacion valor .)
    ELSEIF          reduce using rule 22 (instruccion -> ID asignacion valor .)
    FOR             reduce using rule 22 (instruccion -> ID asignacion valor .)
    MAP             reduce using rule 22 (instruccion -> ID asignacion valor .)
    MAKE            reduce using rule 22 (instruccion -> ID asignacion valor .)
    TYPE            reduce using rule 22 (instruccion -> ID asignacion valor .)
    I_PARENTESIS    reduce using rule 22 (instruccion -> ID asignacion valor .)
    PRINTLN         reduce using rule 22 (instruccion -> ID asignacion valor .)
    PRINTF          reduce using rule 22 (instruccion -> ID asignacion valor .)
    PRINT           reduce using rule 22 (instruccion -> ID asignacion valor .)
    VAR             reduce using rule 22 (instruccion -> ID asignacion valor .)
    I_CORCHETE      reduce using rule 22 (instruccion -> ID asignacion valor .)
    INT             reduce using rule 22 (instruccion -> ID asignacion valor .)
    DOUBLE          reduce using rule 22 (instruccion -> ID asignacion valor .)
    STRING          reduce using rule 22 (instruccion -> ID asignacion valor .)
    BOOLEAN         reduce using rule 22 (instruccion -> ID asignacion valor .)
    RETURN          reduce using rule 22 (instruccion -> ID asignacion valor .)
    FUNC            reduce using rule 22 (instruccion -> ID asignacion valor .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

  ! ADICION         [ reduce using rule 99 (expression -> valor .) ]
  ! RESTA           [ reduce using rule 99 (expression -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 99 (expression -> valor .) ]
  ! DIVISION        [ reduce using rule 99 (expression -> valor .) ]
  ! MODULO          [ reduce using rule 99 (expression -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 99 (expression -> valor .) ]
  ! IGUAL           [ reduce using rule 99 (expression -> valor .) ]
  ! DIFERENTE       [ reduce using rule 99 (expression -> valor .) ]
  ! MAYOR           [ reduce using rule 99 (expression -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 99 (expression -> valor .) ]
  ! MENOR           [ reduce using rule 99 (expression -> valor .) ]
  ! $end            [ reduce using rule 99 (expression -> valor .) ]
  ! PUNTO_COMA      [ reduce using rule 99 (expression -> valor .) ]
  ! D_LLAVE         [ reduce using rule 99 (expression -> valor .) ]
  ! ID              [ reduce using rule 99 (expression -> valor .) ]
  ! IF              [ reduce using rule 99 (expression -> valor .) ]
  ! ELSE            [ reduce using rule 99 (expression -> valor .) ]
  ! ELSEIF          [ reduce using rule 99 (expression -> valor .) ]
  ! FOR             [ reduce using rule 99 (expression -> valor .) ]
  ! MAP             [ reduce using rule 99 (expression -> valor .) ]
  ! MAKE            [ reduce using rule 99 (expression -> valor .) ]
  ! TYPE            [ reduce using rule 99 (expression -> valor .) ]
  ! I_PARENTESIS    [ reduce using rule 99 (expression -> valor .) ]
  ! PRINTLN         [ reduce using rule 99 (expression -> valor .) ]
  ! PRINTF          [ reduce using rule 99 (expression -> valor .) ]
  ! PRINT           [ reduce using rule 99 (expression -> valor .) ]
  ! VAR             [ reduce using rule 99 (expression -> valor .) ]
  ! I_CORCHETE      [ reduce using rule 99 (expression -> valor .) ]
  ! INT             [ reduce using rule 99 (expression -> valor .) ]
  ! DOUBLE          [ reduce using rule 99 (expression -> valor .) ]
  ! STRING          [ reduce using rule 99 (expression -> valor .) ]
  ! BOOLEAN         [ reduce using rule 99 (expression -> valor .) ]
  ! RETURN          [ reduce using rule 99 (expression -> valor .) ]
  ! FUNC            [ reduce using rule 99 (expression -> valor .) ]

    operacion_binaria              shift and go to state 101

state 136

    (23) instruccion -> ID asignacion instruccion .

    $end            reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    PUNTO_COMA      reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    D_LLAVE         reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    ID              reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    IF              reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    ELSE            reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    ELSEIF          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    FOR             reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    MAP             reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    MAKE            reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    TYPE            reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    I_PARENTESIS    reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    PRINTLN         reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    PRINTF          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    PRINT           reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    VAR             reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    I_CORCHETE      reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    INT             reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    DOUBLE          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    STRING          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    BOOLEAN         reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    RETURN          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    FUNC            reduce using rule 23 (instruccion -> ID asignacion instruccion .)


state 137

    (36) llamada_func -> ID I_PARENTESIS llamada_params . D_PARENTESIS

    D_PARENTESIS    shift and go to state 171


state 138

    (37) llamada_params -> expression .
    (38) llamada_params -> expression . COMA llamada_params
    (103) resultado -> expression . operacion_binaria expression
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 37 (llamada_params -> expression .)
    COMA            shift and go to state 172
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 58

state 139

    (86) init_struct -> ID DECLARACION_ASIGNACION ID . I_LLAVE valores D_LLAVE
    (88) init_struct -> ID DECLARACION_ASIGNACION ID . I_LLAVE atributos_nombrados D_LLAVE

    I_LLAVE         shift and go to state 173


state 140

    (91) valor_struct -> ID PUNTO ID .

    ADICION         reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    RESTA           reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    MULTIPLICACION  reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    DIVISION        reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    MODULO          reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    MENOR_IGUAL     reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    IGUAL           reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    DIFERENTE       reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    MAYOR           reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    MAYOR_IGUAL     reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    MENOR           reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    $end            reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    I_LLAVE         reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    PUNTO_COMA      reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    D_PARENTESIS    reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    D_LLAVE         reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    ID              reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    IF              reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    ELSE            reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    ELSEIF          reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    FOR             reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    MAP             reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    MAKE            reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    TYPE            reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    I_PARENTESIS    reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    PRINTLN         reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    PRINTF          reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    PRINT           reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    VAR             reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    I_CORCHETE      reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    INT             reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    DOUBLE          reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    STRING          reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    BOOLEAN         reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    RETURN          reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    FUNC            reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    COMA            reduce using rule 91 (valor_struct -> ID PUNTO ID .)
    DOS_PUNTOS      reduce using rule 91 (valor_struct -> ID PUNTO ID .)


state 141

    (115) valor -> valor operacion_binaria valor .
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 115 (valor -> valor operacion_binaria valor .)
    I_LLAVE         reduce using rule 115 (valor -> valor operacion_binaria valor .)
    PUNTO_COMA      reduce using rule 115 (valor -> valor operacion_binaria valor .)
    D_PARENTESIS    reduce using rule 115 (valor -> valor operacion_binaria valor .)
    D_LLAVE         reduce using rule 115 (valor -> valor operacion_binaria valor .)
    ID              reduce using rule 115 (valor -> valor operacion_binaria valor .)
    IF              reduce using rule 115 (valor -> valor operacion_binaria valor .)
    ELSE            reduce using rule 115 (valor -> valor operacion_binaria valor .)
    ELSEIF          reduce using rule 115 (valor -> valor operacion_binaria valor .)
    FOR             reduce using rule 115 (valor -> valor operacion_binaria valor .)
    MAP             reduce using rule 115 (valor -> valor operacion_binaria valor .)
    MAKE            reduce using rule 115 (valor -> valor operacion_binaria valor .)
    TYPE            reduce using rule 115 (valor -> valor operacion_binaria valor .)
    I_PARENTESIS    reduce using rule 115 (valor -> valor operacion_binaria valor .)
    PRINTLN         reduce using rule 115 (valor -> valor operacion_binaria valor .)
    PRINTF          reduce using rule 115 (valor -> valor operacion_binaria valor .)
    PRINT           reduce using rule 115 (valor -> valor operacion_binaria valor .)
    VAR             reduce using rule 115 (valor -> valor operacion_binaria valor .)
    I_CORCHETE      reduce using rule 115 (valor -> valor operacion_binaria valor .)
    INT             reduce using rule 115 (valor -> valor operacion_binaria valor .)
    DOUBLE          reduce using rule 115 (valor -> valor operacion_binaria valor .)
    STRING          reduce using rule 115 (valor -> valor operacion_binaria valor .)
    BOOLEAN         reduce using rule 115 (valor -> valor operacion_binaria valor .)
    RETURN          reduce using rule 115 (valor -> valor operacion_binaria valor .)
    FUNC            reduce using rule 115 (valor -> valor operacion_binaria valor .)
    COMA            reduce using rule 115 (valor -> valor operacion_binaria valor .)
    DOS_PUNTOS      reduce using rule 115 (valor -> valor operacion_binaria valor .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

  ! ADICION         [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! RESTA           [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! MULTIPLICACION  [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! DIVISION        [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! MODULO          [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! IGUAL           [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! DIFERENTE       [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR           [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]
  ! MENOR           [ reduce using rule 115 (valor -> valor operacion_binaria valor .) ]

    operacion_binaria              shift and go to state 101

state 142

    (39) instruccion -> IF condicion I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_LLAVE         shift and go to state 144
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    body                           shift and go to state 174
    instruccion                    shift and go to state 146
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 143

    (97) condicion -> I_PARENTESIS valor . D_PARENTESIS
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    D_PARENTESIS    shift and go to state 175
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 101

state 144

    (5) body -> I_LLAVE . instruct_expression D_LLAVE
    (6) body -> I_LLAVE . varias_instrucciones D_LLAVE
    (7) body -> I_LLAVE . varias_instrucciones instruct_expression D_LLAVE
    (8) body -> I_LLAVE . D_LLAVE
    (11) instruct_expression -> . RETURN valor
    (12) instruct_expression -> . RETURN resultado
    (9) varias_instrucciones -> . instruccion
    (10) varias_instrucciones -> . instruccion varias_instrucciones
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    D_LLAVE         shift and go to state 177
    RETURN          shift and go to state 179
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    instruct_expression            shift and go to state 176
    varias_instrucciones           shift and go to state 178
    valor                          shift and go to state 14
    resultado                      shift and go to state 41
    instruccion                    shift and go to state 180
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 145

    (40) instruccion -> ELSE I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 181


state 146

    (4) body -> instruccion .

    D_LLAVE         reduce using rule 4 (body -> instruccion .)
    ID              reduce using rule 4 (body -> instruccion .)
    IF              reduce using rule 4 (body -> instruccion .)
    ELSE            reduce using rule 4 (body -> instruccion .)
    ELSEIF          reduce using rule 4 (body -> instruccion .)
    FOR             reduce using rule 4 (body -> instruccion .)
    MAP             reduce using rule 4 (body -> instruccion .)
    MAKE            reduce using rule 4 (body -> instruccion .)
    TYPE            reduce using rule 4 (body -> instruccion .)
    FUNC            reduce using rule 4 (body -> instruccion .)
    I_PARENTESIS    reduce using rule 4 (body -> instruccion .)
    PRINTLN         reduce using rule 4 (body -> instruccion .)
    PRINTF          reduce using rule 4 (body -> instruccion .)
    PRINT           reduce using rule 4 (body -> instruccion .)
    VAR             reduce using rule 4 (body -> instruccion .)
    I_CORCHETE      reduce using rule 4 (body -> instruccion .)
    INT             reduce using rule 4 (body -> instruccion .)
    DOUBLE          reduce using rule 4 (body -> instruccion .)
    STRING          reduce using rule 4 (body -> instruccion .)
    BOOLEAN         reduce using rule 4 (body -> instruccion .)
    $end            reduce using rule 4 (body -> instruccion .)


state 147

    (41) instruccion -> ELSEIF condicion I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_LLAVE         shift and go to state 144
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    body                           shift and go to state 182
    instruccion                    shift and go to state 146
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 148

    (42) instruccion -> FOR ID DECLARACION_ASIGNACION . RANGE ID I_LLAVE body D_LLAVE
    (86) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE valores D_LLAVE
    (88) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE atributos_nombrados D_LLAVE
    (136) asignacion -> DECLARACION_ASIGNACION .

  ! shift/reduce conflict for ID resolved as shift
    RANGE           shift and go to state 183
    ID              shift and go to state 139
    IF              reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    ELSE            reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    ELSEIF          reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    FOR             reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    MAP             reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    MAKE            reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    TYPE            reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    INT             reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    BOOLEAN         reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    I_PARENTESIS    reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTLN         reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTF          reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    PRINT           reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    VAR             reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)
    I_CORCHETE      reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .)

  ! ID              [ reduce using rule 136 (asignacion -> DECLARACION_ASIGNACION .) ]


state 149

    (44) instruccion -> FOR ID COMA . ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE

    ID              shift and go to state 184


state 150

    (43) instruccion -> FOR instruccion PUNTO_COMA . valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    valor                          shift and go to state 185
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 151

    (77) instruccion -> MAP I_CORCHETE type . D_CORCHETE type I_LLAVE D_LLAVE
    (79) instruccion -> MAP I_CORCHETE type . D_CORCHETE type I_LLAVE claves_valores D_LLAVE

    D_CORCHETE      shift and go to state 186


state 152

    (61) array_int -> I_CORCHETE D_CORCHETE INTEGER . I_LLAVE D_LLAVE
    (69) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER . I_LLAVE valores_int D_LLAVE

    I_LLAVE         shift and go to state 187


state 153

    (62) array_double -> I_CORCHETE D_CORCHETE floating_type . I_LLAVE D_LLAVE
    (70) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type . I_LLAVE valores_double D_LLAVE

    I_LLAVE         shift and go to state 188


state 154

    (63) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE . I_LLAVE D_LLAVE
    (71) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE . I_LLAVE valores_string D_LLAVE

    I_LLAVE         shift and go to state 189


state 155

    (64) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN . I_LLAVE D_LLAVE
    (72) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN . I_LLAVE valores_boolean D_LLAVE

    I_LLAVE         shift and go to state 190


state 156

    (123) array_length -> I_CORCHETE INT D_CORCHETE .

    INTEGER         reduce using rule 123 (array_length -> I_CORCHETE INT D_CORCHETE .)
    STRINGTYPE      reduce using rule 123 (array_length -> I_CORCHETE INT D_CORCHETE .)
    BOOLEAN         reduce using rule 123 (array_length -> I_CORCHETE INT D_CORCHETE .)
    FLOAT32         reduce using rule 123 (array_length -> I_CORCHETE INT D_CORCHETE .)
    FLOAT64         reduce using rule 123 (array_length -> I_CORCHETE INT D_CORCHETE .)


state 157

    (78) instruccion -> MAKE I_PARENTESIS MAP . I_CORCHETE type D_CORCHETE type D_PARENTESIS

    I_CORCHETE      shift and go to state 191


state 158

    (80) instruccion -> TYPE ID STRUCT . I_LLAVE atributos_struct D_LLAVE

    I_LLAVE         shift and go to state 192


state 159

    (29) funcion -> FUNC ID cuerpo_fun .

    ID              reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    IF              reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    ELSE            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    ELSEIF          reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    FOR             reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    MAP             reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    MAKE            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    TYPE            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    FUNC            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    I_PARENTESIS    reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    PRINTLN         reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    PRINTF          reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    PRINT           reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    VAR             reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    I_CORCHETE      reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    INT             reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    DOUBLE          reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    STRING          reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    BOOLEAN         reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    $end            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)


state 160

    (30) cuerpo_fun -> parametrosMetodo . body
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_LLAVE         shift and go to state 144
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    body                           shift and go to state 193
    instruccion                    shift and go to state 146
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 161

    (31) parametrosMetodo -> I_PARENTESIS . parametros D_PARENTESIS type
    (32) parametrosMetodo -> I_PARENTESIS . parametros D_PARENTESIS
    (33) parametros -> . atributo
    (34) parametros -> . atributo COMA parametros
    (35) parametros -> .
    (83) atributo -> . ID type

    D_PARENTESIS    reduce using rule 35 (parametros -> .)
    ID              shift and go to state 196

    parametros                     shift and go to state 194
    atributo                       shift and go to state 195

state 162

    (65) array_length_int -> array_length INTEGER I_LLAVE . D_LLAVE
    (73) array_length_con_valores_int -> array_length INTEGER I_LLAVE . valores_int D_LLAVE
    (107) valores_int -> . valor_int
    (108) valores_int -> . valor_int COMA valores_int
    (156) valor_int -> . INT

    D_LLAVE         shift and go to state 197
    INT             shift and go to state 54

    valores_int                    shift and go to state 198
    valor_int                      shift and go to state 199

state 163

    (66) array_length_double -> array_length floating_type I_LLAVE . D_LLAVE
    (74) array_length_con_valores_double -> array_length floating_type I_LLAVE . valores_double D_LLAVE
    (109) valores_double -> . valor_double
    (110) valores_double -> . valor_double COMA valores_double
    (157) valor_double -> . DOUBLE

    D_LLAVE         shift and go to state 200
    DOUBLE          shift and go to state 55

    valores_double                 shift and go to state 201
    valor_double                   shift and go to state 202

state 164

    (67) array_length_string -> array_length STRINGTYPE I_LLAVE . D_LLAVE
    (75) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE . valores_string D_LLAVE
    (111) valores_string -> . valor_string
    (112) valores_string -> . valor_string COMA valores_string
    (158) valor_string -> . STRING

    D_LLAVE         shift and go to state 203
    STRING          shift and go to state 56

    valores_string                 shift and go to state 204
    valor_string                   shift and go to state 205

state 165

    (68) array_length_boolean -> array_length BOOLEAN I_LLAVE . D_LLAVE
    (76) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE . valores_boolean D_LLAVE
    (113) valores_boolean -> . valor_boolean
    (114) valores_boolean -> . valor_boolean COMA valores_boolean
    (159) valor_boolean -> . BOOLEAN

    D_LLAVE         shift and go to state 206
    BOOLEAN         shift and go to state 46

    valores_boolean                shift and go to state 207
    valor_boolean                  shift and go to state 208

state 166

    (16) instruccion -> print I_PARENTESIS valores D_PARENTESIS .

    $end            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    D_LLAVE         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ID              reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    IF              reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ELSE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ELSEIF          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    FOR             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    MAP             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    MAKE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    TYPE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINTLN         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINTF          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINT           reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    VAR             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    I_CORCHETE      reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    INT             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    DOUBLE          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    STRING          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    BOOLEAN         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    RETURN          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    FUNC            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)


state 167

    (106) valores -> valor COMA . valores
    (105) valores -> . valor
    (106) valores -> . valor COMA valores
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    valor                          shift and go to state 123
    valores                        shift and go to state 209
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 168

    (19) instruccion -> decla_header array_type_spec ASIGNACION instruccion .

    $end            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    PUNTO_COMA      reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    D_LLAVE         reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    ID              reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    IF              reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    ELSE            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    ELSEIF          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    FOR             reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    MAP             reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    MAKE            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    TYPE            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    I_PARENTESIS    reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    PRINTLN         reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    PRINTF          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    PRINT           reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    VAR             reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    I_CORCHETE      reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    INT             reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    DOUBLE          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    STRING          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    BOOLEAN         reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    RETURN          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    FUNC            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)


state 169

    (24) declaracion_comun -> decla_header type ASIGNACION valor .
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    $end            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    PUNTO_COMA      reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    D_LLAVE         reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    ID              reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    IF              reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    ELSE            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    ELSEIF          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    FOR             reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    MAP             reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    MAKE            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    TYPE            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    I_PARENTESIS    reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    PRINTLN         reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    PRINTF          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    PRINT           reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    VAR             reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    I_CORCHETE      reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    INT             reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    DOUBLE          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    STRING          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    BOOLEAN         reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    RETURN          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    FUNC            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 101

state 170

    (85) init_struct -> empty_struct ASIGNACION ID I_LLAVE . valores D_LLAVE
    (87) init_struct -> empty_struct ASIGNACION ID I_LLAVE . atributos_nombrados D_LLAVE
    (105) valores -> . valor
    (106) valores -> . valor COMA valores
    (89) atributos_nombrados -> . declara_atributo
    (90) atributos_nombrados -> . declara_atributo COMA atributos_nombrados
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (92) declara_atributo -> . ID DOS_PUNTOS expression
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 210
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    valores                        shift and go to state 211
    atributos_nombrados            shift and go to state 212
    valor                          shift and go to state 123
    declara_atributo               shift and go to state 213
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 171

    (36) llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .

    $end            reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ADICION         reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    RESTA           reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MULTIPLICACION  reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DIVISION        reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MODULO          reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MENOR_IGUAL     reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    IGUAL           reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DIFERENTE       reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAYOR           reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAYOR_IGUAL     reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MENOR           reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    D_PARENTESIS    reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    D_LLAVE         reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ID              reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    IF              reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ELSE            reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ELSEIF          reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    FOR             reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAP             reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAKE            reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    TYPE            reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINTLN         reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINTF          reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINT           reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    VAR             reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    I_CORCHETE      reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    INT             reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DOUBLE          reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    STRING          reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    BOOLEAN         reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    RETURN          reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    FUNC            reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    COMA            reduce using rule 36 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)


state 172

    (38) llamada_params -> expression COMA . llamada_params
    (37) llamada_params -> . expression
    (38) llamada_params -> . expression COMA llamada_params
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 74
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    expression                     shift and go to state 138
    llamada_params                 shift and go to state 214
    valor                          shift and go to state 14
    resultado                      shift and go to state 41
    llamada_func                   shift and go to state 73
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 173

    (86) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE . valores D_LLAVE
    (88) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE . atributos_nombrados D_LLAVE
    (105) valores -> . valor
    (106) valores -> . valor COMA valores
    (89) atributos_nombrados -> . declara_atributo
    (90) atributos_nombrados -> . declara_atributo COMA atributos_nombrados
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (92) declara_atributo -> . ID DOS_PUNTOS expression
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 210
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    valores                        shift and go to state 215
    atributos_nombrados            shift and go to state 216
    valor                          shift and go to state 123
    declara_atributo               shift and go to state 213
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 174

    (39) instruccion -> IF condicion I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 217


state 175

    (97) condicion -> I_PARENTESIS valor D_PARENTESIS .

    I_LLAVE         reduce using rule 97 (condicion -> I_PARENTESIS valor D_PARENTESIS .)


state 176

    (5) body -> I_LLAVE instruct_expression . D_LLAVE

    D_LLAVE         shift and go to state 218


state 177

    (8) body -> I_LLAVE D_LLAVE .

    D_LLAVE         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ID              reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    IF              reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    FOR             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    MAP             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    VAR             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    INT             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    STRING          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    $end            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)


state 178

    (6) body -> I_LLAVE varias_instrucciones . D_LLAVE
    (7) body -> I_LLAVE varias_instrucciones . instruct_expression D_LLAVE
    (11) instruct_expression -> . RETURN valor
    (12) instruct_expression -> . RETURN resultado

    D_LLAVE         shift and go to state 219
    RETURN          shift and go to state 179

    instruct_expression            shift and go to state 220

state 179

    (11) instruct_expression -> RETURN . valor
    (12) instruct_expression -> RETURN . resultado
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 223
    I_PARENTESIS    shift and go to state 8

    valor                          shift and go to state 221
    resultado                      shift and go to state 222
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53
    expression                     shift and go to state 72
    llamada_func                   shift and go to state 73

state 180

    (9) varias_instrucciones -> instruccion .
    (10) varias_instrucciones -> instruccion . varias_instrucciones
    (9) varias_instrucciones -> . instruccion
    (10) varias_instrucciones -> . instruccion varias_instrucciones
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    D_LLAVE         reduce using rule 9 (varias_instrucciones -> instruccion .)
    RETURN          reduce using rule 9 (varias_instrucciones -> instruccion .)
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    instruccion                    shift and go to state 180
    varias_instrucciones           shift and go to state 224
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 181

    (40) instruccion -> ELSE I_LLAVE body D_LLAVE .

    $end            reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ID              reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    IF              reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    INT             reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 40 (instruccion -> ELSE I_LLAVE body D_LLAVE .)


state 182

    (41) instruccion -> ELSEIF condicion I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 225


state 183

    (42) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE . ID I_LLAVE body D_LLAVE

    ID              shift and go to state 226


state 184

    (44) instruccion -> FOR ID COMA ID . DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE

    DECLARACION_ASIGNACION shift and go to state 227


state 185

    (43) instruccion -> FOR instruccion PUNTO_COMA valor . PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    PUNTO_COMA      shift and go to state 228
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 101

state 186

    (77) instruccion -> MAP I_CORCHETE type D_CORCHETE . type I_LLAVE D_LLAVE
    (79) instruccion -> MAP I_CORCHETE type D_CORCHETE . type I_LLAVE claves_valores D_LLAVE
    (124) type -> . BOOL
    (125) type -> . STRINGTYPE
    (126) type -> . INTEGER
    (127) type -> . floating_type
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    BOOL            shift and go to state 83
    STRINGTYPE      shift and go to state 81
    INTEGER         shift and go to state 80
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    type                           shift and go to state 229
    floating_type                  shift and go to state 82

state 187

    (61) array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE . D_LLAVE
    (69) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE . valores_int D_LLAVE
    (107) valores_int -> . valor_int
    (108) valores_int -> . valor_int COMA valores_int
    (156) valor_int -> . INT

    D_LLAVE         shift and go to state 230
    INT             shift and go to state 54

    valores_int                    shift and go to state 231
    valor_int                      shift and go to state 199

state 188

    (62) array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE . D_LLAVE
    (70) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE . valores_double D_LLAVE
    (109) valores_double -> . valor_double
    (110) valores_double -> . valor_double COMA valores_double
    (157) valor_double -> . DOUBLE

    D_LLAVE         shift and go to state 232
    DOUBLE          shift and go to state 55

    valores_double                 shift and go to state 233
    valor_double                   shift and go to state 202

state 189

    (63) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE . D_LLAVE
    (71) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE . valores_string D_LLAVE
    (111) valores_string -> . valor_string
    (112) valores_string -> . valor_string COMA valores_string
    (158) valor_string -> . STRING

    D_LLAVE         shift and go to state 234
    STRING          shift and go to state 56

    valores_string                 shift and go to state 235
    valor_string                   shift and go to state 205

state 190

    (64) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE . D_LLAVE
    (72) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE . valores_boolean D_LLAVE
    (113) valores_boolean -> . valor_boolean
    (114) valores_boolean -> . valor_boolean COMA valores_boolean
    (159) valor_boolean -> . BOOLEAN

    D_LLAVE         shift and go to state 236
    BOOLEAN         shift and go to state 46

    valores_boolean                shift and go to state 237
    valor_boolean                  shift and go to state 208

state 191

    (78) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE . type D_CORCHETE type D_PARENTESIS
    (124) type -> . BOOL
    (125) type -> . STRINGTYPE
    (126) type -> . INTEGER
    (127) type -> . floating_type
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    BOOL            shift and go to state 83
    STRINGTYPE      shift and go to state 81
    INTEGER         shift and go to state 80
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    type                           shift and go to state 238
    floating_type                  shift and go to state 82

state 192

    (80) instruccion -> TYPE ID STRUCT I_LLAVE . atributos_struct D_LLAVE
    (81) atributos_struct -> . atributo
    (82) atributos_struct -> . atributo atributos_struct
    (83) atributo -> . ID type

    ID              shift and go to state 196

    atributos_struct               shift and go to state 239
    atributo                       shift and go to state 240

state 193

    (30) cuerpo_fun -> parametrosMetodo body .

    ID              reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    IF              reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    ELSE            reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    ELSEIF          reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    FOR             reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    MAP             reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    MAKE            reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    TYPE            reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    FUNC            reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    I_PARENTESIS    reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    PRINTLN         reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    PRINTF          reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    PRINT           reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    VAR             reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    I_CORCHETE      reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    INT             reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    DOUBLE          reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    STRING          reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    BOOLEAN         reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)
    $end            reduce using rule 30 (cuerpo_fun -> parametrosMetodo body .)


state 194

    (31) parametrosMetodo -> I_PARENTESIS parametros . D_PARENTESIS type
    (32) parametrosMetodo -> I_PARENTESIS parametros . D_PARENTESIS

    D_PARENTESIS    shift and go to state 241


state 195

    (33) parametros -> atributo .
    (34) parametros -> atributo . COMA parametros

    D_PARENTESIS    reduce using rule 33 (parametros -> atributo .)
    COMA            shift and go to state 242


state 196

    (83) atributo -> ID . type
    (124) type -> . BOOL
    (125) type -> . STRINGTYPE
    (126) type -> . INTEGER
    (127) type -> . floating_type
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    BOOL            shift and go to state 83
    STRINGTYPE      shift and go to state 81
    INTEGER         shift and go to state 80
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    type                           shift and go to state 243
    floating_type                  shift and go to state 82

state 197

    (65) array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .

    $end            reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ID              reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    IF              reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    FOR             reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    MAP             reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    VAR             reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    INT             reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    STRING          reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 65 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)


state 198

    (73) array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int . D_LLAVE

    D_LLAVE         shift and go to state 244


state 199

    (107) valores_int -> valor_int .
    (108) valores_int -> valor_int . COMA valores_int

    D_LLAVE         reduce using rule 107 (valores_int -> valor_int .)
    COMA            shift and go to state 245


state 200

    (66) array_length_double -> array_length floating_type I_LLAVE D_LLAVE .

    $end            reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ID              reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    IF              reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    INT             reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 66 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)


state 201

    (74) array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double . D_LLAVE

    D_LLAVE         shift and go to state 246


state 202

    (109) valores_double -> valor_double .
    (110) valores_double -> valor_double . COMA valores_double

    D_LLAVE         reduce using rule 109 (valores_double -> valor_double .)
    COMA            shift and go to state 247


state 203

    (67) array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .

    $end            reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ID              reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    IF              reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    FOR             reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    MAP             reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    VAR             reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    INT             reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    STRING          reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 67 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)


state 204

    (75) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string . D_LLAVE

    D_LLAVE         shift and go to state 248


state 205

    (111) valores_string -> valor_string .
    (112) valores_string -> valor_string . COMA valores_string

    D_LLAVE         reduce using rule 111 (valores_string -> valor_string .)
    COMA            shift and go to state 249


state 206

    (68) array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .

    $end            reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ID              reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    IF              reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    FOR             reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    MAP             reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    VAR             reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    INT             reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    STRING          reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 68 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)


state 207

    (76) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean . D_LLAVE

    D_LLAVE         shift and go to state 250


state 208

    (113) valores_boolean -> valor_boolean .
    (114) valores_boolean -> valor_boolean . COMA valores_boolean

    D_LLAVE         reduce using rule 113 (valores_boolean -> valor_boolean .)
    COMA            shift and go to state 251


state 209

    (106) valores -> valor COMA valores .

    D_PARENTESIS    reduce using rule 106 (valores -> valor COMA valores .)
    D_LLAVE         reduce using rule 106 (valores -> valor COMA valores .)


state 210

    (92) declara_atributo -> ID . DOS_PUNTOS expression
    (160) valor_variable -> ID .
    (91) valor_struct -> ID . PUNTO ID

    DOS_PUNTOS      shift and go to state 252
    COMA            reduce using rule 160 (valor_variable -> ID .)
    ADICION         reduce using rule 160 (valor_variable -> ID .)
    RESTA           reduce using rule 160 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 160 (valor_variable -> ID .)
    DIVISION        reduce using rule 160 (valor_variable -> ID .)
    MODULO          reduce using rule 160 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    IGUAL           reduce using rule 160 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 160 (valor_variable -> ID .)
    MAYOR           reduce using rule 160 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    MENOR           reduce using rule 160 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 160 (valor_variable -> ID .)
    PUNTO           shift and go to state 92


state 211

    (85) init_struct -> empty_struct ASIGNACION ID I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 253


state 212

    (87) init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados . D_LLAVE

    D_LLAVE         shift and go to state 254


state 213

    (89) atributos_nombrados -> declara_atributo .
    (90) atributos_nombrados -> declara_atributo . COMA atributos_nombrados

    D_LLAVE         reduce using rule 89 (atributos_nombrados -> declara_atributo .)
    COMA            shift and go to state 255


state 214

    (38) llamada_params -> expression COMA llamada_params .

    D_PARENTESIS    reduce using rule 38 (llamada_params -> expression COMA llamada_params .)


state 215

    (86) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 256


state 216

    (88) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados . D_LLAVE

    D_LLAVE         shift and go to state 257


state 217

    (39) instruccion -> IF condicion I_LLAVE body D_LLAVE .

    $end            reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ID              reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    IF              reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    INT             reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 39 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)


state 218

    (5) body -> I_LLAVE instruct_expression D_LLAVE .

    D_LLAVE         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ID              reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    IF              reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ELSE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ELSEIF          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    FOR             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    MAP             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    MAKE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    TYPE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    FUNC            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    I_PARENTESIS    reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINTLN         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINTF          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINT           reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    VAR             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    I_CORCHETE      reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    INT             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    DOUBLE          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    STRING          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    BOOLEAN         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    $end            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)


state 219

    (6) body -> I_LLAVE varias_instrucciones D_LLAVE .

    D_LLAVE         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ID              reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    IF              reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ELSE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ELSEIF          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    FOR             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    MAP             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    MAKE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    TYPE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    FUNC            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    I_PARENTESIS    reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINTLN         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINTF          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINT           reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    VAR             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    I_CORCHETE      reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    INT             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    DOUBLE          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    STRING          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    BOOLEAN         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    $end            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)


state 220

    (7) body -> I_LLAVE varias_instrucciones instruct_expression . D_LLAVE

    D_LLAVE         shift and go to state 258


state 221

    (11) instruct_expression -> RETURN valor .
    (115) valor -> valor . operacion_binaria valor
    (99) expression -> valor .
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    D_LLAVE         reduce using rule 11 (instruct_expression -> RETURN valor .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

  ! ADICION         [ reduce using rule 99 (expression -> valor .) ]
  ! RESTA           [ reduce using rule 99 (expression -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 99 (expression -> valor .) ]
  ! DIVISION        [ reduce using rule 99 (expression -> valor .) ]
  ! MODULO          [ reduce using rule 99 (expression -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 99 (expression -> valor .) ]
  ! IGUAL           [ reduce using rule 99 (expression -> valor .) ]
  ! DIFERENTE       [ reduce using rule 99 (expression -> valor .) ]
  ! MAYOR           [ reduce using rule 99 (expression -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 99 (expression -> valor .) ]
  ! MENOR           [ reduce using rule 99 (expression -> valor .) ]

    operacion_binaria              shift and go to state 101

state 222

    (12) instruct_expression -> RETURN resultado .
    (100) expression -> resultado .

    D_LLAVE         reduce using rule 12 (instruct_expression -> RETURN resultado .)
    ADICION         reduce using rule 100 (expression -> resultado .)
    RESTA           reduce using rule 100 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 100 (expression -> resultado .)
    DIVISION        reduce using rule 100 (expression -> resultado .)
    MODULO          reduce using rule 100 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 100 (expression -> resultado .)
    IGUAL           reduce using rule 100 (expression -> resultado .)
    DIFERENTE       reduce using rule 100 (expression -> resultado .)
    MAYOR           reduce using rule 100 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 100 (expression -> resultado .)
    MENOR           reduce using rule 100 (expression -> resultado .)


state 223

    (160) valor_variable -> ID .
    (91) valor_struct -> ID . PUNTO ID
    (36) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS

    ADICION         reduce using rule 160 (valor_variable -> ID .)
    RESTA           reduce using rule 160 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 160 (valor_variable -> ID .)
    DIVISION        reduce using rule 160 (valor_variable -> ID .)
    MODULO          reduce using rule 160 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    IGUAL           reduce using rule 160 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 160 (valor_variable -> ID .)
    MAYOR           reduce using rule 160 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 160 (valor_variable -> ID .)
    MENOR           reduce using rule 160 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 160 (valor_variable -> ID .)
    PUNTO           shift and go to state 92
    I_PARENTESIS    shift and go to state 89


state 224

    (10) varias_instrucciones -> instruccion varias_instrucciones .

    D_LLAVE         reduce using rule 10 (varias_instrucciones -> instruccion varias_instrucciones .)
    RETURN          reduce using rule 10 (varias_instrucciones -> instruccion varias_instrucciones .)


state 225

    (41) instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .

    $end            reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ID              reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    IF              reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    INT             reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 41 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)


state 226

    (42) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 259


state 227

    (44) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION . RANGE ID I_LLAVE body D_LLAVE

    RANGE           shift and go to state 260


state 228

    (43) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA . ID operador_matematico I_LLAVE body D_LLAVE

    ID              shift and go to state 261


state 229

    (77) instruccion -> MAP I_CORCHETE type D_CORCHETE type . I_LLAVE D_LLAVE
    (79) instruccion -> MAP I_CORCHETE type D_CORCHETE type . I_LLAVE claves_valores D_LLAVE

    I_LLAVE         shift and go to state 262


state 230

    (61) array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .

    $end            reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ID              reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    IF              reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    FOR             reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    MAP             reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    VAR             reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    INT             reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    STRING          reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 61 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)


state 231

    (69) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int . D_LLAVE

    D_LLAVE         shift and go to state 263


state 232

    (62) array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .

    $end            reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ID              reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    IF              reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    INT             reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 62 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)


state 233

    (70) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double . D_LLAVE

    D_LLAVE         shift and go to state 264


state 234

    (63) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .

    $end            reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ID              reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    IF              reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    FOR             reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    MAP             reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    VAR             reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    INT             reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    STRING          reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 63 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)


state 235

    (71) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string . D_LLAVE

    D_LLAVE         shift and go to state 265


state 236

    (64) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .

    $end            reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ID              reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    IF              reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    FOR             reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    MAP             reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    VAR             reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    INT             reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    STRING          reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 64 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)


state 237

    (72) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean . D_LLAVE

    D_LLAVE         shift and go to state 266


state 238

    (78) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type . D_CORCHETE type D_PARENTESIS

    D_CORCHETE      shift and go to state 267


state 239

    (80) instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct . D_LLAVE

    D_LLAVE         shift and go to state 268


state 240

    (81) atributos_struct -> atributo .
    (82) atributos_struct -> atributo . atributos_struct
    (81) atributos_struct -> . atributo
    (82) atributos_struct -> . atributo atributos_struct
    (83) atributo -> . ID type

    D_LLAVE         reduce using rule 81 (atributos_struct -> atributo .)
    ID              shift and go to state 196

    atributo                       shift and go to state 240
    atributos_struct               shift and go to state 269

state 241

    (31) parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS . type
    (32) parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .
    (124) type -> . BOOL
    (125) type -> . STRINGTYPE
    (126) type -> . INTEGER
    (127) type -> . floating_type
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    I_LLAVE         reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    ID              reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    IF              reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    ELSE            reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    ELSEIF          reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    FOR             reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    MAP             reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    MAKE            reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    TYPE            reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINTLN         reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINTF          reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINT           reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    VAR             reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    I_CORCHETE      reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    INT             reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    DOUBLE          reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    STRING          reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    BOOLEAN         reduce using rule 32 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS .)
    BOOL            shift and go to state 83
    STRINGTYPE      shift and go to state 81
    INTEGER         shift and go to state 80
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    type                           shift and go to state 270
    floating_type                  shift and go to state 82

state 242

    (34) parametros -> atributo COMA . parametros
    (33) parametros -> . atributo
    (34) parametros -> . atributo COMA parametros
    (35) parametros -> .
    (83) atributo -> . ID type

    D_PARENTESIS    reduce using rule 35 (parametros -> .)
    ID              shift and go to state 196

    atributo                       shift and go to state 195
    parametros                     shift and go to state 271

state 243

    (83) atributo -> ID type .

    COMA            reduce using rule 83 (atributo -> ID type .)
    D_PARENTESIS    reduce using rule 83 (atributo -> ID type .)
    ID              reduce using rule 83 (atributo -> ID type .)
    D_LLAVE         reduce using rule 83 (atributo -> ID type .)


state 244

    (73) array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .

    $end            reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PUNTO_COMA      reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    D_LLAVE         reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ID              reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    IF              reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSE            reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSEIF          reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    FOR             reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    MAP             reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    MAKE            reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    TYPE            reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    I_PARENTESIS    reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTLN         reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTF          reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINT           reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    VAR             reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    I_CORCHETE      reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    INT             reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    DOUBLE          reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    STRING          reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    BOOLEAN         reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    RETURN          reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    FUNC            reduce using rule 73 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)


state 245

    (108) valores_int -> valor_int COMA . valores_int
    (107) valores_int -> . valor_int
    (108) valores_int -> . valor_int COMA valores_int
    (156) valor_int -> . INT

    INT             shift and go to state 54

    valor_int                      shift and go to state 199
    valores_int                    shift and go to state 272

state 246

    (74) array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .

    $end            reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PUNTO_COMA      reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    D_LLAVE         reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ID              reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    IF              reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ELSE            reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ELSEIF          reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    FOR             reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    MAP             reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    MAKE            reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    TYPE            reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    I_PARENTESIS    reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTLN         reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTF          reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINT           reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    VAR             reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    I_CORCHETE      reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    INT             reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    DOUBLE          reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    STRING          reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    BOOLEAN         reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    RETURN          reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    FUNC            reduce using rule 74 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)


state 247

    (110) valores_double -> valor_double COMA . valores_double
    (109) valores_double -> . valor_double
    (110) valores_double -> . valor_double COMA valores_double
    (157) valor_double -> . DOUBLE

    DOUBLE          shift and go to state 55

    valor_double                   shift and go to state 202
    valores_double                 shift and go to state 273

state 248

    (75) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .

    $end            reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PUNTO_COMA      reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    D_LLAVE         reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ID              reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    IF              reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSE            reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSEIF          reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FOR             reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAP             reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAKE            reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    TYPE            reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_PARENTESIS    reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTLN         reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTF          reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINT           reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    VAR             reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_CORCHETE      reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    INT             reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    DOUBLE          reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    STRING          reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    BOOLEAN         reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    RETURN          reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FUNC            reduce using rule 75 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)


state 249

    (112) valores_string -> valor_string COMA . valores_string
    (111) valores_string -> . valor_string
    (112) valores_string -> . valor_string COMA valores_string
    (158) valor_string -> . STRING

    STRING          shift and go to state 56

    valor_string                   shift and go to state 205
    valores_string                 shift and go to state 274

state 250

    (76) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .

    $end            reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PUNTO_COMA      reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    D_LLAVE         reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ID              reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    IF              reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSE            reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSEIF          reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FOR             reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAP             reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAKE            reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    TYPE            reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_PARENTESIS    reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTLN         reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTF          reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINT           reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    VAR             reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_CORCHETE      reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    INT             reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    DOUBLE          reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    STRING          reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    BOOLEAN         reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    RETURN          reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FUNC            reduce using rule 76 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)


state 251

    (114) valores_boolean -> valor_boolean COMA . valores_boolean
    (113) valores_boolean -> . valor_boolean
    (114) valores_boolean -> . valor_boolean COMA valores_boolean
    (159) valor_boolean -> . BOOLEAN

    BOOLEAN         shift and go to state 46

    valor_boolean                  shift and go to state 208
    valores_boolean                shift and go to state 275

state 252

    (92) declara_atributo -> ID DOS_PUNTOS . expression
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 74
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    expression                     shift and go to state 276
    valor                          shift and go to state 14
    resultado                      shift and go to state 41
    llamada_func                   shift and go to state 73
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 253

    (85) init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .

    $end            reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    D_LLAVE         reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ID              reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    IF              reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSE            reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSEIF          reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FOR             reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAP             reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAKE            reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    TYPE            reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTLN         reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTF          reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINT           reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    VAR             reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_CORCHETE      reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    INT             reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    DOUBLE          reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    STRING          reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    BOOLEAN         reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    RETURN          reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FUNC            reduce using rule 85 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)


state 254

    (87) init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .

    $end            reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PUNTO_COMA      reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    D_LLAVE         reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ID              reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    IF              reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ELSE            reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ELSEIF          reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    FOR             reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    MAP             reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    MAKE            reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    TYPE            reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    I_PARENTESIS    reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINTLN         reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINTF          reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINT           reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    VAR             reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    I_CORCHETE      reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    INT             reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    DOUBLE          reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    STRING          reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    BOOLEAN         reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    RETURN          reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    FUNC            reduce using rule 87 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)


state 255

    (90) atributos_nombrados -> declara_atributo COMA . atributos_nombrados
    (89) atributos_nombrados -> . declara_atributo
    (90) atributos_nombrados -> . declara_atributo COMA atributos_nombrados
    (92) declara_atributo -> . ID DOS_PUNTOS expression

    ID              shift and go to state 278

    declara_atributo               shift and go to state 213
    atributos_nombrados            shift and go to state 277

state 256

    (86) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .

    $end            reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    D_LLAVE         reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ID              reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    IF              reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSE            reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSEIF          reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FOR             reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAP             reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAKE            reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    TYPE            reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTLN         reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTF          reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINT           reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    VAR             reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_CORCHETE      reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    INT             reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    DOUBLE          reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    STRING          reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    BOOLEAN         reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    RETURN          reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FUNC            reduce using rule 86 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)


state 257

    (88) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .

    $end            reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PUNTO_COMA      reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    D_LLAVE         reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ID              reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    IF              reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ELSE            reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ELSEIF          reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    FOR             reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    MAP             reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    MAKE            reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    TYPE            reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    I_PARENTESIS    reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINTLN         reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINTF          reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINT           reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    VAR             reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    I_CORCHETE      reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    INT             reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    DOUBLE          reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    STRING          reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    BOOLEAN         reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    RETURN          reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    FUNC            reduce using rule 88 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)


state 258

    (7) body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .

    D_LLAVE         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ID              reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    IF              reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ELSE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ELSEIF          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    FOR             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    MAP             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    MAKE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    TYPE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    FUNC            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    I_PARENTESIS    reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINTLN         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINTF          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINT           reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    VAR             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    I_CORCHETE      reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    INT             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    DOUBLE          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    STRING          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    BOOLEAN         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    $end            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)


state 259

    (42) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_LLAVE         shift and go to state 144
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    body                           shift and go to state 279
    instruccion                    shift and go to state 146
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 260

    (44) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE . ID I_LLAVE body D_LLAVE

    ID              shift and go to state 280


state 261

    (43) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID . operador_matematico I_LLAVE body D_LLAVE
    (130) operador_matematico -> . INCREMENTO
    (131) operador_matematico -> . DECREMENTO

    INCREMENTO      shift and go to state 99
    DECREMENTO      shift and go to state 100

    operador_matematico            shift and go to state 281

state 262

    (77) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE . D_LLAVE
    (79) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE . claves_valores D_LLAVE
    (94) claves_valores -> . clave_valor
    (95) claves_valores -> . clave_valor COMA claves_valores
    (93) clave_valor -> . valor DOS_PUNTOS valor
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    D_LLAVE         shift and go to state 282
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    claves_valores                 shift and go to state 283
    clave_valor                    shift and go to state 284
    valor                          shift and go to state 285
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 263

    (69) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .

    $end            reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PUNTO_COMA      reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    D_LLAVE         reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ID              reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    IF              reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSE            reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSEIF          reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    FOR             reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    MAP             reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    MAKE            reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    TYPE            reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    I_PARENTESIS    reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTLN         reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTF          reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINT           reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    VAR             reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    I_CORCHETE      reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    INT             reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    DOUBLE          reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    STRING          reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    BOOLEAN         reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    RETURN          reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    FUNC            reduce using rule 69 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)


state 264

    (70) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .

    $end            reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PUNTO_COMA      reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    D_LLAVE         reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ID              reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    IF              reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ELSE            reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ELSEIF          reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    FOR             reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    MAP             reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    MAKE            reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    TYPE            reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    I_PARENTESIS    reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTLN         reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTF          reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINT           reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    VAR             reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    I_CORCHETE      reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    INT             reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    DOUBLE          reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    STRING          reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    BOOLEAN         reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    RETURN          reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    FUNC            reduce using rule 70 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)


state 265

    (71) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .

    $end            reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PUNTO_COMA      reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    D_LLAVE         reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ID              reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    IF              reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSE            reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSEIF          reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FOR             reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAP             reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAKE            reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    TYPE            reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_PARENTESIS    reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTLN         reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTF          reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINT           reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    VAR             reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_CORCHETE      reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    INT             reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    DOUBLE          reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    STRING          reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    BOOLEAN         reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    RETURN          reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FUNC            reduce using rule 71 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)


state 266

    (72) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .

    $end            reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PUNTO_COMA      reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    D_LLAVE         reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ID              reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    IF              reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSE            reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSEIF          reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FOR             reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAP             reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAKE            reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    TYPE            reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_PARENTESIS    reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTLN         reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTF          reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINT           reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    VAR             reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_CORCHETE      reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    INT             reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    DOUBLE          reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    STRING          reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    BOOLEAN         reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    RETURN          reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FUNC            reduce using rule 72 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)


state 267

    (78) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE . type D_PARENTESIS
    (124) type -> . BOOL
    (125) type -> . STRINGTYPE
    (126) type -> . INTEGER
    (127) type -> . floating_type
    (128) floating_type -> . FLOAT32
    (129) floating_type -> . FLOAT64

    BOOL            shift and go to state 83
    STRINGTYPE      shift and go to state 81
    INTEGER         shift and go to state 80
    FLOAT32         shift and go to state 85
    FLOAT64         shift and go to state 86

    type                           shift and go to state 286
    floating_type                  shift and go to state 82

state 268

    (80) instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .

    $end            reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PUNTO_COMA      reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    D_LLAVE         reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ID              reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    IF              reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ELSE            reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ELSEIF          reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    FOR             reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    MAP             reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    MAKE            reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    TYPE            reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    I_PARENTESIS    reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINTLN         reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINTF          reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINT           reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    VAR             reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    I_CORCHETE      reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    INT             reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    DOUBLE          reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    STRING          reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    BOOLEAN         reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    RETURN          reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    FUNC            reduce using rule 80 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)


state 269

    (82) atributos_struct -> atributo atributos_struct .

    D_LLAVE         reduce using rule 82 (atributos_struct -> atributo atributos_struct .)


state 270

    (31) parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .

    I_LLAVE         reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    ID              reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    IF              reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    ELSE            reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    ELSEIF          reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    FOR             reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    MAP             reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    MAKE            reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    TYPE            reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    I_PARENTESIS    reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    PRINTLN         reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    PRINTF          reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    PRINT           reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    VAR             reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    I_CORCHETE      reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    INT             reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    DOUBLE          reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    STRING          reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)
    BOOLEAN         reduce using rule 31 (parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type .)


state 271

    (34) parametros -> atributo COMA parametros .

    D_PARENTESIS    reduce using rule 34 (parametros -> atributo COMA parametros .)


state 272

    (108) valores_int -> valor_int COMA valores_int .

    D_LLAVE         reduce using rule 108 (valores_int -> valor_int COMA valores_int .)


state 273

    (110) valores_double -> valor_double COMA valores_double .

    D_LLAVE         reduce using rule 110 (valores_double -> valor_double COMA valores_double .)


state 274

    (112) valores_string -> valor_string COMA valores_string .

    D_LLAVE         reduce using rule 112 (valores_string -> valor_string COMA valores_string .)


state 275

    (114) valores_boolean -> valor_boolean COMA valores_boolean .

    D_LLAVE         reduce using rule 114 (valores_boolean -> valor_boolean COMA valores_boolean .)


state 276

    (92) declara_atributo -> ID DOS_PUNTOS expression .
    (103) resultado -> expression . operacion_binaria expression
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    COMA            reduce using rule 92 (declara_atributo -> ID DOS_PUNTOS expression .)
    D_LLAVE         reduce using rule 92 (declara_atributo -> ID DOS_PUNTOS expression .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 58

state 277

    (90) atributos_nombrados -> declara_atributo COMA atributos_nombrados .

    D_LLAVE         reduce using rule 90 (atributos_nombrados -> declara_atributo COMA atributos_nombrados .)


state 278

    (92) declara_atributo -> ID . DOS_PUNTOS expression

    DOS_PUNTOS      shift and go to state 252


state 279

    (42) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 287


state 280

    (44) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 288


state 281

    (43) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 289


state 282

    (77) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .

    $end            reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ID              reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    IF              reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    INT             reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 77 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)


state 283

    (79) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores . D_LLAVE

    D_LLAVE         shift and go to state 290


state 284

    (94) claves_valores -> clave_valor .
    (95) claves_valores -> clave_valor . COMA claves_valores

    D_LLAVE         reduce using rule 94 (claves_valores -> clave_valor .)
    COMA            shift and go to state 291


state 285

    (93) clave_valor -> valor . DOS_PUNTOS valor
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    DOS_PUNTOS      shift and go to state 292
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 101

state 286

    (78) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type . D_PARENTESIS

    D_PARENTESIS    shift and go to state 293


state 287

    (42) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .

    $end            reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ID              reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    IF              reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    INT             reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 42 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)


state 288

    (44) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_LLAVE         shift and go to state 144
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    body                           shift and go to state 294
    instruccion                    shift and go to state 146
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 289

    (43) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (39) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (40) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (41) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (42) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (43) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (44) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (45) instruccion -> . array_int
    (46) instruccion -> . array_double
    (47) instruccion -> . array_string
    (48) instruccion -> . array_boolean
    (49) instruccion -> . array_length_int
    (50) instruccion -> . array_length_double
    (51) instruccion -> . array_length_string
    (52) instruccion -> . array_length_boolean
    (53) instruccion -> . array_con_valores_int
    (54) instruccion -> . array_con_valores_double
    (55) instruccion -> . array_con_valores_string
    (56) instruccion -> . array_con_valores_boolean
    (57) instruccion -> . array_length_con_valores_int
    (58) instruccion -> . array_length_con_valores_double
    (59) instruccion -> . array_length_con_valores_string
    (60) instruccion -> . array_length_con_valores_boolean
    (77) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (78) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (79) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (80) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (84) instruccion -> . init_struct
    (36) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (104) resultado_inc_dec -> . ID operador_matematico
    (99) expression -> . valor
    (100) expression -> . resultado
    (101) expression -> . llamada_func
    (102) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (116) print -> . PRINTLN
    (117) print -> . PRINTF
    (118) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (61) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (62) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (63) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (64) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (65) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (66) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (67) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (68) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (69) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (70) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (71) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (72) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (73) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (74) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (75) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (76) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (85) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (86) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (87) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (88) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (103) resultado -> . expression operacion_binaria expression
    (123) array_length -> . I_CORCHETE INT D_CORCHETE
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    I_LLAVE         shift and go to state 144
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 42
    PRINTF          shift and go to state 43
    PRINT           shift and go to state 44
    VAR             shift and go to state 45
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46

    instruccion                    shift and go to state 146
    valor                          shift and go to state 14
    body                           shift and go to state 295
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 41
    array_length                   shift and go to state 47
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 290

    (79) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .

    $end            reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    D_LLAVE         reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ID              reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    IF              reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ELSE            reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ELSEIF          reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    FOR             reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    MAP             reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    MAKE            reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    TYPE            reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINTLN         reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINTF          reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINT           reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    VAR             reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    I_CORCHETE      reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    INT             reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    DOUBLE          reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    STRING          reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    BOOLEAN         reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    RETURN          reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    FUNC            reduce using rule 79 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)


state 291

    (95) claves_valores -> clave_valor COMA . claves_valores
    (94) claves_valores -> . clave_valor
    (95) claves_valores -> . clave_valor COMA claves_valores
    (93) clave_valor -> . valor DOS_PUNTOS valor
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    clave_valor                    shift and go to state 284
    claves_valores                 shift and go to state 296
    valor                          shift and go to state 285
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 292

    (93) clave_valor -> valor DOS_PUNTOS . valor
    (115) valor -> . valor operacion_binaria valor
    (150) valor -> . valor_int
    (151) valor -> . valor_double
    (152) valor -> . valor_string
    (153) valor -> . valor_boolean
    (154) valor -> . valor_variable
    (155) valor -> . valor_struct
    (156) valor_int -> . INT
    (157) valor_double -> . DOUBLE
    (158) valor_string -> . STRING
    (159) valor_boolean -> . BOOLEAN
    (160) valor_variable -> . ID
    (91) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 54
    DOUBLE          shift and go to state 55
    STRING          shift and go to state 56
    BOOLEAN         shift and go to state 46
    ID              shift and go to state 105

    valor                          shift and go to state 297
    valor_int                      shift and go to state 48
    valor_double                   shift and go to state 49
    valor_string                   shift and go to state 50
    valor_boolean                  shift and go to state 51
    valor_variable                 shift and go to state 52
    valor_struct                   shift and go to state 53

state 293

    (78) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .

    $end            reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    D_LLAVE         reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ID              reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    IF              reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ELSE            reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ELSEIF          reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    FOR             reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    MAP             reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    MAKE            reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    TYPE            reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINTLN         reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINTF          reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINT           reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    VAR             reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    I_CORCHETE      reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    INT             reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    DOUBLE          reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    STRING          reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    BOOLEAN         reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    RETURN          reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    FUNC            reduce using rule 78 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)


state 294

    (44) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 298


state 295

    (43) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 299


state 296

    (95) claves_valores -> clave_valor COMA claves_valores .

    D_LLAVE         reduce using rule 95 (claves_valores -> clave_valor COMA claves_valores .)


state 297

    (93) clave_valor -> valor DOS_PUNTOS valor .
    (115) valor -> valor . operacion_binaria valor
    (139) operacion_binaria -> . ADICION
    (140) operacion_binaria -> . RESTA
    (141) operacion_binaria -> . MULTIPLICACION
    (142) operacion_binaria -> . DIVISION
    (143) operacion_binaria -> . MODULO
    (144) operacion_binaria -> . MENOR_IGUAL
    (145) operacion_binaria -> . IGUAL
    (146) operacion_binaria -> . DIFERENTE
    (147) operacion_binaria -> . MAYOR
    (148) operacion_binaria -> . MAYOR_IGUAL
    (149) operacion_binaria -> . MENOR

    COMA            reduce using rule 93 (clave_valor -> valor DOS_PUNTOS valor .)
    D_LLAVE         reduce using rule 93 (clave_valor -> valor DOS_PUNTOS valor .)
    ADICION         shift and go to state 59
    RESTA           shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    DIVISION        shift and go to state 62
    MODULO          shift and go to state 63
    MENOR_IGUAL     shift and go to state 64
    IGUAL           shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR           shift and go to state 67
    MAYOR_IGUAL     shift and go to state 68
    MENOR           shift and go to state 69

    operacion_binaria              shift and go to state 101

state 298

    (44) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .

    $end            reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ID              reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    IF              reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    INT             reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 44 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)


state 299

    (43) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .

    $end            reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ID              reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    IF              reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    INT             reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 43 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for I_PARENTESIS in state 13 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 14 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 14 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 14 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 14 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 14 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 14 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 14 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 14 resolved as shift
WARNING: shift/reduce conflict for I_PARENTESIS in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 121 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 121 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 121 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 121 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 121 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 126 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 126 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 126 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 126 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 126 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 126 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 126 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 126 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 126 resolved as shift
WARNING: shift/reduce conflict for I_PARENTESIS in state 134 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 135 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 135 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 135 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 135 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 135 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 135 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 135 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 135 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 141 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 141 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 141 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 141 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 141 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 221 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 221 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 221 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 221 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 221 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 221 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 221 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 221 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 221 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (instruccion -> llamada_func)
WARNING: rejected rule (expression -> llamada_func) in state 4
WARNING: reduce/reduce conflict in state 126 resolved using rule (declaracion_comun -> decla_header ASIGNACION valor)
WARNING: rejected rule (expression -> valor) in state 126
WARNING: reduce/reduce conflict in state 135 resolved using rule (instruccion -> ID asignacion valor)
WARNING: rejected rule (expression -> valor) in state 135
