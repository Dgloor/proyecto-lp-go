Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BOOLEAN
    BREAK
    CASE
    CHAN
    CONST
    CONTINUE
    DEFAULT
    DEFER
    DOS_PUNTOS
    ELSE
    ELSEIF
    FALLTHROUGH
    FOR
    FUNC
    GO
    GOTO
    IDENTIFICADOR
    IF
    IMPORT
    INTERFACE
    MAP
    NOT
    OR
    PACKAGE
    PUNTO
    PUNTO_COMA
    RANGE
    RETURN
    SELECT
    STRUCT
    SWITCH
    TYPE

Grammar

Rule 0     S' -> instruccion
Rule 1     instruccion -> print I_PARENTESIS valores D_PARENTESIS
Rule 2     instruccion -> VAR ID type ASIGNACION valor
Rule 3     instruccion -> ID asignacion valor
Rule 4     instruccion -> ID operador_matematico
Rule 5     instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE D_LLAVE
Rule 6     instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE D_LLAVE
Rule 7     instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE valores D_LLAVE
Rule 8     instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE valores D_LLAVE
Rule 9     valores -> valor
Rule 10    valores -> valor COMA valores
Rule 11    valor -> valor operacion_binaria valor
Rule 12    print -> PRINTLN
Rule 13    print -> PRINTF
Rule 14    print -> PRINT
Rule 15    type -> BOOL
Rule 16    type -> STRINGTYPE
Rule 17    type -> INTEGER
Rule 18    type -> FLOAT32
Rule 19    type -> FLOAT64
Rule 20    operador_matematico -> INCREMENTO
Rule 21    operador_matematico -> DECREMENTO
Rule 22    asignacion -> ASIGNACION
Rule 23    asignacion -> ASIGNACION_ADICION
Rule 24    asignacion -> ASIGNACION_RESTA
Rule 25    asignacion -> ASIGNACION_MULTI
Rule 26    asignacion -> DECLARACION_ASIGNACION
Rule 27    asignacion -> ASIGNACION_DIVISION
Rule 28    asignacion -> ASIGNACION_MODULO
Rule 29    operacion_binaria -> ADICION
Rule 30    operacion_binaria -> RESTA
Rule 31    operacion_binaria -> MULTIPLICACION
Rule 32    operacion_binaria -> DIVISION
Rule 33    operacion_binaria -> MODULO
Rule 34    operacion_binaria -> MENOR_IGUAL
Rule 35    operacion_binaria -> IGUAL
Rule 36    operacion_binaria -> DIFERENTE
Rule 37    operacion_binaria -> MAYOR
Rule 38    operacion_binaria -> MAYOR_IGUAL
Rule 39    operacion_binaria -> MENOR
Rule 40    valor -> INT
Rule 41    valor -> DOUBLE
Rule 42    valor -> STRING
Rule 43    valor -> ID

Terminals, with rules where they appear

ADICION              : 29
AND                  : 
ASIGNACION           : 2 22
ASIGNACION_ADICION   : 23
ASIGNACION_DIVISION  : 27
ASIGNACION_MODULO    : 28
ASIGNACION_MULTI     : 25
ASIGNACION_RESTA     : 24
BOOL                 : 15
BOOLEAN              : 
BREAK                : 
CASE                 : 
CHAN                 : 
COMA                 : 10
CONST                : 
CONTINUE             : 
DECLARACION_ASIGNACION : 26
DECREMENTO           : 21
DEFAULT              : 
DEFER                : 
DIFERENTE            : 36
DIVISION             : 32
DOS_PUNTOS           : 
DOUBLE               : 41
D_CORCHETE           : 5 6 7 8
D_LLAVE              : 5 6 7 8
D_PARENTESIS         : 1
ELSE                 : 
ELSEIF               : 
FALLTHROUGH          : 
FLOAT32              : 18
FLOAT64              : 19
FOR                  : 
FUNC                 : 
GO                   : 
GOTO                 : 
ID                   : 2 3 4 43
IDENTIFICADOR        : 
IF                   : 
IGUAL                : 35
IMPORT               : 
INCREMENTO           : 20
INT                  : 6 8 40
INTEGER              : 17
INTERFACE            : 
I_CORCHETE           : 5 6 7 8
I_LLAVE              : 5 6 7 8
I_PARENTESIS         : 1
MAP                  : 
MAYOR                : 37
MAYOR_IGUAL          : 38
MENOR                : 39
MENOR_IGUAL          : 34
MODULO               : 33
MULTIPLICACION       : 31
NOT                  : 
OR                   : 
PACKAGE              : 
PRINT                : 14
PRINTF               : 13
PRINTLN              : 12
PUNTO                : 
PUNTO_COMA           : 
RANGE                : 
RESTA                : 30
RETURN               : 
SELECT               : 
STRING               : 42
STRINGTYPE           : 16
STRUCT               : 
SWITCH               : 
TYPE                 : 
VAR                  : 2
error                : 

Nonterminals, with rules where they appear

asignacion           : 3
instruccion          : 0
operacion_binaria    : 11
operador_matematico  : 4
print                : 1
type                 : 2 5 6 7 8
valor                : 2 3 9 10 11 11
valores              : 1 7 8 10

Parsing method: LALR

state 0

    (0) S' -> . instruccion
    (1) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (2) instruccion -> . VAR ID type ASIGNACION valor
    (3) instruccion -> . ID asignacion valor
    (4) instruccion -> . ID operador_matematico
    (5) instruccion -> . I_CORCHETE D_CORCHETE type I_LLAVE D_LLAVE
    (6) instruccion -> . I_CORCHETE INT D_CORCHETE type I_LLAVE D_LLAVE
    (7) instruccion -> . I_CORCHETE D_CORCHETE type I_LLAVE valores D_LLAVE
    (8) instruccion -> . I_CORCHETE INT D_CORCHETE type I_LLAVE valores D_LLAVE
    (12) print -> . PRINTLN
    (13) print -> . PRINTF
    (14) print -> . PRINT

    VAR             shift and go to state 3
    ID              shift and go to state 4
    I_CORCHETE      shift and go to state 5
    PRINTLN         shift and go to state 6
    PRINTF          shift and go to state 7
    PRINT           shift and go to state 8

    instruccion                    shift and go to state 1
    print                          shift and go to state 2

state 1

    (0) S' -> instruccion .



state 2

    (1) instruccion -> print . I_PARENTESIS valores D_PARENTESIS

    I_PARENTESIS    shift and go to state 9


state 3

    (2) instruccion -> VAR . ID type ASIGNACION valor

    ID              shift and go to state 10


state 4

    (3) instruccion -> ID . asignacion valor
    (4) instruccion -> ID . operador_matematico
    (22) asignacion -> . ASIGNACION
    (23) asignacion -> . ASIGNACION_ADICION
    (24) asignacion -> . ASIGNACION_RESTA
    (25) asignacion -> . ASIGNACION_MULTI
    (26) asignacion -> . DECLARACION_ASIGNACION
    (27) asignacion -> . ASIGNACION_DIVISION
    (28) asignacion -> . ASIGNACION_MODULO
    (20) operador_matematico -> . INCREMENTO
    (21) operador_matematico -> . DECREMENTO

    ASIGNACION      shift and go to state 13
    ASIGNACION_ADICION shift and go to state 14
    ASIGNACION_RESTA shift and go to state 15
    ASIGNACION_MULTI shift and go to state 16
    DECLARACION_ASIGNACION shift and go to state 17
    ASIGNACION_DIVISION shift and go to state 18
    ASIGNACION_MODULO shift and go to state 19
    INCREMENTO      shift and go to state 20
    DECREMENTO      shift and go to state 21

    asignacion                     shift and go to state 11
    operador_matematico            shift and go to state 12

state 5

    (5) instruccion -> I_CORCHETE . D_CORCHETE type I_LLAVE D_LLAVE
    (6) instruccion -> I_CORCHETE . INT D_CORCHETE type I_LLAVE D_LLAVE
    (7) instruccion -> I_CORCHETE . D_CORCHETE type I_LLAVE valores D_LLAVE
    (8) instruccion -> I_CORCHETE . INT D_CORCHETE type I_LLAVE valores D_LLAVE

    D_CORCHETE      shift and go to state 22
    INT             shift and go to state 23


state 6

    (12) print -> PRINTLN .

    I_PARENTESIS    reduce using rule 12 (print -> PRINTLN .)


state 7

    (13) print -> PRINTF .

    I_PARENTESIS    reduce using rule 13 (print -> PRINTF .)


state 8

    (14) print -> PRINT .

    I_PARENTESIS    reduce using rule 14 (print -> PRINT .)


state 9

    (1) instruccion -> print I_PARENTESIS . valores D_PARENTESIS
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (11) valor -> . valor operacion_binaria valor
    (40) valor -> . INT
    (41) valor -> . DOUBLE
    (42) valor -> . STRING
    (43) valor -> . ID

    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    valores                        shift and go to state 24
    valor                          shift and go to state 25

state 10

    (2) instruccion -> VAR ID . type ASIGNACION valor
    (15) type -> . BOOL
    (16) type -> . STRINGTYPE
    (17) type -> . INTEGER
    (18) type -> . FLOAT32
    (19) type -> . FLOAT64

    BOOL            shift and go to state 31
    STRINGTYPE      shift and go to state 32
    INTEGER         shift and go to state 33
    FLOAT32         shift and go to state 34
    FLOAT64         shift and go to state 35

    type                           shift and go to state 30

state 11

    (3) instruccion -> ID asignacion . valor
    (11) valor -> . valor operacion_binaria valor
    (40) valor -> . INT
    (41) valor -> . DOUBLE
    (42) valor -> . STRING
    (43) valor -> . ID

    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    valor                          shift and go to state 36

state 12

    (4) instruccion -> ID operador_matematico .

    $end            reduce using rule 4 (instruccion -> ID operador_matematico .)


state 13

    (22) asignacion -> ASIGNACION .

    INT             reduce using rule 22 (asignacion -> ASIGNACION .)
    DOUBLE          reduce using rule 22 (asignacion -> ASIGNACION .)
    STRING          reduce using rule 22 (asignacion -> ASIGNACION .)
    ID              reduce using rule 22 (asignacion -> ASIGNACION .)


state 14

    (23) asignacion -> ASIGNACION_ADICION .

    INT             reduce using rule 23 (asignacion -> ASIGNACION_ADICION .)
    DOUBLE          reduce using rule 23 (asignacion -> ASIGNACION_ADICION .)
    STRING          reduce using rule 23 (asignacion -> ASIGNACION_ADICION .)
    ID              reduce using rule 23 (asignacion -> ASIGNACION_ADICION .)


state 15

    (24) asignacion -> ASIGNACION_RESTA .

    INT             reduce using rule 24 (asignacion -> ASIGNACION_RESTA .)
    DOUBLE          reduce using rule 24 (asignacion -> ASIGNACION_RESTA .)
    STRING          reduce using rule 24 (asignacion -> ASIGNACION_RESTA .)
    ID              reduce using rule 24 (asignacion -> ASIGNACION_RESTA .)


state 16

    (25) asignacion -> ASIGNACION_MULTI .

    INT             reduce using rule 25 (asignacion -> ASIGNACION_MULTI .)
    DOUBLE          reduce using rule 25 (asignacion -> ASIGNACION_MULTI .)
    STRING          reduce using rule 25 (asignacion -> ASIGNACION_MULTI .)
    ID              reduce using rule 25 (asignacion -> ASIGNACION_MULTI .)


state 17

    (26) asignacion -> DECLARACION_ASIGNACION .

    INT             reduce using rule 26 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 26 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 26 (asignacion -> DECLARACION_ASIGNACION .)
    ID              reduce using rule 26 (asignacion -> DECLARACION_ASIGNACION .)


state 18

    (27) asignacion -> ASIGNACION_DIVISION .

    INT             reduce using rule 27 (asignacion -> ASIGNACION_DIVISION .)
    DOUBLE          reduce using rule 27 (asignacion -> ASIGNACION_DIVISION .)
    STRING          reduce using rule 27 (asignacion -> ASIGNACION_DIVISION .)
    ID              reduce using rule 27 (asignacion -> ASIGNACION_DIVISION .)


state 19

    (28) asignacion -> ASIGNACION_MODULO .

    INT             reduce using rule 28 (asignacion -> ASIGNACION_MODULO .)
    DOUBLE          reduce using rule 28 (asignacion -> ASIGNACION_MODULO .)
    STRING          reduce using rule 28 (asignacion -> ASIGNACION_MODULO .)
    ID              reduce using rule 28 (asignacion -> ASIGNACION_MODULO .)


state 20

    (20) operador_matematico -> INCREMENTO .

    $end            reduce using rule 20 (operador_matematico -> INCREMENTO .)


state 21

    (21) operador_matematico -> DECREMENTO .

    $end            reduce using rule 21 (operador_matematico -> DECREMENTO .)


state 22

    (5) instruccion -> I_CORCHETE D_CORCHETE . type I_LLAVE D_LLAVE
    (7) instruccion -> I_CORCHETE D_CORCHETE . type I_LLAVE valores D_LLAVE
    (15) type -> . BOOL
    (16) type -> . STRINGTYPE
    (17) type -> . INTEGER
    (18) type -> . FLOAT32
    (19) type -> . FLOAT64

    BOOL            shift and go to state 31
    STRINGTYPE      shift and go to state 32
    INTEGER         shift and go to state 33
    FLOAT32         shift and go to state 34
    FLOAT64         shift and go to state 35

    type                           shift and go to state 37

state 23

    (6) instruccion -> I_CORCHETE INT . D_CORCHETE type I_LLAVE D_LLAVE
    (8) instruccion -> I_CORCHETE INT . D_CORCHETE type I_LLAVE valores D_LLAVE

    D_CORCHETE      shift and go to state 38


state 24

    (1) instruccion -> print I_PARENTESIS valores . D_PARENTESIS

    D_PARENTESIS    shift and go to state 39


state 25

    (9) valores -> valor .
    (10) valores -> valor . COMA valores
    (11) valor -> valor . operacion_binaria valor
    (29) operacion_binaria -> . ADICION
    (30) operacion_binaria -> . RESTA
    (31) operacion_binaria -> . MULTIPLICACION
    (32) operacion_binaria -> . DIVISION
    (33) operacion_binaria -> . MODULO
    (34) operacion_binaria -> . MENOR_IGUAL
    (35) operacion_binaria -> . IGUAL
    (36) operacion_binaria -> . DIFERENTE
    (37) operacion_binaria -> . MAYOR
    (38) operacion_binaria -> . MAYOR_IGUAL
    (39) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 9 (valores -> valor .)
    D_LLAVE         reduce using rule 9 (valores -> valor .)
    COMA            shift and go to state 40
    ADICION         shift and go to state 42
    RESTA           shift and go to state 43
    MULTIPLICACION  shift and go to state 44
    DIVISION        shift and go to state 45
    MODULO          shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    IGUAL           shift and go to state 48
    DIFERENTE       shift and go to state 49
    MAYOR           shift and go to state 50
    MAYOR_IGUAL     shift and go to state 51
    MENOR           shift and go to state 52

    operacion_binaria              shift and go to state 41

state 26

    (40) valor -> INT .

    COMA            reduce using rule 40 (valor -> INT .)
    ADICION         reduce using rule 40 (valor -> INT .)
    RESTA           reduce using rule 40 (valor -> INT .)
    MULTIPLICACION  reduce using rule 40 (valor -> INT .)
    DIVISION        reduce using rule 40 (valor -> INT .)
    MODULO          reduce using rule 40 (valor -> INT .)
    MENOR_IGUAL     reduce using rule 40 (valor -> INT .)
    IGUAL           reduce using rule 40 (valor -> INT .)
    DIFERENTE       reduce using rule 40 (valor -> INT .)
    MAYOR           reduce using rule 40 (valor -> INT .)
    MAYOR_IGUAL     reduce using rule 40 (valor -> INT .)
    MENOR           reduce using rule 40 (valor -> INT .)
    D_PARENTESIS    reduce using rule 40 (valor -> INT .)
    $end            reduce using rule 40 (valor -> INT .)
    D_LLAVE         reduce using rule 40 (valor -> INT .)


state 27

    (41) valor -> DOUBLE .

    COMA            reduce using rule 41 (valor -> DOUBLE .)
    ADICION         reduce using rule 41 (valor -> DOUBLE .)
    RESTA           reduce using rule 41 (valor -> DOUBLE .)
    MULTIPLICACION  reduce using rule 41 (valor -> DOUBLE .)
    DIVISION        reduce using rule 41 (valor -> DOUBLE .)
    MODULO          reduce using rule 41 (valor -> DOUBLE .)
    MENOR_IGUAL     reduce using rule 41 (valor -> DOUBLE .)
    IGUAL           reduce using rule 41 (valor -> DOUBLE .)
    DIFERENTE       reduce using rule 41 (valor -> DOUBLE .)
    MAYOR           reduce using rule 41 (valor -> DOUBLE .)
    MAYOR_IGUAL     reduce using rule 41 (valor -> DOUBLE .)
    MENOR           reduce using rule 41 (valor -> DOUBLE .)
    D_PARENTESIS    reduce using rule 41 (valor -> DOUBLE .)
    $end            reduce using rule 41 (valor -> DOUBLE .)
    D_LLAVE         reduce using rule 41 (valor -> DOUBLE .)


state 28

    (42) valor -> STRING .

    COMA            reduce using rule 42 (valor -> STRING .)
    ADICION         reduce using rule 42 (valor -> STRING .)
    RESTA           reduce using rule 42 (valor -> STRING .)
    MULTIPLICACION  reduce using rule 42 (valor -> STRING .)
    DIVISION        reduce using rule 42 (valor -> STRING .)
    MODULO          reduce using rule 42 (valor -> STRING .)
    MENOR_IGUAL     reduce using rule 42 (valor -> STRING .)
    IGUAL           reduce using rule 42 (valor -> STRING .)
    DIFERENTE       reduce using rule 42 (valor -> STRING .)
    MAYOR           reduce using rule 42 (valor -> STRING .)
    MAYOR_IGUAL     reduce using rule 42 (valor -> STRING .)
    MENOR           reduce using rule 42 (valor -> STRING .)
    D_PARENTESIS    reduce using rule 42 (valor -> STRING .)
    $end            reduce using rule 42 (valor -> STRING .)
    D_LLAVE         reduce using rule 42 (valor -> STRING .)


state 29

    (43) valor -> ID .

    COMA            reduce using rule 43 (valor -> ID .)
    ADICION         reduce using rule 43 (valor -> ID .)
    RESTA           reduce using rule 43 (valor -> ID .)
    MULTIPLICACION  reduce using rule 43 (valor -> ID .)
    DIVISION        reduce using rule 43 (valor -> ID .)
    MODULO          reduce using rule 43 (valor -> ID .)
    MENOR_IGUAL     reduce using rule 43 (valor -> ID .)
    IGUAL           reduce using rule 43 (valor -> ID .)
    DIFERENTE       reduce using rule 43 (valor -> ID .)
    MAYOR           reduce using rule 43 (valor -> ID .)
    MAYOR_IGUAL     reduce using rule 43 (valor -> ID .)
    MENOR           reduce using rule 43 (valor -> ID .)
    D_PARENTESIS    reduce using rule 43 (valor -> ID .)
    $end            reduce using rule 43 (valor -> ID .)
    D_LLAVE         reduce using rule 43 (valor -> ID .)


state 30

    (2) instruccion -> VAR ID type . ASIGNACION valor

    ASIGNACION      shift and go to state 53


state 31

    (15) type -> BOOL .

    ASIGNACION      reduce using rule 15 (type -> BOOL .)
    I_LLAVE         reduce using rule 15 (type -> BOOL .)


state 32

    (16) type -> STRINGTYPE .

    ASIGNACION      reduce using rule 16 (type -> STRINGTYPE .)
    I_LLAVE         reduce using rule 16 (type -> STRINGTYPE .)


state 33

    (17) type -> INTEGER .

    ASIGNACION      reduce using rule 17 (type -> INTEGER .)
    I_LLAVE         reduce using rule 17 (type -> INTEGER .)


state 34

    (18) type -> FLOAT32 .

    ASIGNACION      reduce using rule 18 (type -> FLOAT32 .)
    I_LLAVE         reduce using rule 18 (type -> FLOAT32 .)


state 35

    (19) type -> FLOAT64 .

    ASIGNACION      reduce using rule 19 (type -> FLOAT64 .)
    I_LLAVE         reduce using rule 19 (type -> FLOAT64 .)


state 36

    (3) instruccion -> ID asignacion valor .
    (11) valor -> valor . operacion_binaria valor
    (29) operacion_binaria -> . ADICION
    (30) operacion_binaria -> . RESTA
    (31) operacion_binaria -> . MULTIPLICACION
    (32) operacion_binaria -> . DIVISION
    (33) operacion_binaria -> . MODULO
    (34) operacion_binaria -> . MENOR_IGUAL
    (35) operacion_binaria -> . IGUAL
    (36) operacion_binaria -> . DIFERENTE
    (37) operacion_binaria -> . MAYOR
    (38) operacion_binaria -> . MAYOR_IGUAL
    (39) operacion_binaria -> . MENOR

    $end            reduce using rule 3 (instruccion -> ID asignacion valor .)
    ADICION         shift and go to state 42
    RESTA           shift and go to state 43
    MULTIPLICACION  shift and go to state 44
    DIVISION        shift and go to state 45
    MODULO          shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    IGUAL           shift and go to state 48
    DIFERENTE       shift and go to state 49
    MAYOR           shift and go to state 50
    MAYOR_IGUAL     shift and go to state 51
    MENOR           shift and go to state 52

    operacion_binaria              shift and go to state 41

state 37

    (5) instruccion -> I_CORCHETE D_CORCHETE type . I_LLAVE D_LLAVE
    (7) instruccion -> I_CORCHETE D_CORCHETE type . I_LLAVE valores D_LLAVE

    I_LLAVE         shift and go to state 54


state 38

    (6) instruccion -> I_CORCHETE INT D_CORCHETE . type I_LLAVE D_LLAVE
    (8) instruccion -> I_CORCHETE INT D_CORCHETE . type I_LLAVE valores D_LLAVE
    (15) type -> . BOOL
    (16) type -> . STRINGTYPE
    (17) type -> . INTEGER
    (18) type -> . FLOAT32
    (19) type -> . FLOAT64

    BOOL            shift and go to state 31
    STRINGTYPE      shift and go to state 32
    INTEGER         shift and go to state 33
    FLOAT32         shift and go to state 34
    FLOAT64         shift and go to state 35

    type                           shift and go to state 55

state 39

    (1) instruccion -> print I_PARENTESIS valores D_PARENTESIS .

    $end            reduce using rule 1 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)


state 40

    (10) valores -> valor COMA . valores
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (11) valor -> . valor operacion_binaria valor
    (40) valor -> . INT
    (41) valor -> . DOUBLE
    (42) valor -> . STRING
    (43) valor -> . ID

    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    valor                          shift and go to state 25
    valores                        shift and go to state 56

state 41

    (11) valor -> valor operacion_binaria . valor
    (11) valor -> . valor operacion_binaria valor
    (40) valor -> . INT
    (41) valor -> . DOUBLE
    (42) valor -> . STRING
    (43) valor -> . ID

    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    valor                          shift and go to state 57

state 42

    (29) operacion_binaria -> ADICION .

    INT             reduce using rule 29 (operacion_binaria -> ADICION .)
    DOUBLE          reduce using rule 29 (operacion_binaria -> ADICION .)
    STRING          reduce using rule 29 (operacion_binaria -> ADICION .)
    ID              reduce using rule 29 (operacion_binaria -> ADICION .)


state 43

    (30) operacion_binaria -> RESTA .

    INT             reduce using rule 30 (operacion_binaria -> RESTA .)
    DOUBLE          reduce using rule 30 (operacion_binaria -> RESTA .)
    STRING          reduce using rule 30 (operacion_binaria -> RESTA .)
    ID              reduce using rule 30 (operacion_binaria -> RESTA .)


state 44

    (31) operacion_binaria -> MULTIPLICACION .

    INT             reduce using rule 31 (operacion_binaria -> MULTIPLICACION .)
    DOUBLE          reduce using rule 31 (operacion_binaria -> MULTIPLICACION .)
    STRING          reduce using rule 31 (operacion_binaria -> MULTIPLICACION .)
    ID              reduce using rule 31 (operacion_binaria -> MULTIPLICACION .)


state 45

    (32) operacion_binaria -> DIVISION .

    INT             reduce using rule 32 (operacion_binaria -> DIVISION .)
    DOUBLE          reduce using rule 32 (operacion_binaria -> DIVISION .)
    STRING          reduce using rule 32 (operacion_binaria -> DIVISION .)
    ID              reduce using rule 32 (operacion_binaria -> DIVISION .)


state 46

    (33) operacion_binaria -> MODULO .

    INT             reduce using rule 33 (operacion_binaria -> MODULO .)
    DOUBLE          reduce using rule 33 (operacion_binaria -> MODULO .)
    STRING          reduce using rule 33 (operacion_binaria -> MODULO .)
    ID              reduce using rule 33 (operacion_binaria -> MODULO .)


state 47

    (34) operacion_binaria -> MENOR_IGUAL .

    INT             reduce using rule 34 (operacion_binaria -> MENOR_IGUAL .)
    DOUBLE          reduce using rule 34 (operacion_binaria -> MENOR_IGUAL .)
    STRING          reduce using rule 34 (operacion_binaria -> MENOR_IGUAL .)
    ID              reduce using rule 34 (operacion_binaria -> MENOR_IGUAL .)


state 48

    (35) operacion_binaria -> IGUAL .

    INT             reduce using rule 35 (operacion_binaria -> IGUAL .)
    DOUBLE          reduce using rule 35 (operacion_binaria -> IGUAL .)
    STRING          reduce using rule 35 (operacion_binaria -> IGUAL .)
    ID              reduce using rule 35 (operacion_binaria -> IGUAL .)


state 49

    (36) operacion_binaria -> DIFERENTE .

    INT             reduce using rule 36 (operacion_binaria -> DIFERENTE .)
    DOUBLE          reduce using rule 36 (operacion_binaria -> DIFERENTE .)
    STRING          reduce using rule 36 (operacion_binaria -> DIFERENTE .)
    ID              reduce using rule 36 (operacion_binaria -> DIFERENTE .)


state 50

    (37) operacion_binaria -> MAYOR .

    INT             reduce using rule 37 (operacion_binaria -> MAYOR .)
    DOUBLE          reduce using rule 37 (operacion_binaria -> MAYOR .)
    STRING          reduce using rule 37 (operacion_binaria -> MAYOR .)
    ID              reduce using rule 37 (operacion_binaria -> MAYOR .)


state 51

    (38) operacion_binaria -> MAYOR_IGUAL .

    INT             reduce using rule 38 (operacion_binaria -> MAYOR_IGUAL .)
    DOUBLE          reduce using rule 38 (operacion_binaria -> MAYOR_IGUAL .)
    STRING          reduce using rule 38 (operacion_binaria -> MAYOR_IGUAL .)
    ID              reduce using rule 38 (operacion_binaria -> MAYOR_IGUAL .)


state 52

    (39) operacion_binaria -> MENOR .

    INT             reduce using rule 39 (operacion_binaria -> MENOR .)
    DOUBLE          reduce using rule 39 (operacion_binaria -> MENOR .)
    STRING          reduce using rule 39 (operacion_binaria -> MENOR .)
    ID              reduce using rule 39 (operacion_binaria -> MENOR .)


state 53

    (2) instruccion -> VAR ID type ASIGNACION . valor
    (11) valor -> . valor operacion_binaria valor
    (40) valor -> . INT
    (41) valor -> . DOUBLE
    (42) valor -> . STRING
    (43) valor -> . ID

    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    valor                          shift and go to state 58

state 54

    (5) instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE . D_LLAVE
    (7) instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE . valores D_LLAVE
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (11) valor -> . valor operacion_binaria valor
    (40) valor -> . INT
    (41) valor -> . DOUBLE
    (42) valor -> . STRING
    (43) valor -> . ID

    D_LLAVE         shift and go to state 59
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    valores                        shift and go to state 60
    valor                          shift and go to state 25

state 55

    (6) instruccion -> I_CORCHETE INT D_CORCHETE type . I_LLAVE D_LLAVE
    (8) instruccion -> I_CORCHETE INT D_CORCHETE type . I_LLAVE valores D_LLAVE

    I_LLAVE         shift and go to state 61


state 56

    (10) valores -> valor COMA valores .

    D_PARENTESIS    reduce using rule 10 (valores -> valor COMA valores .)
    D_LLAVE         reduce using rule 10 (valores -> valor COMA valores .)


state 57

    (11) valor -> valor operacion_binaria valor .
    (11) valor -> valor . operacion_binaria valor
    (29) operacion_binaria -> . ADICION
    (30) operacion_binaria -> . RESTA
    (31) operacion_binaria -> . MULTIPLICACION
    (32) operacion_binaria -> . DIVISION
    (33) operacion_binaria -> . MODULO
    (34) operacion_binaria -> . MENOR_IGUAL
    (35) operacion_binaria -> . IGUAL
    (36) operacion_binaria -> . DIFERENTE
    (37) operacion_binaria -> . MAYOR
    (38) operacion_binaria -> . MAYOR_IGUAL
    (39) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    COMA            reduce using rule 11 (valor -> valor operacion_binaria valor .)
    D_PARENTESIS    reduce using rule 11 (valor -> valor operacion_binaria valor .)
    $end            reduce using rule 11 (valor -> valor operacion_binaria valor .)
    D_LLAVE         reduce using rule 11 (valor -> valor operacion_binaria valor .)
    ADICION         shift and go to state 42
    RESTA           shift and go to state 43
    MULTIPLICACION  shift and go to state 44
    DIVISION        shift and go to state 45
    MODULO          shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    IGUAL           shift and go to state 48
    DIFERENTE       shift and go to state 49
    MAYOR           shift and go to state 50
    MAYOR_IGUAL     shift and go to state 51
    MENOR           shift and go to state 52

  ! ADICION         [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! RESTA           [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! MULTIPLICACION  [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! DIVISION        [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! MODULO          [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! IGUAL           [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! DIFERENTE       [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR           [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]
  ! MENOR           [ reduce using rule 11 (valor -> valor operacion_binaria valor .) ]

    operacion_binaria              shift and go to state 41

state 58

    (2) instruccion -> VAR ID type ASIGNACION valor .
    (11) valor -> valor . operacion_binaria valor
    (29) operacion_binaria -> . ADICION
    (30) operacion_binaria -> . RESTA
    (31) operacion_binaria -> . MULTIPLICACION
    (32) operacion_binaria -> . DIVISION
    (33) operacion_binaria -> . MODULO
    (34) operacion_binaria -> . MENOR_IGUAL
    (35) operacion_binaria -> . IGUAL
    (36) operacion_binaria -> . DIFERENTE
    (37) operacion_binaria -> . MAYOR
    (38) operacion_binaria -> . MAYOR_IGUAL
    (39) operacion_binaria -> . MENOR

    $end            reduce using rule 2 (instruccion -> VAR ID type ASIGNACION valor .)
    ADICION         shift and go to state 42
    RESTA           shift and go to state 43
    MULTIPLICACION  shift and go to state 44
    DIVISION        shift and go to state 45
    MODULO          shift and go to state 46
    MENOR_IGUAL     shift and go to state 47
    IGUAL           shift and go to state 48
    DIFERENTE       shift and go to state 49
    MAYOR           shift and go to state 50
    MAYOR_IGUAL     shift and go to state 51
    MENOR           shift and go to state 52

    operacion_binaria              shift and go to state 41

state 59

    (5) instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE D_LLAVE .

    $end            reduce using rule 5 (instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE D_LLAVE .)


state 60

    (7) instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 62


state 61

    (6) instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE . D_LLAVE
    (8) instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE . valores D_LLAVE
    (9) valores -> . valor
    (10) valores -> . valor COMA valores
    (11) valor -> . valor operacion_binaria valor
    (40) valor -> . INT
    (41) valor -> . DOUBLE
    (42) valor -> . STRING
    (43) valor -> . ID

    D_LLAVE         shift and go to state 63
    INT             shift and go to state 26
    DOUBLE          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    valores                        shift and go to state 64
    valor                          shift and go to state 25

state 62

    (7) instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE valores D_LLAVE .

    $end            reduce using rule 7 (instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE valores D_LLAVE .)


state 63

    (6) instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE D_LLAVE .

    $end            reduce using rule 6 (instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE D_LLAVE .)


state 64

    (8) instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 65


state 65

    (8) instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE valores D_LLAVE .

    $end            reduce using rule 8 (instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE valores D_LLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADICION in state 57 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 57 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 57 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 57 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 57 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 57 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 57 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 57 resolved as shift
