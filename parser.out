Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BREAK
    CASE
    CHAN
    CONST
    CONTINUE
    DEFAULT
    DEFER
    FALLTHROUGH
    GO
    GOTO
    IDENTIFICADOR
    IMPORT
    INTERFACE
    NOT
    OR
    PACKAGE
    SELECT
    SWITCH

Grammar

Rule 0     S' -> go
Rule 1     go -> instruccion
Rule 2     go -> funcion go
Rule 3     go -> funcion
Rule 4     body -> instruccion
Rule 5     body -> I_LLAVE instruct_expression D_LLAVE
Rule 6     body -> I_LLAVE varias_instrucciones D_LLAVE
Rule 7     body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE
Rule 8     body -> I_LLAVE D_LLAVE
Rule 9     varias_instrucciones -> instruccion
Rule 10    varias_instrucciones -> instruccion varias_instrucciones
Rule 11    instruct_expression -> RETURN valor
Rule 12    instruct_expression -> RETURN resultado
Rule 13    instruccion -> llamada_func
Rule 14    instruccion -> resultado_inc_dec
Rule 15    instruccion -> expression
Rule 16    instruccion -> print I_PARENTESIS valores D_PARENTESIS
Rule 17    instruccion -> declaracion_comun
Rule 18    instruccion -> decla_header ASIGNACION instruccion
Rule 19    instruccion -> decla_header array_type_spec ASIGNACION instruccion
Rule 20    instruccion -> empty_struct
Rule 21    instruccion -> empty_array
Rule 22    instruccion -> ID asignacion valor
Rule 23    instruccion -> ID asignacion instruccion
Rule 24    declaracion_comun -> decla_header type ASIGNACION valor
Rule 25    declaracion_comun -> decla_header ASIGNACION valor
Rule 26    empty_struct -> decla_header ID
Rule 27    empty_array -> decla_header array_type_spec
Rule 28    decla_header -> VAR ID
Rule 29    funcion -> FUNC ID cuerpo_fun
Rule 30    funcion -> funcion_no_type
Rule 31    funcion_no_type -> FUNC ID parametros_sin_tipo body
Rule 32    cuerpo_fun -> parametrosMetodo body
Rule 33    parametrosMetodo -> parametrosMetodoInt
Rule 34    parametrosMetodo -> parametrosMetodoString
Rule 35    parametrosMetodo -> parametrosMetodoDouble
Rule 36    parametrosMetodo -> parametrosMetodoBool
Rule 37    parametrosMetodo -> parametros_sin_tipo
Rule 38    parametrosMetodoInt -> parametros_sin_tipo INTEGER
Rule 39    parametrosMetodoString -> parametros_sin_tipo STRINGTYPE
Rule 40    parametrosMetodoDouble -> parametros_sin_tipo floating_type
Rule 41    parametrosMetodoBool -> ID BOOL
Rule 42    parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS
Rule 43    parametros -> atributo
Rule 44    parametros -> atributo COMA parametros
Rule 45    parametros -> valores type
Rule 46    llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS
Rule 47    llamada_params -> expression
Rule 48    llamada_params -> expression COMA llamada_params
Rule 49    instruccion -> IF condicion I_LLAVE body D_LLAVE
Rule 50    instruccion -> ELSE I_LLAVE body D_LLAVE
Rule 51    instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE
Rule 52    instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
Rule 53    instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
Rule 54    instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
Rule 55    instruccion -> array_int
Rule 56    instruccion -> array_double
Rule 57    instruccion -> array_string
Rule 58    instruccion -> array_boolean
Rule 59    instruccion -> array_length_int
Rule 60    instruccion -> array_length_double
Rule 61    instruccion -> array_length_string
Rule 62    instruccion -> array_length_boolean
Rule 63    instruccion -> array_con_valores_int
Rule 64    instruccion -> array_con_valores_double
Rule 65    instruccion -> array_con_valores_string
Rule 66    instruccion -> array_con_valores_boolean
Rule 67    instruccion -> array_length_con_valores_int
Rule 68    instruccion -> array_length_con_valores_double
Rule 69    instruccion -> array_length_con_valores_string
Rule 70    instruccion -> array_length_con_valores_boolean
Rule 71    array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
Rule 72    array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
Rule 73    array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
Rule 74    array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
Rule 75    array_length_int -> array_length INTEGER I_LLAVE D_LLAVE
Rule 76    array_length_double -> array_length floating_type I_LLAVE D_LLAVE
Rule 77    array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE
Rule 78    array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE
Rule 79    array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
Rule 80    array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
Rule 81    array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
Rule 82    array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
Rule 83    array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE
Rule 84    array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE
Rule 85    array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
Rule 86    array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
Rule 87    instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
Rule 88    instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
Rule 89    instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
Rule 90    instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
Rule 91    atributos_struct -> atributo
Rule 92    atributos_struct -> atributo atributos_struct
Rule 93    atributo -> ID type
Rule 94    instruccion -> init_struct
Rule 95    init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
Rule 96    init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
Rule 97    init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
Rule 98    init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
Rule 99    atributos_nombrados -> declara_atributo
Rule 100   atributos_nombrados -> declara_atributo COMA atributos_nombrados
Rule 101   valor_struct -> ID PUNTO ID
Rule 102   declara_atributo -> ID DOS_PUNTOS expression
Rule 103   clave_valor -> valor DOS_PUNTOS valor
Rule 104   claves_valores -> clave_valor
Rule 105   claves_valores -> clave_valor COMA claves_valores
Rule 106   condicion -> valor
Rule 107   condicion -> I_PARENTESIS valor D_PARENTESIS
Rule 108   iteracion_for -> ID
Rule 109   expression -> valor
Rule 110   expression -> resultado
Rule 111   expression -> llamada_func
Rule 112   expression -> I_PARENTESIS resultado D_PARENTESIS
Rule 113   resultado -> expression operacion_binaria expression
Rule 114   resultado_inc_dec -> ID operador_matematico
Rule 115   resultado_inc_dec -> valor_struct operador_matematico
Rule 116   valores -> valor
Rule 117   valores -> valor COMA valores
Rule 118   valores_int -> valor_int
Rule 119   valores_int -> valor_int COMA valores_int
Rule 120   valores_double -> valor_double
Rule 121   valores_double -> valor_double COMA valores_double
Rule 122   valores_string -> valor_string
Rule 123   valores_string -> valor_string COMA valores_string
Rule 124   valores_boolean -> valor_boolean
Rule 125   valores_boolean -> valor_boolean COMA valores_boolean
Rule 126   valor -> valor operacion_binaria valor
Rule 127   print -> PRINTLN
Rule 128   print -> PRINTF
Rule 129   print -> PRINT
Rule 130   array_type_spec -> array_length INTEGER
Rule 131   array_type_spec -> array_length STRINGTYPE
Rule 132   array_type_spec -> array_length BOOLEAN
Rule 133   array_type_spec -> array_length floating_type
Rule 134   array_length -> I_CORCHETE INT D_CORCHETE
Rule 135   type -> BOOL
Rule 136   type -> STRINGTYPE
Rule 137   type -> INTEGER
Rule 138   type -> floating_type
Rule 139   floating_type -> FLOAT32
Rule 140   floating_type -> FLOAT64
Rule 141   operador_matematico -> INCREMENTO
Rule 142   operador_matematico -> DECREMENTO
Rule 143   asignacion -> ASIGNACION
Rule 144   asignacion -> ASIGNACION_ADICION
Rule 145   asignacion -> ASIGNACION_RESTA
Rule 146   asignacion -> ASIGNACION_MULTI
Rule 147   asignacion -> DECLARACION_ASIGNACION
Rule 148   asignacion -> ASIGNACION_DIVISION
Rule 149   asignacion -> ASIGNACION_MODULO
Rule 150   operacion_binaria -> ADICION
Rule 151   operacion_binaria -> RESTA
Rule 152   operacion_binaria -> MULTIPLICACION
Rule 153   operacion_binaria -> DIVISION
Rule 154   operacion_binaria -> MODULO
Rule 155   operacion_binaria -> MENOR_IGUAL
Rule 156   operacion_binaria -> IGUAL
Rule 157   operacion_binaria -> DIFERENTE
Rule 158   operacion_binaria -> MAYOR
Rule 159   operacion_binaria -> MAYOR_IGUAL
Rule 160   operacion_binaria -> MENOR
Rule 161   valor -> valor_int
Rule 162   valor -> valor_double
Rule 163   valor -> valor_string
Rule 164   valor -> valor_boolean
Rule 165   valor -> valor_variable
Rule 166   valor -> valor_struct
Rule 167   valor_int -> INT
Rule 168   valor_double -> DOUBLE
Rule 169   valor_string -> STRING
Rule 170   valor_boolean -> BOOLEAN
Rule 171   valor_variable -> ID

Terminals, with rules where they appear

ADICION              : 150
AND                  : 
ASIGNACION           : 18 19 24 25 95 97 143
ASIGNACION_ADICION   : 144
ASIGNACION_DIVISION  : 148
ASIGNACION_MODULO    : 149
ASIGNACION_MULTI     : 146
ASIGNACION_RESTA     : 145
BOOL                 : 41 135
BOOLEAN              : 74 78 82 86 132 170
BREAK                : 
CASE                 : 
CHAN                 : 
COMA                 : 44 48 54 100 105 117 119 121 123 125
CONST                : 
CONTINUE             : 
DECLARACION_ASIGNACION : 52 54 96 98 147
DECREMENTO           : 142
DEFAULT              : 
DEFER                : 
DIFERENTE            : 157
DIVISION             : 153
DOS_PUNTOS           : 102 103
DOUBLE               : 168
D_CORCHETE           : 71 72 73 74 79 80 81 82 87 88 89 134
D_LLAVE              : 5 6 7 8 49 50 51 52 53 54 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 89 90 95 96 97 98
D_PARENTESIS         : 16 42 46 88 107 112
ELSE                 : 50
ELSEIF               : 51
FALLTHROUGH          : 
FLOAT32              : 139
FLOAT64              : 140
FOR                  : 52 53 54
FUNC                 : 29 31
GO                   : 
GOTO                 : 
ID                   : 22 23 26 28 29 31 41 46 52 52 53 54 54 54 90 93 95 96 96 97 98 98 101 101 102 108 114 171
IDENTIFICADOR        : 
IF                   : 49
IGUAL                : 156
IMPORT               : 
INCREMENTO           : 141
INT                  : 134 167
INTEGER              : 38 71 75 79 83 130 137
INTERFACE            : 
I_CORCHETE           : 71 72 73 74 79 80 81 82 87 88 89 134
I_LLAVE              : 5 6 7 8 49 50 51 52 53 54 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 89 90 95 96 97 98
I_PARENTESIS         : 16 42 46 88 107 112
MAKE                 : 88
MAP                  : 87 88 89
MAYOR                : 158
MAYOR_IGUAL          : 159
MENOR                : 160
MENOR_IGUAL          : 155
MODULO               : 154
MULTIPLICACION       : 152
NOT                  : 
OR                   : 
PACKAGE              : 
PRINT                : 129
PRINTF               : 128
PRINTLN              : 127
PUNTO                : 101
PUNTO_COMA           : 53 53
RANGE                : 52 54
RESTA                : 151
RETURN               : 11 12
SELECT               : 
STRING               : 169
STRINGTYPE           : 39 73 77 81 85 131 136
STRUCT               : 90
SWITCH               : 
TYPE                 : 90
VAR                  : 28
error                : 

Nonterminals, with rules where they appear

array_boolean        : 58
array_con_valores_boolean : 66
array_con_valores_double : 64
array_con_valores_int : 63
array_con_valores_string : 65
array_double         : 56
array_int            : 55
array_length         : 75 76 77 78 83 84 85 86 130 131 132 133
array_length_boolean : 62
array_length_con_valores_boolean : 70
array_length_con_valores_double : 68
array_length_con_valores_int : 67
array_length_con_valores_string : 69
array_length_double  : 60
array_length_int     : 59
array_length_string  : 61
array_string         : 57
array_type_spec      : 19 27
asignacion           : 22 23
atributo             : 43 44 91 92
atributos_nombrados  : 97 98 100
atributos_struct     : 90 92
body                 : 31 32 49 50 51 52 53 54
clave_valor          : 104 105
claves_valores       : 89 105
condicion            : 49 51
cuerpo_fun           : 29
decla_header         : 18 19 24 25 26 27
declara_atributo     : 99 100
declaracion_comun    : 17
empty_array          : 21
empty_struct         : 20 95 97
expression           : 15 47 48 102 113 113
floating_type        : 40 72 76 80 84 133 138
funcion              : 2 3
funcion_no_type      : 30
go                   : 2 0
init_struct          : 94
instruccion          : 1 4 9 10 18 19 23 53
instruct_expression  : 5 7
iteracion_for        : 
llamada_func         : 13 111
llamada_params       : 46 48
operacion_binaria    : 113 126
operador_matematico  : 53 114 115
parametros           : 42 44
parametrosMetodo     : 32
parametrosMetodoBool : 36
parametrosMetodoDouble : 35
parametrosMetodoInt  : 33
parametrosMetodoString : 34
parametros_sin_tipo  : 31 37 38 39 40
print                : 16
resultado            : 12 110 112
resultado_inc_dec    : 14
type                 : 24 45 87 87 88 88 89 89 93
valor                : 11 22 24 25 53 103 103 106 107 109 116 117 126 126
valor_boolean        : 124 125 164
valor_double         : 120 121 162
valor_int            : 118 119 161
valor_string         : 122 123 163
valor_struct         : 115 166
valor_variable       : 165
valores              : 16 45 95 96 117
valores_boolean      : 82 86 125
valores_double       : 80 84 121
valores_int          : 79 83 119
valores_string       : 81 85 123
varias_instrucciones : 6 7 10

Parsing method: LALR

state 0

    (0) S' -> . go
    (1) go -> . instruccion
    (2) go -> . funcion go
    (3) go -> . funcion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (29) funcion -> . FUNC ID cuerpo_fun
    (30) funcion -> . funcion_no_type
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (31) funcion_no_type -> . FUNC ID parametros_sin_tipo body
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    FUNC            shift and go to state 40
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    go                             shift and go to state 1
    instruccion                    shift and go to state 2
    funcion                        shift and go to state 3
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    funcion_no_type                shift and go to state 41
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 1

    (0) S' -> go .



state 2

    (1) go -> instruccion .

    $end            reduce using rule 1 (go -> instruccion .)


state 3

    (2) go -> funcion . go
    (3) go -> funcion .
    (1) go -> . instruccion
    (2) go -> . funcion go
    (3) go -> . funcion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (29) funcion -> . FUNC ID cuerpo_fun
    (30) funcion -> . funcion_no_type
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (31) funcion_no_type -> . FUNC ID parametros_sin_tipo body
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    $end            reduce using rule 3 (go -> funcion .)
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    FUNC            shift and go to state 40
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    funcion                        shift and go to state 3
    go                             shift and go to state 58
    instruccion                    shift and go to state 2
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    funcion_no_type                shift and go to state 41
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 4

    (13) instruccion -> llamada_func .
    (111) expression -> llamada_func .

  ! reduce/reduce conflict for $end resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ID resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for IF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ELSE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for MAP resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for MAKE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for TYPE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINTF resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for VAR resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for INT resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for STRING resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (instruccion -> llamada_func .)
  ! reduce/reduce conflict for FUNC resolved using rule 13 (instruccion -> llamada_func .)
    $end            reduce using rule 13 (instruccion -> llamada_func .)
    PUNTO_COMA      reduce using rule 13 (instruccion -> llamada_func .)
    D_LLAVE         reduce using rule 13 (instruccion -> llamada_func .)
    ID              reduce using rule 13 (instruccion -> llamada_func .)
    IF              reduce using rule 13 (instruccion -> llamada_func .)
    ELSE            reduce using rule 13 (instruccion -> llamada_func .)
    ELSEIF          reduce using rule 13 (instruccion -> llamada_func .)
    FOR             reduce using rule 13 (instruccion -> llamada_func .)
    MAP             reduce using rule 13 (instruccion -> llamada_func .)
    MAKE            reduce using rule 13 (instruccion -> llamada_func .)
    TYPE            reduce using rule 13 (instruccion -> llamada_func .)
    I_PARENTESIS    reduce using rule 13 (instruccion -> llamada_func .)
    PRINTLN         reduce using rule 13 (instruccion -> llamada_func .)
    PRINTF          reduce using rule 13 (instruccion -> llamada_func .)
    PRINT           reduce using rule 13 (instruccion -> llamada_func .)
    VAR             reduce using rule 13 (instruccion -> llamada_func .)
    I_CORCHETE      reduce using rule 13 (instruccion -> llamada_func .)
    INT             reduce using rule 13 (instruccion -> llamada_func .)
    DOUBLE          reduce using rule 13 (instruccion -> llamada_func .)
    STRING          reduce using rule 13 (instruccion -> llamada_func .)
    BOOLEAN         reduce using rule 13 (instruccion -> llamada_func .)
    RETURN          reduce using rule 13 (instruccion -> llamada_func .)
    FUNC            reduce using rule 13 (instruccion -> llamada_func .)
    ADICION         reduce using rule 111 (expression -> llamada_func .)
    RESTA           reduce using rule 111 (expression -> llamada_func .)
    MULTIPLICACION  reduce using rule 111 (expression -> llamada_func .)
    DIVISION        reduce using rule 111 (expression -> llamada_func .)
    MODULO          reduce using rule 111 (expression -> llamada_func .)
    MENOR_IGUAL     reduce using rule 111 (expression -> llamada_func .)
    IGUAL           reduce using rule 111 (expression -> llamada_func .)
    DIFERENTE       reduce using rule 111 (expression -> llamada_func .)
    MAYOR           reduce using rule 111 (expression -> llamada_func .)
    MAYOR_IGUAL     reduce using rule 111 (expression -> llamada_func .)
    MENOR           reduce using rule 111 (expression -> llamada_func .)

  ! $end            [ reduce using rule 111 (expression -> llamada_func .) ]
  ! PUNTO_COMA      [ reduce using rule 111 (expression -> llamada_func .) ]
  ! D_LLAVE         [ reduce using rule 111 (expression -> llamada_func .) ]
  ! ID              [ reduce using rule 111 (expression -> llamada_func .) ]
  ! IF              [ reduce using rule 111 (expression -> llamada_func .) ]
  ! ELSE            [ reduce using rule 111 (expression -> llamada_func .) ]
  ! ELSEIF          [ reduce using rule 111 (expression -> llamada_func .) ]
  ! FOR             [ reduce using rule 111 (expression -> llamada_func .) ]
  ! MAP             [ reduce using rule 111 (expression -> llamada_func .) ]
  ! MAKE            [ reduce using rule 111 (expression -> llamada_func .) ]
  ! TYPE            [ reduce using rule 111 (expression -> llamada_func .) ]
  ! I_PARENTESIS    [ reduce using rule 111 (expression -> llamada_func .) ]
  ! PRINTLN         [ reduce using rule 111 (expression -> llamada_func .) ]
  ! PRINTF          [ reduce using rule 111 (expression -> llamada_func .) ]
  ! PRINT           [ reduce using rule 111 (expression -> llamada_func .) ]
  ! VAR             [ reduce using rule 111 (expression -> llamada_func .) ]
  ! I_CORCHETE      [ reduce using rule 111 (expression -> llamada_func .) ]
  ! INT             [ reduce using rule 111 (expression -> llamada_func .) ]
  ! DOUBLE          [ reduce using rule 111 (expression -> llamada_func .) ]
  ! STRING          [ reduce using rule 111 (expression -> llamada_func .) ]
  ! BOOLEAN         [ reduce using rule 111 (expression -> llamada_func .) ]
  ! RETURN          [ reduce using rule 111 (expression -> llamada_func .) ]
  ! FUNC            [ reduce using rule 111 (expression -> llamada_func .) ]


state 5

    (14) instruccion -> resultado_inc_dec .

    $end            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PUNTO_COMA      reduce using rule 14 (instruccion -> resultado_inc_dec .)
    D_LLAVE         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ID              reduce using rule 14 (instruccion -> resultado_inc_dec .)
    IF              reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ELSE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    ELSEIF          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    FOR             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    MAP             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    MAKE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    TYPE            reduce using rule 14 (instruccion -> resultado_inc_dec .)
    I_PARENTESIS    reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINTLN         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINTF          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    PRINT           reduce using rule 14 (instruccion -> resultado_inc_dec .)
    VAR             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    I_CORCHETE      reduce using rule 14 (instruccion -> resultado_inc_dec .)
    INT             reduce using rule 14 (instruccion -> resultado_inc_dec .)
    DOUBLE          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    STRING          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    BOOLEAN         reduce using rule 14 (instruccion -> resultado_inc_dec .)
    RETURN          reduce using rule 14 (instruccion -> resultado_inc_dec .)
    FUNC            reduce using rule 14 (instruccion -> resultado_inc_dec .)


state 6

    (15) instruccion -> expression .
    (113) resultado -> expression . operacion_binaria expression
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    $end            reduce using rule 15 (instruccion -> expression .)
    PUNTO_COMA      reduce using rule 15 (instruccion -> expression .)
    D_LLAVE         reduce using rule 15 (instruccion -> expression .)
    ID              reduce using rule 15 (instruccion -> expression .)
    IF              reduce using rule 15 (instruccion -> expression .)
    ELSE            reduce using rule 15 (instruccion -> expression .)
    ELSEIF          reduce using rule 15 (instruccion -> expression .)
    FOR             reduce using rule 15 (instruccion -> expression .)
    MAP             reduce using rule 15 (instruccion -> expression .)
    MAKE            reduce using rule 15 (instruccion -> expression .)
    TYPE            reduce using rule 15 (instruccion -> expression .)
    I_PARENTESIS    reduce using rule 15 (instruccion -> expression .)
    PRINTLN         reduce using rule 15 (instruccion -> expression .)
    PRINTF          reduce using rule 15 (instruccion -> expression .)
    PRINT           reduce using rule 15 (instruccion -> expression .)
    VAR             reduce using rule 15 (instruccion -> expression .)
    I_CORCHETE      reduce using rule 15 (instruccion -> expression .)
    INT             reduce using rule 15 (instruccion -> expression .)
    DOUBLE          reduce using rule 15 (instruccion -> expression .)
    STRING          reduce using rule 15 (instruccion -> expression .)
    BOOLEAN         reduce using rule 15 (instruccion -> expression .)
    RETURN          reduce using rule 15 (instruccion -> expression .)
    FUNC            reduce using rule 15 (instruccion -> expression .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 59

state 7

    (16) instruccion -> print . I_PARENTESIS valores D_PARENTESIS

    I_PARENTESIS    shift and go to state 71


state 8

    (112) expression -> I_PARENTESIS . resultado D_PARENTESIS
    (113) resultado -> . expression operacion_binaria expression
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 76
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    resultado                      shift and go to state 72
    expression                     shift and go to state 73
    valor                          shift and go to state 14
    llamada_func                   shift and go to state 74
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 9

    (17) instruccion -> declaracion_comun .

    $end            reduce using rule 17 (instruccion -> declaracion_comun .)
    PUNTO_COMA      reduce using rule 17 (instruccion -> declaracion_comun .)
    D_LLAVE         reduce using rule 17 (instruccion -> declaracion_comun .)
    ID              reduce using rule 17 (instruccion -> declaracion_comun .)
    IF              reduce using rule 17 (instruccion -> declaracion_comun .)
    ELSE            reduce using rule 17 (instruccion -> declaracion_comun .)
    ELSEIF          reduce using rule 17 (instruccion -> declaracion_comun .)
    FOR             reduce using rule 17 (instruccion -> declaracion_comun .)
    MAP             reduce using rule 17 (instruccion -> declaracion_comun .)
    MAKE            reduce using rule 17 (instruccion -> declaracion_comun .)
    TYPE            reduce using rule 17 (instruccion -> declaracion_comun .)
    I_PARENTESIS    reduce using rule 17 (instruccion -> declaracion_comun .)
    PRINTLN         reduce using rule 17 (instruccion -> declaracion_comun .)
    PRINTF          reduce using rule 17 (instruccion -> declaracion_comun .)
    PRINT           reduce using rule 17 (instruccion -> declaracion_comun .)
    VAR             reduce using rule 17 (instruccion -> declaracion_comun .)
    I_CORCHETE      reduce using rule 17 (instruccion -> declaracion_comun .)
    INT             reduce using rule 17 (instruccion -> declaracion_comun .)
    DOUBLE          reduce using rule 17 (instruccion -> declaracion_comun .)
    STRING          reduce using rule 17 (instruccion -> declaracion_comun .)
    BOOLEAN         reduce using rule 17 (instruccion -> declaracion_comun .)
    RETURN          reduce using rule 17 (instruccion -> declaracion_comun .)
    FUNC            reduce using rule 17 (instruccion -> declaracion_comun .)


state 10

    (18) instruccion -> decla_header . ASIGNACION instruccion
    (19) instruccion -> decla_header . array_type_spec ASIGNACION instruccion
    (24) declaracion_comun -> decla_header . type ASIGNACION valor
    (25) declaracion_comun -> decla_header . ASIGNACION valor
    (26) empty_struct -> decla_header . ID
    (27) empty_array -> decla_header . array_type_spec
    (130) array_type_spec -> . array_length INTEGER
    (131) array_type_spec -> . array_length STRINGTYPE
    (132) array_type_spec -> . array_length BOOLEAN
    (133) array_type_spec -> . array_length floating_type
    (135) type -> . BOOL
    (136) type -> . STRINGTYPE
    (137) type -> . INTEGER
    (138) type -> . floating_type
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    ASIGNACION      shift and go to state 77
    ID              shift and go to state 80
    BOOL            shift and go to state 85
    STRINGTYPE      shift and go to state 83
    INTEGER         shift and go to state 82
    I_CORCHETE      shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    array_type_spec                shift and go to state 78
    type                           shift and go to state 79
    array_length                   shift and go to state 81
    floating_type                  shift and go to state 84

state 11

    (20) instruccion -> empty_struct .
    (95) init_struct -> empty_struct . ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> empty_struct . ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE

    $end            reduce using rule 20 (instruccion -> empty_struct .)
    PUNTO_COMA      reduce using rule 20 (instruccion -> empty_struct .)
    D_LLAVE         reduce using rule 20 (instruccion -> empty_struct .)
    ID              reduce using rule 20 (instruccion -> empty_struct .)
    IF              reduce using rule 20 (instruccion -> empty_struct .)
    ELSE            reduce using rule 20 (instruccion -> empty_struct .)
    ELSEIF          reduce using rule 20 (instruccion -> empty_struct .)
    FOR             reduce using rule 20 (instruccion -> empty_struct .)
    MAP             reduce using rule 20 (instruccion -> empty_struct .)
    MAKE            reduce using rule 20 (instruccion -> empty_struct .)
    TYPE            reduce using rule 20 (instruccion -> empty_struct .)
    I_PARENTESIS    reduce using rule 20 (instruccion -> empty_struct .)
    PRINTLN         reduce using rule 20 (instruccion -> empty_struct .)
    PRINTF          reduce using rule 20 (instruccion -> empty_struct .)
    PRINT           reduce using rule 20 (instruccion -> empty_struct .)
    VAR             reduce using rule 20 (instruccion -> empty_struct .)
    I_CORCHETE      reduce using rule 20 (instruccion -> empty_struct .)
    INT             reduce using rule 20 (instruccion -> empty_struct .)
    DOUBLE          reduce using rule 20 (instruccion -> empty_struct .)
    STRING          reduce using rule 20 (instruccion -> empty_struct .)
    BOOLEAN         reduce using rule 20 (instruccion -> empty_struct .)
    RETURN          reduce using rule 20 (instruccion -> empty_struct .)
    FUNC            reduce using rule 20 (instruccion -> empty_struct .)
    ASIGNACION      shift and go to state 89


state 12

    (21) instruccion -> empty_array .

    $end            reduce using rule 21 (instruccion -> empty_array .)
    PUNTO_COMA      reduce using rule 21 (instruccion -> empty_array .)
    D_LLAVE         reduce using rule 21 (instruccion -> empty_array .)
    ID              reduce using rule 21 (instruccion -> empty_array .)
    IF              reduce using rule 21 (instruccion -> empty_array .)
    ELSE            reduce using rule 21 (instruccion -> empty_array .)
    ELSEIF          reduce using rule 21 (instruccion -> empty_array .)
    FOR             reduce using rule 21 (instruccion -> empty_array .)
    MAP             reduce using rule 21 (instruccion -> empty_array .)
    MAKE            reduce using rule 21 (instruccion -> empty_array .)
    TYPE            reduce using rule 21 (instruccion -> empty_array .)
    I_PARENTESIS    reduce using rule 21 (instruccion -> empty_array .)
    PRINTLN         reduce using rule 21 (instruccion -> empty_array .)
    PRINTF          reduce using rule 21 (instruccion -> empty_array .)
    PRINT           reduce using rule 21 (instruccion -> empty_array .)
    VAR             reduce using rule 21 (instruccion -> empty_array .)
    I_CORCHETE      reduce using rule 21 (instruccion -> empty_array .)
    INT             reduce using rule 21 (instruccion -> empty_array .)
    DOUBLE          reduce using rule 21 (instruccion -> empty_array .)
    STRING          reduce using rule 21 (instruccion -> empty_array .)
    BOOLEAN         reduce using rule 21 (instruccion -> empty_array .)
    RETURN          reduce using rule 21 (instruccion -> empty_array .)
    FUNC            reduce using rule 21 (instruccion -> empty_array .)


state 13

    (22) instruccion -> ID . asignacion valor
    (23) instruccion -> ID . asignacion instruccion
    (46) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> ID . operador_matematico
    (96) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (98) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> ID . PUNTO ID
    (171) valor_variable -> ID .
    (143) asignacion -> . ASIGNACION
    (144) asignacion -> . ASIGNACION_ADICION
    (145) asignacion -> . ASIGNACION_RESTA
    (146) asignacion -> . ASIGNACION_MULTI
    (147) asignacion -> . DECLARACION_ASIGNACION
    (148) asignacion -> . ASIGNACION_DIVISION
    (149) asignacion -> . ASIGNACION_MODULO
    (141) operador_matematico -> . INCREMENTO
    (142) operador_matematico -> . DECREMENTO

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    I_PARENTESIS    shift and go to state 91
    DECLARACION_ASIGNACION shift and go to state 93
    PUNTO           shift and go to state 94
    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    $end            reduce using rule 171 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 171 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 171 (valor_variable -> ID .)
    ID              reduce using rule 171 (valor_variable -> ID .)
    IF              reduce using rule 171 (valor_variable -> ID .)
    ELSE            reduce using rule 171 (valor_variable -> ID .)
    ELSEIF          reduce using rule 171 (valor_variable -> ID .)
    FOR             reduce using rule 171 (valor_variable -> ID .)
    MAP             reduce using rule 171 (valor_variable -> ID .)
    MAKE            reduce using rule 171 (valor_variable -> ID .)
    TYPE            reduce using rule 171 (valor_variable -> ID .)
    PRINTLN         reduce using rule 171 (valor_variable -> ID .)
    PRINTF          reduce using rule 171 (valor_variable -> ID .)
    PRINT           reduce using rule 171 (valor_variable -> ID .)
    VAR             reduce using rule 171 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 171 (valor_variable -> ID .)
    INT             reduce using rule 171 (valor_variable -> ID .)
    DOUBLE          reduce using rule 171 (valor_variable -> ID .)
    STRING          reduce using rule 171 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 171 (valor_variable -> ID .)
    RETURN          reduce using rule 171 (valor_variable -> ID .)
    FUNC            reduce using rule 171 (valor_variable -> ID .)
    ASIGNACION      shift and go to state 95
    ASIGNACION_ADICION shift and go to state 96
    ASIGNACION_RESTA shift and go to state 97
    ASIGNACION_MULTI shift and go to state 98
    ASIGNACION_DIVISION shift and go to state 99
    ASIGNACION_MODULO shift and go to state 100
    INCREMENTO      shift and go to state 101
    DECREMENTO      shift and go to state 102

  ! I_PARENTESIS    [ reduce using rule 171 (valor_variable -> ID .) ]

    asignacion                     shift and go to state 90
    operador_matematico            shift and go to state 92

state 14

    (109) expression -> valor .
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 109 (expression -> valor .)
    PUNTO_COMA      reduce using rule 109 (expression -> valor .)
    D_PARENTESIS    reduce using rule 109 (expression -> valor .)
    D_LLAVE         reduce using rule 109 (expression -> valor .)
    ID              reduce using rule 109 (expression -> valor .)
    IF              reduce using rule 109 (expression -> valor .)
    ELSE            reduce using rule 109 (expression -> valor .)
    ELSEIF          reduce using rule 109 (expression -> valor .)
    FOR             reduce using rule 109 (expression -> valor .)
    MAP             reduce using rule 109 (expression -> valor .)
    MAKE            reduce using rule 109 (expression -> valor .)
    TYPE            reduce using rule 109 (expression -> valor .)
    I_PARENTESIS    reduce using rule 109 (expression -> valor .)
    PRINTLN         reduce using rule 109 (expression -> valor .)
    PRINTF          reduce using rule 109 (expression -> valor .)
    PRINT           reduce using rule 109 (expression -> valor .)
    VAR             reduce using rule 109 (expression -> valor .)
    I_CORCHETE      reduce using rule 109 (expression -> valor .)
    INT             reduce using rule 109 (expression -> valor .)
    DOUBLE          reduce using rule 109 (expression -> valor .)
    STRING          reduce using rule 109 (expression -> valor .)
    BOOLEAN         reduce using rule 109 (expression -> valor .)
    RETURN          reduce using rule 109 (expression -> valor .)
    FUNC            reduce using rule 109 (expression -> valor .)
    COMA            reduce using rule 109 (expression -> valor .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

  ! ADICION         [ reduce using rule 109 (expression -> valor .) ]
  ! RESTA           [ reduce using rule 109 (expression -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 109 (expression -> valor .) ]
  ! DIVISION        [ reduce using rule 109 (expression -> valor .) ]
  ! MODULO          [ reduce using rule 109 (expression -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 109 (expression -> valor .) ]
  ! IGUAL           [ reduce using rule 109 (expression -> valor .) ]
  ! DIFERENTE       [ reduce using rule 109 (expression -> valor .) ]
  ! MAYOR           [ reduce using rule 109 (expression -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 109 (expression -> valor .) ]
  ! MENOR           [ reduce using rule 109 (expression -> valor .) ]

    operacion_binaria              shift and go to state 103

state 15

    (49) instruccion -> IF . condicion I_LLAVE body D_LLAVE
    (106) condicion -> . valor
    (107) condicion -> . I_PARENTESIS valor D_PARENTESIS
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 106
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    condicion                      shift and go to state 104
    valor                          shift and go to state 105
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 16

    (50) instruccion -> ELSE . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 108


state 17

    (51) instruccion -> ELSEIF . condicion I_LLAVE body D_LLAVE
    (106) condicion -> . valor
    (107) condicion -> . I_PARENTESIS valor D_PARENTESIS
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 106
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    condicion                      shift and go to state 109
    valor                          shift and go to state 105
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 18

    (52) instruccion -> FOR . ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> FOR . instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> FOR . ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    ID              shift and go to state 110
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    instruccion                    shift and go to state 111
    valor                          shift and go to state 14
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 19

    (55) instruccion -> array_int .

    $end            reduce using rule 55 (instruccion -> array_int .)
    PUNTO_COMA      reduce using rule 55 (instruccion -> array_int .)
    D_LLAVE         reduce using rule 55 (instruccion -> array_int .)
    ID              reduce using rule 55 (instruccion -> array_int .)
    IF              reduce using rule 55 (instruccion -> array_int .)
    ELSE            reduce using rule 55 (instruccion -> array_int .)
    ELSEIF          reduce using rule 55 (instruccion -> array_int .)
    FOR             reduce using rule 55 (instruccion -> array_int .)
    MAP             reduce using rule 55 (instruccion -> array_int .)
    MAKE            reduce using rule 55 (instruccion -> array_int .)
    TYPE            reduce using rule 55 (instruccion -> array_int .)
    I_PARENTESIS    reduce using rule 55 (instruccion -> array_int .)
    PRINTLN         reduce using rule 55 (instruccion -> array_int .)
    PRINTF          reduce using rule 55 (instruccion -> array_int .)
    PRINT           reduce using rule 55 (instruccion -> array_int .)
    VAR             reduce using rule 55 (instruccion -> array_int .)
    I_CORCHETE      reduce using rule 55 (instruccion -> array_int .)
    INT             reduce using rule 55 (instruccion -> array_int .)
    DOUBLE          reduce using rule 55 (instruccion -> array_int .)
    STRING          reduce using rule 55 (instruccion -> array_int .)
    BOOLEAN         reduce using rule 55 (instruccion -> array_int .)
    RETURN          reduce using rule 55 (instruccion -> array_int .)
    FUNC            reduce using rule 55 (instruccion -> array_int .)


state 20

    (56) instruccion -> array_double .

    $end            reduce using rule 56 (instruccion -> array_double .)
    PUNTO_COMA      reduce using rule 56 (instruccion -> array_double .)
    D_LLAVE         reduce using rule 56 (instruccion -> array_double .)
    ID              reduce using rule 56 (instruccion -> array_double .)
    IF              reduce using rule 56 (instruccion -> array_double .)
    ELSE            reduce using rule 56 (instruccion -> array_double .)
    ELSEIF          reduce using rule 56 (instruccion -> array_double .)
    FOR             reduce using rule 56 (instruccion -> array_double .)
    MAP             reduce using rule 56 (instruccion -> array_double .)
    MAKE            reduce using rule 56 (instruccion -> array_double .)
    TYPE            reduce using rule 56 (instruccion -> array_double .)
    I_PARENTESIS    reduce using rule 56 (instruccion -> array_double .)
    PRINTLN         reduce using rule 56 (instruccion -> array_double .)
    PRINTF          reduce using rule 56 (instruccion -> array_double .)
    PRINT           reduce using rule 56 (instruccion -> array_double .)
    VAR             reduce using rule 56 (instruccion -> array_double .)
    I_CORCHETE      reduce using rule 56 (instruccion -> array_double .)
    INT             reduce using rule 56 (instruccion -> array_double .)
    DOUBLE          reduce using rule 56 (instruccion -> array_double .)
    STRING          reduce using rule 56 (instruccion -> array_double .)
    BOOLEAN         reduce using rule 56 (instruccion -> array_double .)
    RETURN          reduce using rule 56 (instruccion -> array_double .)
    FUNC            reduce using rule 56 (instruccion -> array_double .)


state 21

    (57) instruccion -> array_string .

    $end            reduce using rule 57 (instruccion -> array_string .)
    PUNTO_COMA      reduce using rule 57 (instruccion -> array_string .)
    D_LLAVE         reduce using rule 57 (instruccion -> array_string .)
    ID              reduce using rule 57 (instruccion -> array_string .)
    IF              reduce using rule 57 (instruccion -> array_string .)
    ELSE            reduce using rule 57 (instruccion -> array_string .)
    ELSEIF          reduce using rule 57 (instruccion -> array_string .)
    FOR             reduce using rule 57 (instruccion -> array_string .)
    MAP             reduce using rule 57 (instruccion -> array_string .)
    MAKE            reduce using rule 57 (instruccion -> array_string .)
    TYPE            reduce using rule 57 (instruccion -> array_string .)
    I_PARENTESIS    reduce using rule 57 (instruccion -> array_string .)
    PRINTLN         reduce using rule 57 (instruccion -> array_string .)
    PRINTF          reduce using rule 57 (instruccion -> array_string .)
    PRINT           reduce using rule 57 (instruccion -> array_string .)
    VAR             reduce using rule 57 (instruccion -> array_string .)
    I_CORCHETE      reduce using rule 57 (instruccion -> array_string .)
    INT             reduce using rule 57 (instruccion -> array_string .)
    DOUBLE          reduce using rule 57 (instruccion -> array_string .)
    STRING          reduce using rule 57 (instruccion -> array_string .)
    BOOLEAN         reduce using rule 57 (instruccion -> array_string .)
    RETURN          reduce using rule 57 (instruccion -> array_string .)
    FUNC            reduce using rule 57 (instruccion -> array_string .)


state 22

    (58) instruccion -> array_boolean .

    $end            reduce using rule 58 (instruccion -> array_boolean .)
    PUNTO_COMA      reduce using rule 58 (instruccion -> array_boolean .)
    D_LLAVE         reduce using rule 58 (instruccion -> array_boolean .)
    ID              reduce using rule 58 (instruccion -> array_boolean .)
    IF              reduce using rule 58 (instruccion -> array_boolean .)
    ELSE            reduce using rule 58 (instruccion -> array_boolean .)
    ELSEIF          reduce using rule 58 (instruccion -> array_boolean .)
    FOR             reduce using rule 58 (instruccion -> array_boolean .)
    MAP             reduce using rule 58 (instruccion -> array_boolean .)
    MAKE            reduce using rule 58 (instruccion -> array_boolean .)
    TYPE            reduce using rule 58 (instruccion -> array_boolean .)
    I_PARENTESIS    reduce using rule 58 (instruccion -> array_boolean .)
    PRINTLN         reduce using rule 58 (instruccion -> array_boolean .)
    PRINTF          reduce using rule 58 (instruccion -> array_boolean .)
    PRINT           reduce using rule 58 (instruccion -> array_boolean .)
    VAR             reduce using rule 58 (instruccion -> array_boolean .)
    I_CORCHETE      reduce using rule 58 (instruccion -> array_boolean .)
    INT             reduce using rule 58 (instruccion -> array_boolean .)
    DOUBLE          reduce using rule 58 (instruccion -> array_boolean .)
    STRING          reduce using rule 58 (instruccion -> array_boolean .)
    BOOLEAN         reduce using rule 58 (instruccion -> array_boolean .)
    RETURN          reduce using rule 58 (instruccion -> array_boolean .)
    FUNC            reduce using rule 58 (instruccion -> array_boolean .)


state 23

    (59) instruccion -> array_length_int .

    $end            reduce using rule 59 (instruccion -> array_length_int .)
    PUNTO_COMA      reduce using rule 59 (instruccion -> array_length_int .)
    D_LLAVE         reduce using rule 59 (instruccion -> array_length_int .)
    ID              reduce using rule 59 (instruccion -> array_length_int .)
    IF              reduce using rule 59 (instruccion -> array_length_int .)
    ELSE            reduce using rule 59 (instruccion -> array_length_int .)
    ELSEIF          reduce using rule 59 (instruccion -> array_length_int .)
    FOR             reduce using rule 59 (instruccion -> array_length_int .)
    MAP             reduce using rule 59 (instruccion -> array_length_int .)
    MAKE            reduce using rule 59 (instruccion -> array_length_int .)
    TYPE            reduce using rule 59 (instruccion -> array_length_int .)
    I_PARENTESIS    reduce using rule 59 (instruccion -> array_length_int .)
    PRINTLN         reduce using rule 59 (instruccion -> array_length_int .)
    PRINTF          reduce using rule 59 (instruccion -> array_length_int .)
    PRINT           reduce using rule 59 (instruccion -> array_length_int .)
    VAR             reduce using rule 59 (instruccion -> array_length_int .)
    I_CORCHETE      reduce using rule 59 (instruccion -> array_length_int .)
    INT             reduce using rule 59 (instruccion -> array_length_int .)
    DOUBLE          reduce using rule 59 (instruccion -> array_length_int .)
    STRING          reduce using rule 59 (instruccion -> array_length_int .)
    BOOLEAN         reduce using rule 59 (instruccion -> array_length_int .)
    RETURN          reduce using rule 59 (instruccion -> array_length_int .)
    FUNC            reduce using rule 59 (instruccion -> array_length_int .)


state 24

    (60) instruccion -> array_length_double .

    $end            reduce using rule 60 (instruccion -> array_length_double .)
    PUNTO_COMA      reduce using rule 60 (instruccion -> array_length_double .)
    D_LLAVE         reduce using rule 60 (instruccion -> array_length_double .)
    ID              reduce using rule 60 (instruccion -> array_length_double .)
    IF              reduce using rule 60 (instruccion -> array_length_double .)
    ELSE            reduce using rule 60 (instruccion -> array_length_double .)
    ELSEIF          reduce using rule 60 (instruccion -> array_length_double .)
    FOR             reduce using rule 60 (instruccion -> array_length_double .)
    MAP             reduce using rule 60 (instruccion -> array_length_double .)
    MAKE            reduce using rule 60 (instruccion -> array_length_double .)
    TYPE            reduce using rule 60 (instruccion -> array_length_double .)
    I_PARENTESIS    reduce using rule 60 (instruccion -> array_length_double .)
    PRINTLN         reduce using rule 60 (instruccion -> array_length_double .)
    PRINTF          reduce using rule 60 (instruccion -> array_length_double .)
    PRINT           reduce using rule 60 (instruccion -> array_length_double .)
    VAR             reduce using rule 60 (instruccion -> array_length_double .)
    I_CORCHETE      reduce using rule 60 (instruccion -> array_length_double .)
    INT             reduce using rule 60 (instruccion -> array_length_double .)
    DOUBLE          reduce using rule 60 (instruccion -> array_length_double .)
    STRING          reduce using rule 60 (instruccion -> array_length_double .)
    BOOLEAN         reduce using rule 60 (instruccion -> array_length_double .)
    RETURN          reduce using rule 60 (instruccion -> array_length_double .)
    FUNC            reduce using rule 60 (instruccion -> array_length_double .)


state 25

    (61) instruccion -> array_length_string .

    $end            reduce using rule 61 (instruccion -> array_length_string .)
    PUNTO_COMA      reduce using rule 61 (instruccion -> array_length_string .)
    D_LLAVE         reduce using rule 61 (instruccion -> array_length_string .)
    ID              reduce using rule 61 (instruccion -> array_length_string .)
    IF              reduce using rule 61 (instruccion -> array_length_string .)
    ELSE            reduce using rule 61 (instruccion -> array_length_string .)
    ELSEIF          reduce using rule 61 (instruccion -> array_length_string .)
    FOR             reduce using rule 61 (instruccion -> array_length_string .)
    MAP             reduce using rule 61 (instruccion -> array_length_string .)
    MAKE            reduce using rule 61 (instruccion -> array_length_string .)
    TYPE            reduce using rule 61 (instruccion -> array_length_string .)
    I_PARENTESIS    reduce using rule 61 (instruccion -> array_length_string .)
    PRINTLN         reduce using rule 61 (instruccion -> array_length_string .)
    PRINTF          reduce using rule 61 (instruccion -> array_length_string .)
    PRINT           reduce using rule 61 (instruccion -> array_length_string .)
    VAR             reduce using rule 61 (instruccion -> array_length_string .)
    I_CORCHETE      reduce using rule 61 (instruccion -> array_length_string .)
    INT             reduce using rule 61 (instruccion -> array_length_string .)
    DOUBLE          reduce using rule 61 (instruccion -> array_length_string .)
    STRING          reduce using rule 61 (instruccion -> array_length_string .)
    BOOLEAN         reduce using rule 61 (instruccion -> array_length_string .)
    RETURN          reduce using rule 61 (instruccion -> array_length_string .)
    FUNC            reduce using rule 61 (instruccion -> array_length_string .)


state 26

    (62) instruccion -> array_length_boolean .

    $end            reduce using rule 62 (instruccion -> array_length_boolean .)
    PUNTO_COMA      reduce using rule 62 (instruccion -> array_length_boolean .)
    D_LLAVE         reduce using rule 62 (instruccion -> array_length_boolean .)
    ID              reduce using rule 62 (instruccion -> array_length_boolean .)
    IF              reduce using rule 62 (instruccion -> array_length_boolean .)
    ELSE            reduce using rule 62 (instruccion -> array_length_boolean .)
    ELSEIF          reduce using rule 62 (instruccion -> array_length_boolean .)
    FOR             reduce using rule 62 (instruccion -> array_length_boolean .)
    MAP             reduce using rule 62 (instruccion -> array_length_boolean .)
    MAKE            reduce using rule 62 (instruccion -> array_length_boolean .)
    TYPE            reduce using rule 62 (instruccion -> array_length_boolean .)
    I_PARENTESIS    reduce using rule 62 (instruccion -> array_length_boolean .)
    PRINTLN         reduce using rule 62 (instruccion -> array_length_boolean .)
    PRINTF          reduce using rule 62 (instruccion -> array_length_boolean .)
    PRINT           reduce using rule 62 (instruccion -> array_length_boolean .)
    VAR             reduce using rule 62 (instruccion -> array_length_boolean .)
    I_CORCHETE      reduce using rule 62 (instruccion -> array_length_boolean .)
    INT             reduce using rule 62 (instruccion -> array_length_boolean .)
    DOUBLE          reduce using rule 62 (instruccion -> array_length_boolean .)
    STRING          reduce using rule 62 (instruccion -> array_length_boolean .)
    BOOLEAN         reduce using rule 62 (instruccion -> array_length_boolean .)
    RETURN          reduce using rule 62 (instruccion -> array_length_boolean .)
    FUNC            reduce using rule 62 (instruccion -> array_length_boolean .)


state 27

    (63) instruccion -> array_con_valores_int .

    $end            reduce using rule 63 (instruccion -> array_con_valores_int .)
    PUNTO_COMA      reduce using rule 63 (instruccion -> array_con_valores_int .)
    D_LLAVE         reduce using rule 63 (instruccion -> array_con_valores_int .)
    ID              reduce using rule 63 (instruccion -> array_con_valores_int .)
    IF              reduce using rule 63 (instruccion -> array_con_valores_int .)
    ELSE            reduce using rule 63 (instruccion -> array_con_valores_int .)
    ELSEIF          reduce using rule 63 (instruccion -> array_con_valores_int .)
    FOR             reduce using rule 63 (instruccion -> array_con_valores_int .)
    MAP             reduce using rule 63 (instruccion -> array_con_valores_int .)
    MAKE            reduce using rule 63 (instruccion -> array_con_valores_int .)
    TYPE            reduce using rule 63 (instruccion -> array_con_valores_int .)
    I_PARENTESIS    reduce using rule 63 (instruccion -> array_con_valores_int .)
    PRINTLN         reduce using rule 63 (instruccion -> array_con_valores_int .)
    PRINTF          reduce using rule 63 (instruccion -> array_con_valores_int .)
    PRINT           reduce using rule 63 (instruccion -> array_con_valores_int .)
    VAR             reduce using rule 63 (instruccion -> array_con_valores_int .)
    I_CORCHETE      reduce using rule 63 (instruccion -> array_con_valores_int .)
    INT             reduce using rule 63 (instruccion -> array_con_valores_int .)
    DOUBLE          reduce using rule 63 (instruccion -> array_con_valores_int .)
    STRING          reduce using rule 63 (instruccion -> array_con_valores_int .)
    BOOLEAN         reduce using rule 63 (instruccion -> array_con_valores_int .)
    RETURN          reduce using rule 63 (instruccion -> array_con_valores_int .)
    FUNC            reduce using rule 63 (instruccion -> array_con_valores_int .)


state 28

    (64) instruccion -> array_con_valores_double .

    $end            reduce using rule 64 (instruccion -> array_con_valores_double .)
    PUNTO_COMA      reduce using rule 64 (instruccion -> array_con_valores_double .)
    D_LLAVE         reduce using rule 64 (instruccion -> array_con_valores_double .)
    ID              reduce using rule 64 (instruccion -> array_con_valores_double .)
    IF              reduce using rule 64 (instruccion -> array_con_valores_double .)
    ELSE            reduce using rule 64 (instruccion -> array_con_valores_double .)
    ELSEIF          reduce using rule 64 (instruccion -> array_con_valores_double .)
    FOR             reduce using rule 64 (instruccion -> array_con_valores_double .)
    MAP             reduce using rule 64 (instruccion -> array_con_valores_double .)
    MAKE            reduce using rule 64 (instruccion -> array_con_valores_double .)
    TYPE            reduce using rule 64 (instruccion -> array_con_valores_double .)
    I_PARENTESIS    reduce using rule 64 (instruccion -> array_con_valores_double .)
    PRINTLN         reduce using rule 64 (instruccion -> array_con_valores_double .)
    PRINTF          reduce using rule 64 (instruccion -> array_con_valores_double .)
    PRINT           reduce using rule 64 (instruccion -> array_con_valores_double .)
    VAR             reduce using rule 64 (instruccion -> array_con_valores_double .)
    I_CORCHETE      reduce using rule 64 (instruccion -> array_con_valores_double .)
    INT             reduce using rule 64 (instruccion -> array_con_valores_double .)
    DOUBLE          reduce using rule 64 (instruccion -> array_con_valores_double .)
    STRING          reduce using rule 64 (instruccion -> array_con_valores_double .)
    BOOLEAN         reduce using rule 64 (instruccion -> array_con_valores_double .)
    RETURN          reduce using rule 64 (instruccion -> array_con_valores_double .)
    FUNC            reduce using rule 64 (instruccion -> array_con_valores_double .)


state 29

    (65) instruccion -> array_con_valores_string .

    $end            reduce using rule 65 (instruccion -> array_con_valores_string .)
    PUNTO_COMA      reduce using rule 65 (instruccion -> array_con_valores_string .)
    D_LLAVE         reduce using rule 65 (instruccion -> array_con_valores_string .)
    ID              reduce using rule 65 (instruccion -> array_con_valores_string .)
    IF              reduce using rule 65 (instruccion -> array_con_valores_string .)
    ELSE            reduce using rule 65 (instruccion -> array_con_valores_string .)
    ELSEIF          reduce using rule 65 (instruccion -> array_con_valores_string .)
    FOR             reduce using rule 65 (instruccion -> array_con_valores_string .)
    MAP             reduce using rule 65 (instruccion -> array_con_valores_string .)
    MAKE            reduce using rule 65 (instruccion -> array_con_valores_string .)
    TYPE            reduce using rule 65 (instruccion -> array_con_valores_string .)
    I_PARENTESIS    reduce using rule 65 (instruccion -> array_con_valores_string .)
    PRINTLN         reduce using rule 65 (instruccion -> array_con_valores_string .)
    PRINTF          reduce using rule 65 (instruccion -> array_con_valores_string .)
    PRINT           reduce using rule 65 (instruccion -> array_con_valores_string .)
    VAR             reduce using rule 65 (instruccion -> array_con_valores_string .)
    I_CORCHETE      reduce using rule 65 (instruccion -> array_con_valores_string .)
    INT             reduce using rule 65 (instruccion -> array_con_valores_string .)
    DOUBLE          reduce using rule 65 (instruccion -> array_con_valores_string .)
    STRING          reduce using rule 65 (instruccion -> array_con_valores_string .)
    BOOLEAN         reduce using rule 65 (instruccion -> array_con_valores_string .)
    RETURN          reduce using rule 65 (instruccion -> array_con_valores_string .)
    FUNC            reduce using rule 65 (instruccion -> array_con_valores_string .)


state 30

    (66) instruccion -> array_con_valores_boolean .

    $end            reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    PUNTO_COMA      reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    D_LLAVE         reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    ID              reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    IF              reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    ELSE            reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    ELSEIF          reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    FOR             reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    MAP             reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    MAKE            reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    TYPE            reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    I_PARENTESIS    reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    PRINTLN         reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    PRINTF          reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    PRINT           reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    VAR             reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    I_CORCHETE      reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    INT             reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    DOUBLE          reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    STRING          reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    BOOLEAN         reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    RETURN          reduce using rule 66 (instruccion -> array_con_valores_boolean .)
    FUNC            reduce using rule 66 (instruccion -> array_con_valores_boolean .)


state 31

    (67) instruccion -> array_length_con_valores_int .

    $end            reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    PUNTO_COMA      reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    D_LLAVE         reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    ID              reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    IF              reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    ELSE            reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    ELSEIF          reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    FOR             reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    MAP             reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    MAKE            reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    TYPE            reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    I_PARENTESIS    reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    PRINTLN         reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    PRINTF          reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    PRINT           reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    VAR             reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    I_CORCHETE      reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    INT             reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    DOUBLE          reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    STRING          reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    BOOLEAN         reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    RETURN          reduce using rule 67 (instruccion -> array_length_con_valores_int .)
    FUNC            reduce using rule 67 (instruccion -> array_length_con_valores_int .)


state 32

    (68) instruccion -> array_length_con_valores_double .

    $end            reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    PUNTO_COMA      reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    D_LLAVE         reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    ID              reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    IF              reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    ELSE            reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    ELSEIF          reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    FOR             reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    MAP             reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    MAKE            reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    TYPE            reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    I_PARENTESIS    reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    PRINTLN         reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    PRINTF          reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    PRINT           reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    VAR             reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    I_CORCHETE      reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    INT             reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    DOUBLE          reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    STRING          reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    BOOLEAN         reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    RETURN          reduce using rule 68 (instruccion -> array_length_con_valores_double .)
    FUNC            reduce using rule 68 (instruccion -> array_length_con_valores_double .)


state 33

    (69) instruccion -> array_length_con_valores_string .

    $end            reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    PUNTO_COMA      reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    D_LLAVE         reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    ID              reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    IF              reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    ELSE            reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    ELSEIF          reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    FOR             reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    MAP             reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    MAKE            reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    TYPE            reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    I_PARENTESIS    reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    PRINTLN         reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    PRINTF          reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    PRINT           reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    VAR             reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    I_CORCHETE      reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    INT             reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    DOUBLE          reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    STRING          reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    BOOLEAN         reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    RETURN          reduce using rule 69 (instruccion -> array_length_con_valores_string .)
    FUNC            reduce using rule 69 (instruccion -> array_length_con_valores_string .)


state 34

    (70) instruccion -> array_length_con_valores_boolean .

    $end            reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    PUNTO_COMA      reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    D_LLAVE         reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    ID              reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    IF              reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    ELSE            reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    ELSEIF          reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    FOR             reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    MAP             reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    MAKE            reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    TYPE            reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    I_PARENTESIS    reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    PRINTLN         reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    PRINTF          reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    PRINT           reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    VAR             reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    I_CORCHETE      reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    INT             reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    DOUBLE          reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    STRING          reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    BOOLEAN         reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    RETURN          reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)
    FUNC            reduce using rule 70 (instruccion -> array_length_con_valores_boolean .)


state 35

    (87) instruccion -> MAP . I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (89) instruccion -> MAP . I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE

    I_CORCHETE      shift and go to state 112


state 36

    (71) array_int -> I_CORCHETE . D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> I_CORCHETE . D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> I_CORCHETE . D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> I_CORCHETE . D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> I_CORCHETE . D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> I_CORCHETE . D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> I_CORCHETE . D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> I_CORCHETE . D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (134) array_length -> I_CORCHETE . INT D_CORCHETE

    D_CORCHETE      shift and go to state 113
    INT             shift and go to state 114


state 37

    (88) instruccion -> MAKE . I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS

    I_PARENTESIS    shift and go to state 115


state 38

    (90) instruccion -> TYPE . ID STRUCT I_LLAVE atributos_struct D_LLAVE

    ID              shift and go to state 116


state 39

    (94) instruccion -> init_struct .

    $end            reduce using rule 94 (instruccion -> init_struct .)
    PUNTO_COMA      reduce using rule 94 (instruccion -> init_struct .)
    D_LLAVE         reduce using rule 94 (instruccion -> init_struct .)
    ID              reduce using rule 94 (instruccion -> init_struct .)
    IF              reduce using rule 94 (instruccion -> init_struct .)
    ELSE            reduce using rule 94 (instruccion -> init_struct .)
    ELSEIF          reduce using rule 94 (instruccion -> init_struct .)
    FOR             reduce using rule 94 (instruccion -> init_struct .)
    MAP             reduce using rule 94 (instruccion -> init_struct .)
    MAKE            reduce using rule 94 (instruccion -> init_struct .)
    TYPE            reduce using rule 94 (instruccion -> init_struct .)
    I_PARENTESIS    reduce using rule 94 (instruccion -> init_struct .)
    PRINTLN         reduce using rule 94 (instruccion -> init_struct .)
    PRINTF          reduce using rule 94 (instruccion -> init_struct .)
    PRINT           reduce using rule 94 (instruccion -> init_struct .)
    VAR             reduce using rule 94 (instruccion -> init_struct .)
    I_CORCHETE      reduce using rule 94 (instruccion -> init_struct .)
    INT             reduce using rule 94 (instruccion -> init_struct .)
    DOUBLE          reduce using rule 94 (instruccion -> init_struct .)
    STRING          reduce using rule 94 (instruccion -> init_struct .)
    BOOLEAN         reduce using rule 94 (instruccion -> init_struct .)
    RETURN          reduce using rule 94 (instruccion -> init_struct .)
    FUNC            reduce using rule 94 (instruccion -> init_struct .)


state 40

    (29) funcion -> FUNC . ID cuerpo_fun
    (31) funcion_no_type -> FUNC . ID parametros_sin_tipo body

    ID              shift and go to state 117


state 41

    (30) funcion -> funcion_no_type .

    ID              reduce using rule 30 (funcion -> funcion_no_type .)
    IF              reduce using rule 30 (funcion -> funcion_no_type .)
    ELSE            reduce using rule 30 (funcion -> funcion_no_type .)
    ELSEIF          reduce using rule 30 (funcion -> funcion_no_type .)
    FOR             reduce using rule 30 (funcion -> funcion_no_type .)
    MAP             reduce using rule 30 (funcion -> funcion_no_type .)
    MAKE            reduce using rule 30 (funcion -> funcion_no_type .)
    TYPE            reduce using rule 30 (funcion -> funcion_no_type .)
    FUNC            reduce using rule 30 (funcion -> funcion_no_type .)
    I_PARENTESIS    reduce using rule 30 (funcion -> funcion_no_type .)
    PRINTLN         reduce using rule 30 (funcion -> funcion_no_type .)
    PRINTF          reduce using rule 30 (funcion -> funcion_no_type .)
    PRINT           reduce using rule 30 (funcion -> funcion_no_type .)
    VAR             reduce using rule 30 (funcion -> funcion_no_type .)
    I_CORCHETE      reduce using rule 30 (funcion -> funcion_no_type .)
    INT             reduce using rule 30 (funcion -> funcion_no_type .)
    DOUBLE          reduce using rule 30 (funcion -> funcion_no_type .)
    STRING          reduce using rule 30 (funcion -> funcion_no_type .)
    BOOLEAN         reduce using rule 30 (funcion -> funcion_no_type .)
    $end            reduce using rule 30 (funcion -> funcion_no_type .)


state 42

    (115) resultado_inc_dec -> valor_struct . operador_matematico
    (166) valor -> valor_struct .
    (141) operador_matematico -> . INCREMENTO
    (142) operador_matematico -> . DECREMENTO

    ADICION         reduce using rule 166 (valor -> valor_struct .)
    RESTA           reduce using rule 166 (valor -> valor_struct .)
    MULTIPLICACION  reduce using rule 166 (valor -> valor_struct .)
    DIVISION        reduce using rule 166 (valor -> valor_struct .)
    MODULO          reduce using rule 166 (valor -> valor_struct .)
    MENOR_IGUAL     reduce using rule 166 (valor -> valor_struct .)
    IGUAL           reduce using rule 166 (valor -> valor_struct .)
    DIFERENTE       reduce using rule 166 (valor -> valor_struct .)
    MAYOR           reduce using rule 166 (valor -> valor_struct .)
    MAYOR_IGUAL     reduce using rule 166 (valor -> valor_struct .)
    MENOR           reduce using rule 166 (valor -> valor_struct .)
    $end            reduce using rule 166 (valor -> valor_struct .)
    PUNTO_COMA      reduce using rule 166 (valor -> valor_struct .)
    D_LLAVE         reduce using rule 166 (valor -> valor_struct .)
    ID              reduce using rule 166 (valor -> valor_struct .)
    IF              reduce using rule 166 (valor -> valor_struct .)
    ELSE            reduce using rule 166 (valor -> valor_struct .)
    ELSEIF          reduce using rule 166 (valor -> valor_struct .)
    FOR             reduce using rule 166 (valor -> valor_struct .)
    MAP             reduce using rule 166 (valor -> valor_struct .)
    MAKE            reduce using rule 166 (valor -> valor_struct .)
    TYPE            reduce using rule 166 (valor -> valor_struct .)
    I_PARENTESIS    reduce using rule 166 (valor -> valor_struct .)
    PRINTLN         reduce using rule 166 (valor -> valor_struct .)
    PRINTF          reduce using rule 166 (valor -> valor_struct .)
    PRINT           reduce using rule 166 (valor -> valor_struct .)
    VAR             reduce using rule 166 (valor -> valor_struct .)
    I_CORCHETE      reduce using rule 166 (valor -> valor_struct .)
    INT             reduce using rule 166 (valor -> valor_struct .)
    DOUBLE          reduce using rule 166 (valor -> valor_struct .)
    STRING          reduce using rule 166 (valor -> valor_struct .)
    BOOLEAN         reduce using rule 166 (valor -> valor_struct .)
    RETURN          reduce using rule 166 (valor -> valor_struct .)
    FUNC            reduce using rule 166 (valor -> valor_struct .)
    INCREMENTO      shift and go to state 101
    DECREMENTO      shift and go to state 102

    operador_matematico            shift and go to state 118

state 43

    (110) expression -> resultado .

    ADICION         reduce using rule 110 (expression -> resultado .)
    RESTA           reduce using rule 110 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 110 (expression -> resultado .)
    DIVISION        reduce using rule 110 (expression -> resultado .)
    MODULO          reduce using rule 110 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 110 (expression -> resultado .)
    IGUAL           reduce using rule 110 (expression -> resultado .)
    DIFERENTE       reduce using rule 110 (expression -> resultado .)
    MAYOR           reduce using rule 110 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 110 (expression -> resultado .)
    MENOR           reduce using rule 110 (expression -> resultado .)
    $end            reduce using rule 110 (expression -> resultado .)
    PUNTO_COMA      reduce using rule 110 (expression -> resultado .)
    D_PARENTESIS    reduce using rule 110 (expression -> resultado .)
    D_LLAVE         reduce using rule 110 (expression -> resultado .)
    ID              reduce using rule 110 (expression -> resultado .)
    IF              reduce using rule 110 (expression -> resultado .)
    ELSE            reduce using rule 110 (expression -> resultado .)
    ELSEIF          reduce using rule 110 (expression -> resultado .)
    FOR             reduce using rule 110 (expression -> resultado .)
    MAP             reduce using rule 110 (expression -> resultado .)
    MAKE            reduce using rule 110 (expression -> resultado .)
    TYPE            reduce using rule 110 (expression -> resultado .)
    I_PARENTESIS    reduce using rule 110 (expression -> resultado .)
    PRINTLN         reduce using rule 110 (expression -> resultado .)
    PRINTF          reduce using rule 110 (expression -> resultado .)
    PRINT           reduce using rule 110 (expression -> resultado .)
    VAR             reduce using rule 110 (expression -> resultado .)
    I_CORCHETE      reduce using rule 110 (expression -> resultado .)
    INT             reduce using rule 110 (expression -> resultado .)
    DOUBLE          reduce using rule 110 (expression -> resultado .)
    STRING          reduce using rule 110 (expression -> resultado .)
    BOOLEAN         reduce using rule 110 (expression -> resultado .)
    RETURN          reduce using rule 110 (expression -> resultado .)
    FUNC            reduce using rule 110 (expression -> resultado .)
    COMA            reduce using rule 110 (expression -> resultado .)


state 44

    (127) print -> PRINTLN .

    I_PARENTESIS    reduce using rule 127 (print -> PRINTLN .)


state 45

    (128) print -> PRINTF .

    I_PARENTESIS    reduce using rule 128 (print -> PRINTF .)


state 46

    (129) print -> PRINT .

    I_PARENTESIS    reduce using rule 129 (print -> PRINT .)


state 47

    (28) decla_header -> VAR . ID

    ID              shift and go to state 119


state 48

    (170) valor_boolean -> BOOLEAN .

    ADICION         reduce using rule 170 (valor_boolean -> BOOLEAN .)
    RESTA           reduce using rule 170 (valor_boolean -> BOOLEAN .)
    MULTIPLICACION  reduce using rule 170 (valor_boolean -> BOOLEAN .)
    DIVISION        reduce using rule 170 (valor_boolean -> BOOLEAN .)
    MODULO          reduce using rule 170 (valor_boolean -> BOOLEAN .)
    MENOR_IGUAL     reduce using rule 170 (valor_boolean -> BOOLEAN .)
    IGUAL           reduce using rule 170 (valor_boolean -> BOOLEAN .)
    DIFERENTE       reduce using rule 170 (valor_boolean -> BOOLEAN .)
    MAYOR           reduce using rule 170 (valor_boolean -> BOOLEAN .)
    MAYOR_IGUAL     reduce using rule 170 (valor_boolean -> BOOLEAN .)
    MENOR           reduce using rule 170 (valor_boolean -> BOOLEAN .)
    $end            reduce using rule 170 (valor_boolean -> BOOLEAN .)
    I_LLAVE         reduce using rule 170 (valor_boolean -> BOOLEAN .)
    PUNTO_COMA      reduce using rule 170 (valor_boolean -> BOOLEAN .)
    D_PARENTESIS    reduce using rule 170 (valor_boolean -> BOOLEAN .)
    D_LLAVE         reduce using rule 170 (valor_boolean -> BOOLEAN .)
    ID              reduce using rule 170 (valor_boolean -> BOOLEAN .)
    IF              reduce using rule 170 (valor_boolean -> BOOLEAN .)
    ELSE            reduce using rule 170 (valor_boolean -> BOOLEAN .)
    ELSEIF          reduce using rule 170 (valor_boolean -> BOOLEAN .)
    FOR             reduce using rule 170 (valor_boolean -> BOOLEAN .)
    MAP             reduce using rule 170 (valor_boolean -> BOOLEAN .)
    MAKE            reduce using rule 170 (valor_boolean -> BOOLEAN .)
    TYPE            reduce using rule 170 (valor_boolean -> BOOLEAN .)
    I_PARENTESIS    reduce using rule 170 (valor_boolean -> BOOLEAN .)
    PRINTLN         reduce using rule 170 (valor_boolean -> BOOLEAN .)
    PRINTF          reduce using rule 170 (valor_boolean -> BOOLEAN .)
    PRINT           reduce using rule 170 (valor_boolean -> BOOLEAN .)
    VAR             reduce using rule 170 (valor_boolean -> BOOLEAN .)
    I_CORCHETE      reduce using rule 170 (valor_boolean -> BOOLEAN .)
    INT             reduce using rule 170 (valor_boolean -> BOOLEAN .)
    DOUBLE          reduce using rule 170 (valor_boolean -> BOOLEAN .)
    STRING          reduce using rule 170 (valor_boolean -> BOOLEAN .)
    BOOLEAN         reduce using rule 170 (valor_boolean -> BOOLEAN .)
    RETURN          reduce using rule 170 (valor_boolean -> BOOLEAN .)
    FUNC            reduce using rule 170 (valor_boolean -> BOOLEAN .)
    COMA            reduce using rule 170 (valor_boolean -> BOOLEAN .)
    BOOL            reduce using rule 170 (valor_boolean -> BOOLEAN .)
    STRINGTYPE      reduce using rule 170 (valor_boolean -> BOOLEAN .)
    INTEGER         reduce using rule 170 (valor_boolean -> BOOLEAN .)
    FLOAT32         reduce using rule 170 (valor_boolean -> BOOLEAN .)
    FLOAT64         reduce using rule 170 (valor_boolean -> BOOLEAN .)
    DOS_PUNTOS      reduce using rule 170 (valor_boolean -> BOOLEAN .)


state 49

    (75) array_length_int -> array_length . INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> array_length . floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> array_length . STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> array_length . BOOLEAN I_LLAVE D_LLAVE
    (83) array_length_con_valores_int -> array_length . INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> array_length . floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> array_length . STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> array_length . BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    INTEGER         shift and go to state 120
    STRINGTYPE      shift and go to state 122
    BOOLEAN         shift and go to state 123
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    floating_type                  shift and go to state 121

state 50

    (161) valor -> valor_int .

    ADICION         reduce using rule 161 (valor -> valor_int .)
    RESTA           reduce using rule 161 (valor -> valor_int .)
    MULTIPLICACION  reduce using rule 161 (valor -> valor_int .)
    DIVISION        reduce using rule 161 (valor -> valor_int .)
    MODULO          reduce using rule 161 (valor -> valor_int .)
    MENOR_IGUAL     reduce using rule 161 (valor -> valor_int .)
    IGUAL           reduce using rule 161 (valor -> valor_int .)
    DIFERENTE       reduce using rule 161 (valor -> valor_int .)
    MAYOR           reduce using rule 161 (valor -> valor_int .)
    MAYOR_IGUAL     reduce using rule 161 (valor -> valor_int .)
    MENOR           reduce using rule 161 (valor -> valor_int .)
    $end            reduce using rule 161 (valor -> valor_int .)
    I_LLAVE         reduce using rule 161 (valor -> valor_int .)
    PUNTO_COMA      reduce using rule 161 (valor -> valor_int .)
    D_PARENTESIS    reduce using rule 161 (valor -> valor_int .)
    D_LLAVE         reduce using rule 161 (valor -> valor_int .)
    ID              reduce using rule 161 (valor -> valor_int .)
    IF              reduce using rule 161 (valor -> valor_int .)
    ELSE            reduce using rule 161 (valor -> valor_int .)
    ELSEIF          reduce using rule 161 (valor -> valor_int .)
    FOR             reduce using rule 161 (valor -> valor_int .)
    MAP             reduce using rule 161 (valor -> valor_int .)
    MAKE            reduce using rule 161 (valor -> valor_int .)
    TYPE            reduce using rule 161 (valor -> valor_int .)
    I_PARENTESIS    reduce using rule 161 (valor -> valor_int .)
    PRINTLN         reduce using rule 161 (valor -> valor_int .)
    PRINTF          reduce using rule 161 (valor -> valor_int .)
    PRINT           reduce using rule 161 (valor -> valor_int .)
    VAR             reduce using rule 161 (valor -> valor_int .)
    I_CORCHETE      reduce using rule 161 (valor -> valor_int .)
    INT             reduce using rule 161 (valor -> valor_int .)
    DOUBLE          reduce using rule 161 (valor -> valor_int .)
    STRING          reduce using rule 161 (valor -> valor_int .)
    BOOLEAN         reduce using rule 161 (valor -> valor_int .)
    RETURN          reduce using rule 161 (valor -> valor_int .)
    FUNC            reduce using rule 161 (valor -> valor_int .)
    COMA            reduce using rule 161 (valor -> valor_int .)
    BOOL            reduce using rule 161 (valor -> valor_int .)
    STRINGTYPE      reduce using rule 161 (valor -> valor_int .)
    INTEGER         reduce using rule 161 (valor -> valor_int .)
    FLOAT32         reduce using rule 161 (valor -> valor_int .)
    FLOAT64         reduce using rule 161 (valor -> valor_int .)
    DOS_PUNTOS      reduce using rule 161 (valor -> valor_int .)


state 51

    (162) valor -> valor_double .

    ADICION         reduce using rule 162 (valor -> valor_double .)
    RESTA           reduce using rule 162 (valor -> valor_double .)
    MULTIPLICACION  reduce using rule 162 (valor -> valor_double .)
    DIVISION        reduce using rule 162 (valor -> valor_double .)
    MODULO          reduce using rule 162 (valor -> valor_double .)
    MENOR_IGUAL     reduce using rule 162 (valor -> valor_double .)
    IGUAL           reduce using rule 162 (valor -> valor_double .)
    DIFERENTE       reduce using rule 162 (valor -> valor_double .)
    MAYOR           reduce using rule 162 (valor -> valor_double .)
    MAYOR_IGUAL     reduce using rule 162 (valor -> valor_double .)
    MENOR           reduce using rule 162 (valor -> valor_double .)
    $end            reduce using rule 162 (valor -> valor_double .)
    I_LLAVE         reduce using rule 162 (valor -> valor_double .)
    PUNTO_COMA      reduce using rule 162 (valor -> valor_double .)
    D_PARENTESIS    reduce using rule 162 (valor -> valor_double .)
    D_LLAVE         reduce using rule 162 (valor -> valor_double .)
    ID              reduce using rule 162 (valor -> valor_double .)
    IF              reduce using rule 162 (valor -> valor_double .)
    ELSE            reduce using rule 162 (valor -> valor_double .)
    ELSEIF          reduce using rule 162 (valor -> valor_double .)
    FOR             reduce using rule 162 (valor -> valor_double .)
    MAP             reduce using rule 162 (valor -> valor_double .)
    MAKE            reduce using rule 162 (valor -> valor_double .)
    TYPE            reduce using rule 162 (valor -> valor_double .)
    I_PARENTESIS    reduce using rule 162 (valor -> valor_double .)
    PRINTLN         reduce using rule 162 (valor -> valor_double .)
    PRINTF          reduce using rule 162 (valor -> valor_double .)
    PRINT           reduce using rule 162 (valor -> valor_double .)
    VAR             reduce using rule 162 (valor -> valor_double .)
    I_CORCHETE      reduce using rule 162 (valor -> valor_double .)
    INT             reduce using rule 162 (valor -> valor_double .)
    DOUBLE          reduce using rule 162 (valor -> valor_double .)
    STRING          reduce using rule 162 (valor -> valor_double .)
    BOOLEAN         reduce using rule 162 (valor -> valor_double .)
    RETURN          reduce using rule 162 (valor -> valor_double .)
    FUNC            reduce using rule 162 (valor -> valor_double .)
    COMA            reduce using rule 162 (valor -> valor_double .)
    BOOL            reduce using rule 162 (valor -> valor_double .)
    STRINGTYPE      reduce using rule 162 (valor -> valor_double .)
    INTEGER         reduce using rule 162 (valor -> valor_double .)
    FLOAT32         reduce using rule 162 (valor -> valor_double .)
    FLOAT64         reduce using rule 162 (valor -> valor_double .)
    DOS_PUNTOS      reduce using rule 162 (valor -> valor_double .)


state 52

    (163) valor -> valor_string .

    ADICION         reduce using rule 163 (valor -> valor_string .)
    RESTA           reduce using rule 163 (valor -> valor_string .)
    MULTIPLICACION  reduce using rule 163 (valor -> valor_string .)
    DIVISION        reduce using rule 163 (valor -> valor_string .)
    MODULO          reduce using rule 163 (valor -> valor_string .)
    MENOR_IGUAL     reduce using rule 163 (valor -> valor_string .)
    IGUAL           reduce using rule 163 (valor -> valor_string .)
    DIFERENTE       reduce using rule 163 (valor -> valor_string .)
    MAYOR           reduce using rule 163 (valor -> valor_string .)
    MAYOR_IGUAL     reduce using rule 163 (valor -> valor_string .)
    MENOR           reduce using rule 163 (valor -> valor_string .)
    $end            reduce using rule 163 (valor -> valor_string .)
    I_LLAVE         reduce using rule 163 (valor -> valor_string .)
    PUNTO_COMA      reduce using rule 163 (valor -> valor_string .)
    D_PARENTESIS    reduce using rule 163 (valor -> valor_string .)
    D_LLAVE         reduce using rule 163 (valor -> valor_string .)
    ID              reduce using rule 163 (valor -> valor_string .)
    IF              reduce using rule 163 (valor -> valor_string .)
    ELSE            reduce using rule 163 (valor -> valor_string .)
    ELSEIF          reduce using rule 163 (valor -> valor_string .)
    FOR             reduce using rule 163 (valor -> valor_string .)
    MAP             reduce using rule 163 (valor -> valor_string .)
    MAKE            reduce using rule 163 (valor -> valor_string .)
    TYPE            reduce using rule 163 (valor -> valor_string .)
    I_PARENTESIS    reduce using rule 163 (valor -> valor_string .)
    PRINTLN         reduce using rule 163 (valor -> valor_string .)
    PRINTF          reduce using rule 163 (valor -> valor_string .)
    PRINT           reduce using rule 163 (valor -> valor_string .)
    VAR             reduce using rule 163 (valor -> valor_string .)
    I_CORCHETE      reduce using rule 163 (valor -> valor_string .)
    INT             reduce using rule 163 (valor -> valor_string .)
    DOUBLE          reduce using rule 163 (valor -> valor_string .)
    STRING          reduce using rule 163 (valor -> valor_string .)
    BOOLEAN         reduce using rule 163 (valor -> valor_string .)
    RETURN          reduce using rule 163 (valor -> valor_string .)
    FUNC            reduce using rule 163 (valor -> valor_string .)
    COMA            reduce using rule 163 (valor -> valor_string .)
    BOOL            reduce using rule 163 (valor -> valor_string .)
    STRINGTYPE      reduce using rule 163 (valor -> valor_string .)
    INTEGER         reduce using rule 163 (valor -> valor_string .)
    FLOAT32         reduce using rule 163 (valor -> valor_string .)
    FLOAT64         reduce using rule 163 (valor -> valor_string .)
    DOS_PUNTOS      reduce using rule 163 (valor -> valor_string .)


state 53

    (164) valor -> valor_boolean .

    ADICION         reduce using rule 164 (valor -> valor_boolean .)
    RESTA           reduce using rule 164 (valor -> valor_boolean .)
    MULTIPLICACION  reduce using rule 164 (valor -> valor_boolean .)
    DIVISION        reduce using rule 164 (valor -> valor_boolean .)
    MODULO          reduce using rule 164 (valor -> valor_boolean .)
    MENOR_IGUAL     reduce using rule 164 (valor -> valor_boolean .)
    IGUAL           reduce using rule 164 (valor -> valor_boolean .)
    DIFERENTE       reduce using rule 164 (valor -> valor_boolean .)
    MAYOR           reduce using rule 164 (valor -> valor_boolean .)
    MAYOR_IGUAL     reduce using rule 164 (valor -> valor_boolean .)
    MENOR           reduce using rule 164 (valor -> valor_boolean .)
    $end            reduce using rule 164 (valor -> valor_boolean .)
    I_LLAVE         reduce using rule 164 (valor -> valor_boolean .)
    PUNTO_COMA      reduce using rule 164 (valor -> valor_boolean .)
    D_PARENTESIS    reduce using rule 164 (valor -> valor_boolean .)
    D_LLAVE         reduce using rule 164 (valor -> valor_boolean .)
    ID              reduce using rule 164 (valor -> valor_boolean .)
    IF              reduce using rule 164 (valor -> valor_boolean .)
    ELSE            reduce using rule 164 (valor -> valor_boolean .)
    ELSEIF          reduce using rule 164 (valor -> valor_boolean .)
    FOR             reduce using rule 164 (valor -> valor_boolean .)
    MAP             reduce using rule 164 (valor -> valor_boolean .)
    MAKE            reduce using rule 164 (valor -> valor_boolean .)
    TYPE            reduce using rule 164 (valor -> valor_boolean .)
    I_PARENTESIS    reduce using rule 164 (valor -> valor_boolean .)
    PRINTLN         reduce using rule 164 (valor -> valor_boolean .)
    PRINTF          reduce using rule 164 (valor -> valor_boolean .)
    PRINT           reduce using rule 164 (valor -> valor_boolean .)
    VAR             reduce using rule 164 (valor -> valor_boolean .)
    I_CORCHETE      reduce using rule 164 (valor -> valor_boolean .)
    INT             reduce using rule 164 (valor -> valor_boolean .)
    DOUBLE          reduce using rule 164 (valor -> valor_boolean .)
    STRING          reduce using rule 164 (valor -> valor_boolean .)
    BOOLEAN         reduce using rule 164 (valor -> valor_boolean .)
    RETURN          reduce using rule 164 (valor -> valor_boolean .)
    FUNC            reduce using rule 164 (valor -> valor_boolean .)
    COMA            reduce using rule 164 (valor -> valor_boolean .)
    BOOL            reduce using rule 164 (valor -> valor_boolean .)
    STRINGTYPE      reduce using rule 164 (valor -> valor_boolean .)
    INTEGER         reduce using rule 164 (valor -> valor_boolean .)
    FLOAT32         reduce using rule 164 (valor -> valor_boolean .)
    FLOAT64         reduce using rule 164 (valor -> valor_boolean .)
    DOS_PUNTOS      reduce using rule 164 (valor -> valor_boolean .)


state 54

    (165) valor -> valor_variable .

    ADICION         reduce using rule 165 (valor -> valor_variable .)
    RESTA           reduce using rule 165 (valor -> valor_variable .)
    MULTIPLICACION  reduce using rule 165 (valor -> valor_variable .)
    DIVISION        reduce using rule 165 (valor -> valor_variable .)
    MODULO          reduce using rule 165 (valor -> valor_variable .)
    MENOR_IGUAL     reduce using rule 165 (valor -> valor_variable .)
    IGUAL           reduce using rule 165 (valor -> valor_variable .)
    DIFERENTE       reduce using rule 165 (valor -> valor_variable .)
    MAYOR           reduce using rule 165 (valor -> valor_variable .)
    MAYOR_IGUAL     reduce using rule 165 (valor -> valor_variable .)
    MENOR           reduce using rule 165 (valor -> valor_variable .)
    $end            reduce using rule 165 (valor -> valor_variable .)
    I_LLAVE         reduce using rule 165 (valor -> valor_variable .)
    PUNTO_COMA      reduce using rule 165 (valor -> valor_variable .)
    D_PARENTESIS    reduce using rule 165 (valor -> valor_variable .)
    D_LLAVE         reduce using rule 165 (valor -> valor_variable .)
    ID              reduce using rule 165 (valor -> valor_variable .)
    IF              reduce using rule 165 (valor -> valor_variable .)
    ELSE            reduce using rule 165 (valor -> valor_variable .)
    ELSEIF          reduce using rule 165 (valor -> valor_variable .)
    FOR             reduce using rule 165 (valor -> valor_variable .)
    MAP             reduce using rule 165 (valor -> valor_variable .)
    MAKE            reduce using rule 165 (valor -> valor_variable .)
    TYPE            reduce using rule 165 (valor -> valor_variable .)
    I_PARENTESIS    reduce using rule 165 (valor -> valor_variable .)
    PRINTLN         reduce using rule 165 (valor -> valor_variable .)
    PRINTF          reduce using rule 165 (valor -> valor_variable .)
    PRINT           reduce using rule 165 (valor -> valor_variable .)
    VAR             reduce using rule 165 (valor -> valor_variable .)
    I_CORCHETE      reduce using rule 165 (valor -> valor_variable .)
    INT             reduce using rule 165 (valor -> valor_variable .)
    DOUBLE          reduce using rule 165 (valor -> valor_variable .)
    STRING          reduce using rule 165 (valor -> valor_variable .)
    BOOLEAN         reduce using rule 165 (valor -> valor_variable .)
    RETURN          reduce using rule 165 (valor -> valor_variable .)
    FUNC            reduce using rule 165 (valor -> valor_variable .)
    COMA            reduce using rule 165 (valor -> valor_variable .)
    BOOL            reduce using rule 165 (valor -> valor_variable .)
    STRINGTYPE      reduce using rule 165 (valor -> valor_variable .)
    INTEGER         reduce using rule 165 (valor -> valor_variable .)
    FLOAT32         reduce using rule 165 (valor -> valor_variable .)
    FLOAT64         reduce using rule 165 (valor -> valor_variable .)
    DOS_PUNTOS      reduce using rule 165 (valor -> valor_variable .)


state 55

    (167) valor_int -> INT .

    ADICION         reduce using rule 167 (valor_int -> INT .)
    RESTA           reduce using rule 167 (valor_int -> INT .)
    MULTIPLICACION  reduce using rule 167 (valor_int -> INT .)
    DIVISION        reduce using rule 167 (valor_int -> INT .)
    MODULO          reduce using rule 167 (valor_int -> INT .)
    MENOR_IGUAL     reduce using rule 167 (valor_int -> INT .)
    IGUAL           reduce using rule 167 (valor_int -> INT .)
    DIFERENTE       reduce using rule 167 (valor_int -> INT .)
    MAYOR           reduce using rule 167 (valor_int -> INT .)
    MAYOR_IGUAL     reduce using rule 167 (valor_int -> INT .)
    MENOR           reduce using rule 167 (valor_int -> INT .)
    $end            reduce using rule 167 (valor_int -> INT .)
    I_LLAVE         reduce using rule 167 (valor_int -> INT .)
    PUNTO_COMA      reduce using rule 167 (valor_int -> INT .)
    D_PARENTESIS    reduce using rule 167 (valor_int -> INT .)
    D_LLAVE         reduce using rule 167 (valor_int -> INT .)
    ID              reduce using rule 167 (valor_int -> INT .)
    IF              reduce using rule 167 (valor_int -> INT .)
    ELSE            reduce using rule 167 (valor_int -> INT .)
    ELSEIF          reduce using rule 167 (valor_int -> INT .)
    FOR             reduce using rule 167 (valor_int -> INT .)
    MAP             reduce using rule 167 (valor_int -> INT .)
    MAKE            reduce using rule 167 (valor_int -> INT .)
    TYPE            reduce using rule 167 (valor_int -> INT .)
    I_PARENTESIS    reduce using rule 167 (valor_int -> INT .)
    PRINTLN         reduce using rule 167 (valor_int -> INT .)
    PRINTF          reduce using rule 167 (valor_int -> INT .)
    PRINT           reduce using rule 167 (valor_int -> INT .)
    VAR             reduce using rule 167 (valor_int -> INT .)
    I_CORCHETE      reduce using rule 167 (valor_int -> INT .)
    INT             reduce using rule 167 (valor_int -> INT .)
    DOUBLE          reduce using rule 167 (valor_int -> INT .)
    STRING          reduce using rule 167 (valor_int -> INT .)
    BOOLEAN         reduce using rule 167 (valor_int -> INT .)
    RETURN          reduce using rule 167 (valor_int -> INT .)
    FUNC            reduce using rule 167 (valor_int -> INT .)
    COMA            reduce using rule 167 (valor_int -> INT .)
    BOOL            reduce using rule 167 (valor_int -> INT .)
    STRINGTYPE      reduce using rule 167 (valor_int -> INT .)
    INTEGER         reduce using rule 167 (valor_int -> INT .)
    FLOAT32         reduce using rule 167 (valor_int -> INT .)
    FLOAT64         reduce using rule 167 (valor_int -> INT .)
    DOS_PUNTOS      reduce using rule 167 (valor_int -> INT .)


state 56

    (168) valor_double -> DOUBLE .

    ADICION         reduce using rule 168 (valor_double -> DOUBLE .)
    RESTA           reduce using rule 168 (valor_double -> DOUBLE .)
    MULTIPLICACION  reduce using rule 168 (valor_double -> DOUBLE .)
    DIVISION        reduce using rule 168 (valor_double -> DOUBLE .)
    MODULO          reduce using rule 168 (valor_double -> DOUBLE .)
    MENOR_IGUAL     reduce using rule 168 (valor_double -> DOUBLE .)
    IGUAL           reduce using rule 168 (valor_double -> DOUBLE .)
    DIFERENTE       reduce using rule 168 (valor_double -> DOUBLE .)
    MAYOR           reduce using rule 168 (valor_double -> DOUBLE .)
    MAYOR_IGUAL     reduce using rule 168 (valor_double -> DOUBLE .)
    MENOR           reduce using rule 168 (valor_double -> DOUBLE .)
    $end            reduce using rule 168 (valor_double -> DOUBLE .)
    I_LLAVE         reduce using rule 168 (valor_double -> DOUBLE .)
    PUNTO_COMA      reduce using rule 168 (valor_double -> DOUBLE .)
    D_PARENTESIS    reduce using rule 168 (valor_double -> DOUBLE .)
    D_LLAVE         reduce using rule 168 (valor_double -> DOUBLE .)
    ID              reduce using rule 168 (valor_double -> DOUBLE .)
    IF              reduce using rule 168 (valor_double -> DOUBLE .)
    ELSE            reduce using rule 168 (valor_double -> DOUBLE .)
    ELSEIF          reduce using rule 168 (valor_double -> DOUBLE .)
    FOR             reduce using rule 168 (valor_double -> DOUBLE .)
    MAP             reduce using rule 168 (valor_double -> DOUBLE .)
    MAKE            reduce using rule 168 (valor_double -> DOUBLE .)
    TYPE            reduce using rule 168 (valor_double -> DOUBLE .)
    I_PARENTESIS    reduce using rule 168 (valor_double -> DOUBLE .)
    PRINTLN         reduce using rule 168 (valor_double -> DOUBLE .)
    PRINTF          reduce using rule 168 (valor_double -> DOUBLE .)
    PRINT           reduce using rule 168 (valor_double -> DOUBLE .)
    VAR             reduce using rule 168 (valor_double -> DOUBLE .)
    I_CORCHETE      reduce using rule 168 (valor_double -> DOUBLE .)
    INT             reduce using rule 168 (valor_double -> DOUBLE .)
    DOUBLE          reduce using rule 168 (valor_double -> DOUBLE .)
    STRING          reduce using rule 168 (valor_double -> DOUBLE .)
    BOOLEAN         reduce using rule 168 (valor_double -> DOUBLE .)
    RETURN          reduce using rule 168 (valor_double -> DOUBLE .)
    FUNC            reduce using rule 168 (valor_double -> DOUBLE .)
    COMA            reduce using rule 168 (valor_double -> DOUBLE .)
    BOOL            reduce using rule 168 (valor_double -> DOUBLE .)
    STRINGTYPE      reduce using rule 168 (valor_double -> DOUBLE .)
    INTEGER         reduce using rule 168 (valor_double -> DOUBLE .)
    FLOAT32         reduce using rule 168 (valor_double -> DOUBLE .)
    FLOAT64         reduce using rule 168 (valor_double -> DOUBLE .)
    DOS_PUNTOS      reduce using rule 168 (valor_double -> DOUBLE .)


state 57

    (169) valor_string -> STRING .

    ADICION         reduce using rule 169 (valor_string -> STRING .)
    RESTA           reduce using rule 169 (valor_string -> STRING .)
    MULTIPLICACION  reduce using rule 169 (valor_string -> STRING .)
    DIVISION        reduce using rule 169 (valor_string -> STRING .)
    MODULO          reduce using rule 169 (valor_string -> STRING .)
    MENOR_IGUAL     reduce using rule 169 (valor_string -> STRING .)
    IGUAL           reduce using rule 169 (valor_string -> STRING .)
    DIFERENTE       reduce using rule 169 (valor_string -> STRING .)
    MAYOR           reduce using rule 169 (valor_string -> STRING .)
    MAYOR_IGUAL     reduce using rule 169 (valor_string -> STRING .)
    MENOR           reduce using rule 169 (valor_string -> STRING .)
    $end            reduce using rule 169 (valor_string -> STRING .)
    I_LLAVE         reduce using rule 169 (valor_string -> STRING .)
    PUNTO_COMA      reduce using rule 169 (valor_string -> STRING .)
    D_PARENTESIS    reduce using rule 169 (valor_string -> STRING .)
    D_LLAVE         reduce using rule 169 (valor_string -> STRING .)
    ID              reduce using rule 169 (valor_string -> STRING .)
    IF              reduce using rule 169 (valor_string -> STRING .)
    ELSE            reduce using rule 169 (valor_string -> STRING .)
    ELSEIF          reduce using rule 169 (valor_string -> STRING .)
    FOR             reduce using rule 169 (valor_string -> STRING .)
    MAP             reduce using rule 169 (valor_string -> STRING .)
    MAKE            reduce using rule 169 (valor_string -> STRING .)
    TYPE            reduce using rule 169 (valor_string -> STRING .)
    I_PARENTESIS    reduce using rule 169 (valor_string -> STRING .)
    PRINTLN         reduce using rule 169 (valor_string -> STRING .)
    PRINTF          reduce using rule 169 (valor_string -> STRING .)
    PRINT           reduce using rule 169 (valor_string -> STRING .)
    VAR             reduce using rule 169 (valor_string -> STRING .)
    I_CORCHETE      reduce using rule 169 (valor_string -> STRING .)
    INT             reduce using rule 169 (valor_string -> STRING .)
    DOUBLE          reduce using rule 169 (valor_string -> STRING .)
    STRING          reduce using rule 169 (valor_string -> STRING .)
    BOOLEAN         reduce using rule 169 (valor_string -> STRING .)
    RETURN          reduce using rule 169 (valor_string -> STRING .)
    FUNC            reduce using rule 169 (valor_string -> STRING .)
    COMA            reduce using rule 169 (valor_string -> STRING .)
    BOOL            reduce using rule 169 (valor_string -> STRING .)
    STRINGTYPE      reduce using rule 169 (valor_string -> STRING .)
    INTEGER         reduce using rule 169 (valor_string -> STRING .)
    FLOAT32         reduce using rule 169 (valor_string -> STRING .)
    FLOAT64         reduce using rule 169 (valor_string -> STRING .)
    DOS_PUNTOS      reduce using rule 169 (valor_string -> STRING .)


state 58

    (2) go -> funcion go .

    $end            reduce using rule 2 (go -> funcion go .)


state 59

    (113) resultado -> expression operacion_binaria . expression
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 76
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    expression                     shift and go to state 124
    valor                          shift and go to state 14
    resultado                      shift and go to state 43
    llamada_func                   shift and go to state 74
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 60

    (150) operacion_binaria -> ADICION .

    I_PARENTESIS    reduce using rule 150 (operacion_binaria -> ADICION .)
    ID              reduce using rule 150 (operacion_binaria -> ADICION .)
    INT             reduce using rule 150 (operacion_binaria -> ADICION .)
    DOUBLE          reduce using rule 150 (operacion_binaria -> ADICION .)
    STRING          reduce using rule 150 (operacion_binaria -> ADICION .)
    BOOLEAN         reduce using rule 150 (operacion_binaria -> ADICION .)


state 61

    (151) operacion_binaria -> RESTA .

    I_PARENTESIS    reduce using rule 151 (operacion_binaria -> RESTA .)
    ID              reduce using rule 151 (operacion_binaria -> RESTA .)
    INT             reduce using rule 151 (operacion_binaria -> RESTA .)
    DOUBLE          reduce using rule 151 (operacion_binaria -> RESTA .)
    STRING          reduce using rule 151 (operacion_binaria -> RESTA .)
    BOOLEAN         reduce using rule 151 (operacion_binaria -> RESTA .)


state 62

    (152) operacion_binaria -> MULTIPLICACION .

    I_PARENTESIS    reduce using rule 152 (operacion_binaria -> MULTIPLICACION .)
    ID              reduce using rule 152 (operacion_binaria -> MULTIPLICACION .)
    INT             reduce using rule 152 (operacion_binaria -> MULTIPLICACION .)
    DOUBLE          reduce using rule 152 (operacion_binaria -> MULTIPLICACION .)
    STRING          reduce using rule 152 (operacion_binaria -> MULTIPLICACION .)
    BOOLEAN         reduce using rule 152 (operacion_binaria -> MULTIPLICACION .)


state 63

    (153) operacion_binaria -> DIVISION .

    I_PARENTESIS    reduce using rule 153 (operacion_binaria -> DIVISION .)
    ID              reduce using rule 153 (operacion_binaria -> DIVISION .)
    INT             reduce using rule 153 (operacion_binaria -> DIVISION .)
    DOUBLE          reduce using rule 153 (operacion_binaria -> DIVISION .)
    STRING          reduce using rule 153 (operacion_binaria -> DIVISION .)
    BOOLEAN         reduce using rule 153 (operacion_binaria -> DIVISION .)


state 64

    (154) operacion_binaria -> MODULO .

    I_PARENTESIS    reduce using rule 154 (operacion_binaria -> MODULO .)
    ID              reduce using rule 154 (operacion_binaria -> MODULO .)
    INT             reduce using rule 154 (operacion_binaria -> MODULO .)
    DOUBLE          reduce using rule 154 (operacion_binaria -> MODULO .)
    STRING          reduce using rule 154 (operacion_binaria -> MODULO .)
    BOOLEAN         reduce using rule 154 (operacion_binaria -> MODULO .)


state 65

    (155) operacion_binaria -> MENOR_IGUAL .

    I_PARENTESIS    reduce using rule 155 (operacion_binaria -> MENOR_IGUAL .)
    ID              reduce using rule 155 (operacion_binaria -> MENOR_IGUAL .)
    INT             reduce using rule 155 (operacion_binaria -> MENOR_IGUAL .)
    DOUBLE          reduce using rule 155 (operacion_binaria -> MENOR_IGUAL .)
    STRING          reduce using rule 155 (operacion_binaria -> MENOR_IGUAL .)
    BOOLEAN         reduce using rule 155 (operacion_binaria -> MENOR_IGUAL .)


state 66

    (156) operacion_binaria -> IGUAL .

    I_PARENTESIS    reduce using rule 156 (operacion_binaria -> IGUAL .)
    ID              reduce using rule 156 (operacion_binaria -> IGUAL .)
    INT             reduce using rule 156 (operacion_binaria -> IGUAL .)
    DOUBLE          reduce using rule 156 (operacion_binaria -> IGUAL .)
    STRING          reduce using rule 156 (operacion_binaria -> IGUAL .)
    BOOLEAN         reduce using rule 156 (operacion_binaria -> IGUAL .)


state 67

    (157) operacion_binaria -> DIFERENTE .

    I_PARENTESIS    reduce using rule 157 (operacion_binaria -> DIFERENTE .)
    ID              reduce using rule 157 (operacion_binaria -> DIFERENTE .)
    INT             reduce using rule 157 (operacion_binaria -> DIFERENTE .)
    DOUBLE          reduce using rule 157 (operacion_binaria -> DIFERENTE .)
    STRING          reduce using rule 157 (operacion_binaria -> DIFERENTE .)
    BOOLEAN         reduce using rule 157 (operacion_binaria -> DIFERENTE .)


state 68

    (158) operacion_binaria -> MAYOR .

    I_PARENTESIS    reduce using rule 158 (operacion_binaria -> MAYOR .)
    ID              reduce using rule 158 (operacion_binaria -> MAYOR .)
    INT             reduce using rule 158 (operacion_binaria -> MAYOR .)
    DOUBLE          reduce using rule 158 (operacion_binaria -> MAYOR .)
    STRING          reduce using rule 158 (operacion_binaria -> MAYOR .)
    BOOLEAN         reduce using rule 158 (operacion_binaria -> MAYOR .)


state 69

    (159) operacion_binaria -> MAYOR_IGUAL .

    I_PARENTESIS    reduce using rule 159 (operacion_binaria -> MAYOR_IGUAL .)
    ID              reduce using rule 159 (operacion_binaria -> MAYOR_IGUAL .)
    INT             reduce using rule 159 (operacion_binaria -> MAYOR_IGUAL .)
    DOUBLE          reduce using rule 159 (operacion_binaria -> MAYOR_IGUAL .)
    STRING          reduce using rule 159 (operacion_binaria -> MAYOR_IGUAL .)
    BOOLEAN         reduce using rule 159 (operacion_binaria -> MAYOR_IGUAL .)


state 70

    (160) operacion_binaria -> MENOR .

    I_PARENTESIS    reduce using rule 160 (operacion_binaria -> MENOR .)
    ID              reduce using rule 160 (operacion_binaria -> MENOR .)
    INT             reduce using rule 160 (operacion_binaria -> MENOR .)
    DOUBLE          reduce using rule 160 (operacion_binaria -> MENOR .)
    STRING          reduce using rule 160 (operacion_binaria -> MENOR .)
    BOOLEAN         reduce using rule 160 (operacion_binaria -> MENOR .)


state 71

    (16) instruccion -> print I_PARENTESIS . valores D_PARENTESIS
    (116) valores -> . valor
    (117) valores -> . valor COMA valores
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    valores                        shift and go to state 125
    valor                          shift and go to state 126
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 72

    (112) expression -> I_PARENTESIS resultado . D_PARENTESIS
    (110) expression -> resultado .

    D_PARENTESIS    shift and go to state 127
    ADICION         reduce using rule 110 (expression -> resultado .)
    RESTA           reduce using rule 110 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 110 (expression -> resultado .)
    DIVISION        reduce using rule 110 (expression -> resultado .)
    MODULO          reduce using rule 110 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 110 (expression -> resultado .)
    IGUAL           reduce using rule 110 (expression -> resultado .)
    DIFERENTE       reduce using rule 110 (expression -> resultado .)
    MAYOR           reduce using rule 110 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 110 (expression -> resultado .)
    MENOR           reduce using rule 110 (expression -> resultado .)


state 73

    (113) resultado -> expression . operacion_binaria expression
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 59

state 74

    (111) expression -> llamada_func .

    ADICION         reduce using rule 111 (expression -> llamada_func .)
    RESTA           reduce using rule 111 (expression -> llamada_func .)
    MULTIPLICACION  reduce using rule 111 (expression -> llamada_func .)
    DIVISION        reduce using rule 111 (expression -> llamada_func .)
    MODULO          reduce using rule 111 (expression -> llamada_func .)
    MENOR_IGUAL     reduce using rule 111 (expression -> llamada_func .)
    IGUAL           reduce using rule 111 (expression -> llamada_func .)
    DIFERENTE       reduce using rule 111 (expression -> llamada_func .)
    MAYOR           reduce using rule 111 (expression -> llamada_func .)
    MAYOR_IGUAL     reduce using rule 111 (expression -> llamada_func .)
    MENOR           reduce using rule 111 (expression -> llamada_func .)
    $end            reduce using rule 111 (expression -> llamada_func .)
    D_PARENTESIS    reduce using rule 111 (expression -> llamada_func .)
    PUNTO_COMA      reduce using rule 111 (expression -> llamada_func .)
    D_LLAVE         reduce using rule 111 (expression -> llamada_func .)
    ID              reduce using rule 111 (expression -> llamada_func .)
    IF              reduce using rule 111 (expression -> llamada_func .)
    ELSE            reduce using rule 111 (expression -> llamada_func .)
    ELSEIF          reduce using rule 111 (expression -> llamada_func .)
    FOR             reduce using rule 111 (expression -> llamada_func .)
    MAP             reduce using rule 111 (expression -> llamada_func .)
    MAKE            reduce using rule 111 (expression -> llamada_func .)
    TYPE            reduce using rule 111 (expression -> llamada_func .)
    I_PARENTESIS    reduce using rule 111 (expression -> llamada_func .)
    PRINTLN         reduce using rule 111 (expression -> llamada_func .)
    PRINTF          reduce using rule 111 (expression -> llamada_func .)
    PRINT           reduce using rule 111 (expression -> llamada_func .)
    VAR             reduce using rule 111 (expression -> llamada_func .)
    I_CORCHETE      reduce using rule 111 (expression -> llamada_func .)
    INT             reduce using rule 111 (expression -> llamada_func .)
    DOUBLE          reduce using rule 111 (expression -> llamada_func .)
    STRING          reduce using rule 111 (expression -> llamada_func .)
    BOOLEAN         reduce using rule 111 (expression -> llamada_func .)
    RETURN          reduce using rule 111 (expression -> llamada_func .)
    FUNC            reduce using rule 111 (expression -> llamada_func .)
    COMA            reduce using rule 111 (expression -> llamada_func .)


state 75

    (166) valor -> valor_struct .

    ADICION         reduce using rule 166 (valor -> valor_struct .)
    RESTA           reduce using rule 166 (valor -> valor_struct .)
    MULTIPLICACION  reduce using rule 166 (valor -> valor_struct .)
    DIVISION        reduce using rule 166 (valor -> valor_struct .)
    MODULO          reduce using rule 166 (valor -> valor_struct .)
    MENOR_IGUAL     reduce using rule 166 (valor -> valor_struct .)
    IGUAL           reduce using rule 166 (valor -> valor_struct .)
    DIFERENTE       reduce using rule 166 (valor -> valor_struct .)
    MAYOR           reduce using rule 166 (valor -> valor_struct .)
    MAYOR_IGUAL     reduce using rule 166 (valor -> valor_struct .)
    MENOR           reduce using rule 166 (valor -> valor_struct .)
    I_LLAVE         reduce using rule 166 (valor -> valor_struct .)
    $end            reduce using rule 166 (valor -> valor_struct .)
    D_PARENTESIS    reduce using rule 166 (valor -> valor_struct .)
    PUNTO_COMA      reduce using rule 166 (valor -> valor_struct .)
    D_LLAVE         reduce using rule 166 (valor -> valor_struct .)
    ID              reduce using rule 166 (valor -> valor_struct .)
    IF              reduce using rule 166 (valor -> valor_struct .)
    ELSE            reduce using rule 166 (valor -> valor_struct .)
    ELSEIF          reduce using rule 166 (valor -> valor_struct .)
    FOR             reduce using rule 166 (valor -> valor_struct .)
    MAP             reduce using rule 166 (valor -> valor_struct .)
    MAKE            reduce using rule 166 (valor -> valor_struct .)
    TYPE            reduce using rule 166 (valor -> valor_struct .)
    I_PARENTESIS    reduce using rule 166 (valor -> valor_struct .)
    PRINTLN         reduce using rule 166 (valor -> valor_struct .)
    PRINTF          reduce using rule 166 (valor -> valor_struct .)
    PRINT           reduce using rule 166 (valor -> valor_struct .)
    VAR             reduce using rule 166 (valor -> valor_struct .)
    I_CORCHETE      reduce using rule 166 (valor -> valor_struct .)
    INT             reduce using rule 166 (valor -> valor_struct .)
    DOUBLE          reduce using rule 166 (valor -> valor_struct .)
    STRING          reduce using rule 166 (valor -> valor_struct .)
    BOOLEAN         reduce using rule 166 (valor -> valor_struct .)
    RETURN          reduce using rule 166 (valor -> valor_struct .)
    FUNC            reduce using rule 166 (valor -> valor_struct .)
    COMA            reduce using rule 166 (valor -> valor_struct .)
    BOOL            reduce using rule 166 (valor -> valor_struct .)
    STRINGTYPE      reduce using rule 166 (valor -> valor_struct .)
    INTEGER         reduce using rule 166 (valor -> valor_struct .)
    FLOAT32         reduce using rule 166 (valor -> valor_struct .)
    FLOAT64         reduce using rule 166 (valor -> valor_struct .)
    DOS_PUNTOS      reduce using rule 166 (valor -> valor_struct .)


state 76

    (46) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (171) valor_variable -> ID .
    (101) valor_struct -> ID . PUNTO ID

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    I_PARENTESIS    shift and go to state 91
    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    $end            reduce using rule 171 (valor_variable -> ID .)
    D_PARENTESIS    reduce using rule 171 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 171 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 171 (valor_variable -> ID .)
    ID              reduce using rule 171 (valor_variable -> ID .)
    IF              reduce using rule 171 (valor_variable -> ID .)
    ELSE            reduce using rule 171 (valor_variable -> ID .)
    ELSEIF          reduce using rule 171 (valor_variable -> ID .)
    FOR             reduce using rule 171 (valor_variable -> ID .)
    MAP             reduce using rule 171 (valor_variable -> ID .)
    MAKE            reduce using rule 171 (valor_variable -> ID .)
    TYPE            reduce using rule 171 (valor_variable -> ID .)
    PRINTLN         reduce using rule 171 (valor_variable -> ID .)
    PRINTF          reduce using rule 171 (valor_variable -> ID .)
    PRINT           reduce using rule 171 (valor_variable -> ID .)
    VAR             reduce using rule 171 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 171 (valor_variable -> ID .)
    INT             reduce using rule 171 (valor_variable -> ID .)
    DOUBLE          reduce using rule 171 (valor_variable -> ID .)
    STRING          reduce using rule 171 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 171 (valor_variable -> ID .)
    RETURN          reduce using rule 171 (valor_variable -> ID .)
    FUNC            reduce using rule 171 (valor_variable -> ID .)
    COMA            reduce using rule 171 (valor_variable -> ID .)
    PUNTO           shift and go to state 94

  ! I_PARENTESIS    [ reduce using rule 171 (valor_variable -> ID .) ]


state 77

    (18) instruccion -> decla_header ASIGNACION . instruccion
    (25) declaracion_comun -> decla_header ASIGNACION . valor
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE

    ID              shift and go to state 130
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    decla_header                   shift and go to state 10
    instruccion                    shift and go to state 128
    valor                          shift and go to state 129
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 131
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49

state 78

    (19) instruccion -> decla_header array_type_spec . ASIGNACION instruccion
    (27) empty_array -> decla_header array_type_spec .

    ASIGNACION      shift and go to state 132
    $end            reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    PUNTO_COMA      reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    D_LLAVE         reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    ID              reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    IF              reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    ELSE            reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    ELSEIF          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    FOR             reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    MAP             reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    MAKE            reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    TYPE            reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    I_PARENTESIS    reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    PRINTLN         reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    PRINTF          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    PRINT           reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    VAR             reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    I_CORCHETE      reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    INT             reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    DOUBLE          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    STRING          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    BOOLEAN         reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    RETURN          reduce using rule 27 (empty_array -> decla_header array_type_spec .)
    FUNC            reduce using rule 27 (empty_array -> decla_header array_type_spec .)


state 79

    (24) declaracion_comun -> decla_header type . ASIGNACION valor

    ASIGNACION      shift and go to state 133


state 80

    (26) empty_struct -> decla_header ID .

    ASIGNACION      reduce using rule 26 (empty_struct -> decla_header ID .)
    $end            reduce using rule 26 (empty_struct -> decla_header ID .)
    PUNTO_COMA      reduce using rule 26 (empty_struct -> decla_header ID .)
    D_LLAVE         reduce using rule 26 (empty_struct -> decla_header ID .)
    ID              reduce using rule 26 (empty_struct -> decla_header ID .)
    IF              reduce using rule 26 (empty_struct -> decla_header ID .)
    ELSE            reduce using rule 26 (empty_struct -> decla_header ID .)
    ELSEIF          reduce using rule 26 (empty_struct -> decla_header ID .)
    FOR             reduce using rule 26 (empty_struct -> decla_header ID .)
    MAP             reduce using rule 26 (empty_struct -> decla_header ID .)
    MAKE            reduce using rule 26 (empty_struct -> decla_header ID .)
    TYPE            reduce using rule 26 (empty_struct -> decla_header ID .)
    I_PARENTESIS    reduce using rule 26 (empty_struct -> decla_header ID .)
    PRINTLN         reduce using rule 26 (empty_struct -> decla_header ID .)
    PRINTF          reduce using rule 26 (empty_struct -> decla_header ID .)
    PRINT           reduce using rule 26 (empty_struct -> decla_header ID .)
    VAR             reduce using rule 26 (empty_struct -> decla_header ID .)
    I_CORCHETE      reduce using rule 26 (empty_struct -> decla_header ID .)
    INT             reduce using rule 26 (empty_struct -> decla_header ID .)
    DOUBLE          reduce using rule 26 (empty_struct -> decla_header ID .)
    STRING          reduce using rule 26 (empty_struct -> decla_header ID .)
    BOOLEAN         reduce using rule 26 (empty_struct -> decla_header ID .)
    RETURN          reduce using rule 26 (empty_struct -> decla_header ID .)
    FUNC            reduce using rule 26 (empty_struct -> decla_header ID .)


state 81

    (130) array_type_spec -> array_length . INTEGER
    (131) array_type_spec -> array_length . STRINGTYPE
    (132) array_type_spec -> array_length . BOOLEAN
    (133) array_type_spec -> array_length . floating_type
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    INTEGER         shift and go to state 134
    STRINGTYPE      shift and go to state 135
    BOOLEAN         shift and go to state 136
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    floating_type                  shift and go to state 137

state 82

    (137) type -> INTEGER .

    ASIGNACION      reduce using rule 137 (type -> INTEGER .)
    D_CORCHETE      reduce using rule 137 (type -> INTEGER .)
    I_LLAVE         reduce using rule 137 (type -> INTEGER .)
    D_PARENTESIS    reduce using rule 137 (type -> INTEGER .)
    COMA            reduce using rule 137 (type -> INTEGER .)
    ID              reduce using rule 137 (type -> INTEGER .)
    D_LLAVE         reduce using rule 137 (type -> INTEGER .)


state 83

    (136) type -> STRINGTYPE .

    ASIGNACION      reduce using rule 136 (type -> STRINGTYPE .)
    D_CORCHETE      reduce using rule 136 (type -> STRINGTYPE .)
    I_LLAVE         reduce using rule 136 (type -> STRINGTYPE .)
    D_PARENTESIS    reduce using rule 136 (type -> STRINGTYPE .)
    COMA            reduce using rule 136 (type -> STRINGTYPE .)
    ID              reduce using rule 136 (type -> STRINGTYPE .)
    D_LLAVE         reduce using rule 136 (type -> STRINGTYPE .)


state 84

    (138) type -> floating_type .

    ASIGNACION      reduce using rule 138 (type -> floating_type .)
    D_CORCHETE      reduce using rule 138 (type -> floating_type .)
    I_LLAVE         reduce using rule 138 (type -> floating_type .)
    D_PARENTESIS    reduce using rule 138 (type -> floating_type .)
    COMA            reduce using rule 138 (type -> floating_type .)
    ID              reduce using rule 138 (type -> floating_type .)
    D_LLAVE         reduce using rule 138 (type -> floating_type .)


state 85

    (135) type -> BOOL .

    ASIGNACION      reduce using rule 135 (type -> BOOL .)
    D_CORCHETE      reduce using rule 135 (type -> BOOL .)
    I_LLAVE         reduce using rule 135 (type -> BOOL .)
    D_PARENTESIS    reduce using rule 135 (type -> BOOL .)
    COMA            reduce using rule 135 (type -> BOOL .)
    ID              reduce using rule 135 (type -> BOOL .)
    D_LLAVE         reduce using rule 135 (type -> BOOL .)


state 86

    (134) array_length -> I_CORCHETE . INT D_CORCHETE

    INT             shift and go to state 114


state 87

    (139) floating_type -> FLOAT32 .

    ASIGNACION      reduce using rule 139 (floating_type -> FLOAT32 .)
    I_LLAVE         reduce using rule 139 (floating_type -> FLOAT32 .)
    $end            reduce using rule 139 (floating_type -> FLOAT32 .)
    PUNTO_COMA      reduce using rule 139 (floating_type -> FLOAT32 .)
    D_LLAVE         reduce using rule 139 (floating_type -> FLOAT32 .)
    ID              reduce using rule 139 (floating_type -> FLOAT32 .)
    IF              reduce using rule 139 (floating_type -> FLOAT32 .)
    ELSE            reduce using rule 139 (floating_type -> FLOAT32 .)
    ELSEIF          reduce using rule 139 (floating_type -> FLOAT32 .)
    FOR             reduce using rule 139 (floating_type -> FLOAT32 .)
    MAP             reduce using rule 139 (floating_type -> FLOAT32 .)
    MAKE            reduce using rule 139 (floating_type -> FLOAT32 .)
    TYPE            reduce using rule 139 (floating_type -> FLOAT32 .)
    I_PARENTESIS    reduce using rule 139 (floating_type -> FLOAT32 .)
    PRINTLN         reduce using rule 139 (floating_type -> FLOAT32 .)
    PRINTF          reduce using rule 139 (floating_type -> FLOAT32 .)
    PRINT           reduce using rule 139 (floating_type -> FLOAT32 .)
    VAR             reduce using rule 139 (floating_type -> FLOAT32 .)
    I_CORCHETE      reduce using rule 139 (floating_type -> FLOAT32 .)
    INT             reduce using rule 139 (floating_type -> FLOAT32 .)
    DOUBLE          reduce using rule 139 (floating_type -> FLOAT32 .)
    STRING          reduce using rule 139 (floating_type -> FLOAT32 .)
    BOOLEAN         reduce using rule 139 (floating_type -> FLOAT32 .)
    RETURN          reduce using rule 139 (floating_type -> FLOAT32 .)
    FUNC            reduce using rule 139 (floating_type -> FLOAT32 .)
    D_CORCHETE      reduce using rule 139 (floating_type -> FLOAT32 .)
    D_PARENTESIS    reduce using rule 139 (floating_type -> FLOAT32 .)
    COMA            reduce using rule 139 (floating_type -> FLOAT32 .)


state 88

    (140) floating_type -> FLOAT64 .

    ASIGNACION      reduce using rule 140 (floating_type -> FLOAT64 .)
    I_LLAVE         reduce using rule 140 (floating_type -> FLOAT64 .)
    $end            reduce using rule 140 (floating_type -> FLOAT64 .)
    PUNTO_COMA      reduce using rule 140 (floating_type -> FLOAT64 .)
    D_LLAVE         reduce using rule 140 (floating_type -> FLOAT64 .)
    ID              reduce using rule 140 (floating_type -> FLOAT64 .)
    IF              reduce using rule 140 (floating_type -> FLOAT64 .)
    ELSE            reduce using rule 140 (floating_type -> FLOAT64 .)
    ELSEIF          reduce using rule 140 (floating_type -> FLOAT64 .)
    FOR             reduce using rule 140 (floating_type -> FLOAT64 .)
    MAP             reduce using rule 140 (floating_type -> FLOAT64 .)
    MAKE            reduce using rule 140 (floating_type -> FLOAT64 .)
    TYPE            reduce using rule 140 (floating_type -> FLOAT64 .)
    I_PARENTESIS    reduce using rule 140 (floating_type -> FLOAT64 .)
    PRINTLN         reduce using rule 140 (floating_type -> FLOAT64 .)
    PRINTF          reduce using rule 140 (floating_type -> FLOAT64 .)
    PRINT           reduce using rule 140 (floating_type -> FLOAT64 .)
    VAR             reduce using rule 140 (floating_type -> FLOAT64 .)
    I_CORCHETE      reduce using rule 140 (floating_type -> FLOAT64 .)
    INT             reduce using rule 140 (floating_type -> FLOAT64 .)
    DOUBLE          reduce using rule 140 (floating_type -> FLOAT64 .)
    STRING          reduce using rule 140 (floating_type -> FLOAT64 .)
    BOOLEAN         reduce using rule 140 (floating_type -> FLOAT64 .)
    RETURN          reduce using rule 140 (floating_type -> FLOAT64 .)
    FUNC            reduce using rule 140 (floating_type -> FLOAT64 .)
    D_CORCHETE      reduce using rule 140 (floating_type -> FLOAT64 .)
    D_PARENTESIS    reduce using rule 140 (floating_type -> FLOAT64 .)
    COMA            reduce using rule 140 (floating_type -> FLOAT64 .)


state 89

    (95) init_struct -> empty_struct ASIGNACION . ID I_LLAVE valores D_LLAVE
    (97) init_struct -> empty_struct ASIGNACION . ID I_LLAVE atributos_nombrados D_LLAVE

    ID              shift and go to state 138


state 90

    (22) instruccion -> ID asignacion . valor
    (23) instruccion -> ID asignacion . instruccion
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE

    ID              shift and go to state 139
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36

    valor                          shift and go to state 140
    instruccion                    shift and go to state 141
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 131
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49

state 91

    (46) llamada_func -> ID I_PARENTESIS . llamada_params D_PARENTESIS
    (47) llamada_params -> . expression
    (48) llamada_params -> . expression COMA llamada_params
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 76
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    llamada_params                 shift and go to state 142
    expression                     shift and go to state 143
    valor                          shift and go to state 14
    resultado                      shift and go to state 43
    llamada_func                   shift and go to state 74
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 92

    (114) resultado_inc_dec -> ID operador_matematico .

    $end            reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    PUNTO_COMA      reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    D_LLAVE         reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    ID              reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    IF              reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    ELSE            reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    ELSEIF          reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    FOR             reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    MAP             reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    MAKE            reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    TYPE            reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    I_PARENTESIS    reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    PRINTLN         reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    PRINTF          reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    PRINT           reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    VAR             reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    I_CORCHETE      reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    INT             reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    DOUBLE          reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    STRING          reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    BOOLEAN         reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    RETURN          reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)
    FUNC            reduce using rule 114 (resultado_inc_dec -> ID operador_matematico .)


state 93

    (96) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE valores D_LLAVE
    (98) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE atributos_nombrados D_LLAVE
    (147) asignacion -> DECLARACION_ASIGNACION .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 144
    IF              reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    ELSE            reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    ELSEIF          reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    FOR             reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    MAP             reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    MAKE            reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    TYPE            reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    INT             reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    BOOLEAN         reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    I_PARENTESIS    reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTLN         reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTF          reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    PRINT           reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    VAR             reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    I_CORCHETE      reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)

  ! ID              [ reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .) ]


state 94

    (101) valor_struct -> ID PUNTO . ID

    ID              shift and go to state 145


state 95

    (143) asignacion -> ASIGNACION .

    ID              reduce using rule 143 (asignacion -> ASIGNACION .)
    IF              reduce using rule 143 (asignacion -> ASIGNACION .)
    ELSE            reduce using rule 143 (asignacion -> ASIGNACION .)
    ELSEIF          reduce using rule 143 (asignacion -> ASIGNACION .)
    FOR             reduce using rule 143 (asignacion -> ASIGNACION .)
    MAP             reduce using rule 143 (asignacion -> ASIGNACION .)
    MAKE            reduce using rule 143 (asignacion -> ASIGNACION .)
    TYPE            reduce using rule 143 (asignacion -> ASIGNACION .)
    INT             reduce using rule 143 (asignacion -> ASIGNACION .)
    DOUBLE          reduce using rule 143 (asignacion -> ASIGNACION .)
    STRING          reduce using rule 143 (asignacion -> ASIGNACION .)
    BOOLEAN         reduce using rule 143 (asignacion -> ASIGNACION .)
    I_PARENTESIS    reduce using rule 143 (asignacion -> ASIGNACION .)
    PRINTLN         reduce using rule 143 (asignacion -> ASIGNACION .)
    PRINTF          reduce using rule 143 (asignacion -> ASIGNACION .)
    PRINT           reduce using rule 143 (asignacion -> ASIGNACION .)
    VAR             reduce using rule 143 (asignacion -> ASIGNACION .)
    I_CORCHETE      reduce using rule 143 (asignacion -> ASIGNACION .)


state 96

    (144) asignacion -> ASIGNACION_ADICION .

    ID              reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    IF              reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    ELSE            reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    ELSEIF          reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    FOR             reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    MAP             reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    MAKE            reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    TYPE            reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    INT             reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    DOUBLE          reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    STRING          reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    BOOLEAN         reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    I_PARENTESIS    reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    PRINTLN         reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    PRINTF          reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    PRINT           reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    VAR             reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)
    I_CORCHETE      reduce using rule 144 (asignacion -> ASIGNACION_ADICION .)


state 97

    (145) asignacion -> ASIGNACION_RESTA .

    ID              reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    IF              reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    ELSE            reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    ELSEIF          reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    FOR             reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    MAP             reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    MAKE            reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    TYPE            reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    INT             reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    DOUBLE          reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    STRING          reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    BOOLEAN         reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    I_PARENTESIS    reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    PRINTLN         reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    PRINTF          reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    PRINT           reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    VAR             reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)
    I_CORCHETE      reduce using rule 145 (asignacion -> ASIGNACION_RESTA .)


state 98

    (146) asignacion -> ASIGNACION_MULTI .

    ID              reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    IF              reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    ELSE            reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    ELSEIF          reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    FOR             reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    MAP             reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    MAKE            reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    TYPE            reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    INT             reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    DOUBLE          reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    STRING          reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    BOOLEAN         reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    I_PARENTESIS    reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    PRINTLN         reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    PRINTF          reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    PRINT           reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    VAR             reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)
    I_CORCHETE      reduce using rule 146 (asignacion -> ASIGNACION_MULTI .)


state 99

    (148) asignacion -> ASIGNACION_DIVISION .

    ID              reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    IF              reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    ELSE            reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    ELSEIF          reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    FOR             reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    MAP             reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    MAKE            reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    TYPE            reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    INT             reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    DOUBLE          reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    STRING          reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    BOOLEAN         reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    I_PARENTESIS    reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    PRINTLN         reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    PRINTF          reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    PRINT           reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    VAR             reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)
    I_CORCHETE      reduce using rule 148 (asignacion -> ASIGNACION_DIVISION .)


state 100

    (149) asignacion -> ASIGNACION_MODULO .

    ID              reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    IF              reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    ELSE            reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    ELSEIF          reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    FOR             reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    MAP             reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    MAKE            reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    TYPE            reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    INT             reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    DOUBLE          reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    STRING          reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    BOOLEAN         reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    I_PARENTESIS    reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    PRINTLN         reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    PRINTF          reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    PRINT           reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    VAR             reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)
    I_CORCHETE      reduce using rule 149 (asignacion -> ASIGNACION_MODULO .)


state 101

    (141) operador_matematico -> INCREMENTO .

    $end            reduce using rule 141 (operador_matematico -> INCREMENTO .)
    D_LLAVE         reduce using rule 141 (operador_matematico -> INCREMENTO .)
    PUNTO_COMA      reduce using rule 141 (operador_matematico -> INCREMENTO .)
    ID              reduce using rule 141 (operador_matematico -> INCREMENTO .)
    IF              reduce using rule 141 (operador_matematico -> INCREMENTO .)
    ELSE            reduce using rule 141 (operador_matematico -> INCREMENTO .)
    ELSEIF          reduce using rule 141 (operador_matematico -> INCREMENTO .)
    FOR             reduce using rule 141 (operador_matematico -> INCREMENTO .)
    MAP             reduce using rule 141 (operador_matematico -> INCREMENTO .)
    MAKE            reduce using rule 141 (operador_matematico -> INCREMENTO .)
    TYPE            reduce using rule 141 (operador_matematico -> INCREMENTO .)
    I_PARENTESIS    reduce using rule 141 (operador_matematico -> INCREMENTO .)
    PRINTLN         reduce using rule 141 (operador_matematico -> INCREMENTO .)
    PRINTF          reduce using rule 141 (operador_matematico -> INCREMENTO .)
    PRINT           reduce using rule 141 (operador_matematico -> INCREMENTO .)
    VAR             reduce using rule 141 (operador_matematico -> INCREMENTO .)
    I_CORCHETE      reduce using rule 141 (operador_matematico -> INCREMENTO .)
    INT             reduce using rule 141 (operador_matematico -> INCREMENTO .)
    DOUBLE          reduce using rule 141 (operador_matematico -> INCREMENTO .)
    STRING          reduce using rule 141 (operador_matematico -> INCREMENTO .)
    BOOLEAN         reduce using rule 141 (operador_matematico -> INCREMENTO .)
    RETURN          reduce using rule 141 (operador_matematico -> INCREMENTO .)
    FUNC            reduce using rule 141 (operador_matematico -> INCREMENTO .)
    I_LLAVE         reduce using rule 141 (operador_matematico -> INCREMENTO .)


state 102

    (142) operador_matematico -> DECREMENTO .

    $end            reduce using rule 142 (operador_matematico -> DECREMENTO .)
    D_LLAVE         reduce using rule 142 (operador_matematico -> DECREMENTO .)
    PUNTO_COMA      reduce using rule 142 (operador_matematico -> DECREMENTO .)
    ID              reduce using rule 142 (operador_matematico -> DECREMENTO .)
    IF              reduce using rule 142 (operador_matematico -> DECREMENTO .)
    ELSE            reduce using rule 142 (operador_matematico -> DECREMENTO .)
    ELSEIF          reduce using rule 142 (operador_matematico -> DECREMENTO .)
    FOR             reduce using rule 142 (operador_matematico -> DECREMENTO .)
    MAP             reduce using rule 142 (operador_matematico -> DECREMENTO .)
    MAKE            reduce using rule 142 (operador_matematico -> DECREMENTO .)
    TYPE            reduce using rule 142 (operador_matematico -> DECREMENTO .)
    I_PARENTESIS    reduce using rule 142 (operador_matematico -> DECREMENTO .)
    PRINTLN         reduce using rule 142 (operador_matematico -> DECREMENTO .)
    PRINTF          reduce using rule 142 (operador_matematico -> DECREMENTO .)
    PRINT           reduce using rule 142 (operador_matematico -> DECREMENTO .)
    VAR             reduce using rule 142 (operador_matematico -> DECREMENTO .)
    I_CORCHETE      reduce using rule 142 (operador_matematico -> DECREMENTO .)
    INT             reduce using rule 142 (operador_matematico -> DECREMENTO .)
    DOUBLE          reduce using rule 142 (operador_matematico -> DECREMENTO .)
    STRING          reduce using rule 142 (operador_matematico -> DECREMENTO .)
    BOOLEAN         reduce using rule 142 (operador_matematico -> DECREMENTO .)
    RETURN          reduce using rule 142 (operador_matematico -> DECREMENTO .)
    FUNC            reduce using rule 142 (operador_matematico -> DECREMENTO .)
    I_LLAVE         reduce using rule 142 (operador_matematico -> DECREMENTO .)


state 103

    (126) valor -> valor operacion_binaria . valor
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    valor                          shift and go to state 146
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 104

    (49) instruccion -> IF condicion . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 147


state 105

    (106) condicion -> valor .
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    I_LLAVE         reduce using rule 106 (condicion -> valor .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 103

state 106

    (107) condicion -> I_PARENTESIS . valor D_PARENTESIS
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    valor                          shift and go to state 148
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 107

    (171) valor_variable -> ID .
    (101) valor_struct -> ID . PUNTO ID

    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    I_LLAVE         reduce using rule 171 (valor_variable -> ID .)
    COMA            reduce using rule 171 (valor_variable -> ID .)
    D_PARENTESIS    reduce using rule 171 (valor_variable -> ID .)
    $end            reduce using rule 171 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 171 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 171 (valor_variable -> ID .)
    ID              reduce using rule 171 (valor_variable -> ID .)
    IF              reduce using rule 171 (valor_variable -> ID .)
    ELSE            reduce using rule 171 (valor_variable -> ID .)
    ELSEIF          reduce using rule 171 (valor_variable -> ID .)
    FOR             reduce using rule 171 (valor_variable -> ID .)
    MAP             reduce using rule 171 (valor_variable -> ID .)
    MAKE            reduce using rule 171 (valor_variable -> ID .)
    TYPE            reduce using rule 171 (valor_variable -> ID .)
    I_PARENTESIS    reduce using rule 171 (valor_variable -> ID .)
    PRINTLN         reduce using rule 171 (valor_variable -> ID .)
    PRINTF          reduce using rule 171 (valor_variable -> ID .)
    PRINT           reduce using rule 171 (valor_variable -> ID .)
    VAR             reduce using rule 171 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 171 (valor_variable -> ID .)
    INT             reduce using rule 171 (valor_variable -> ID .)
    DOUBLE          reduce using rule 171 (valor_variable -> ID .)
    STRING          reduce using rule 171 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 171 (valor_variable -> ID .)
    RETURN          reduce using rule 171 (valor_variable -> ID .)
    FUNC            reduce using rule 171 (valor_variable -> ID .)
    BOOL            reduce using rule 171 (valor_variable -> ID .)
    STRINGTYPE      reduce using rule 171 (valor_variable -> ID .)
    INTEGER         reduce using rule 171 (valor_variable -> ID .)
    FLOAT32         reduce using rule 171 (valor_variable -> ID .)
    FLOAT64         reduce using rule 171 (valor_variable -> ID .)
    DOS_PUNTOS      reduce using rule 171 (valor_variable -> ID .)
    PUNTO           shift and go to state 94


state 108

    (50) instruccion -> ELSE I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    I_LLAVE         shift and go to state 149
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    body                           shift and go to state 150
    instruccion                    shift and go to state 151
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 109

    (51) instruccion -> ELSEIF condicion . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 152


state 110

    (52) instruccion -> FOR ID . DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (54) instruccion -> FOR ID . COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (22) instruccion -> ID . asignacion valor
    (23) instruccion -> ID . asignacion instruccion
    (46) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> ID . operador_matematico
    (96) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (98) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> ID . PUNTO ID
    (171) valor_variable -> ID .
    (143) asignacion -> . ASIGNACION
    (144) asignacion -> . ASIGNACION_ADICION
    (145) asignacion -> . ASIGNACION_RESTA
    (146) asignacion -> . ASIGNACION_MULTI
    (147) asignacion -> . DECLARACION_ASIGNACION
    (148) asignacion -> . ASIGNACION_DIVISION
    (149) asignacion -> . ASIGNACION_MODULO
    (141) operador_matematico -> . INCREMENTO
    (142) operador_matematico -> . DECREMENTO

    DECLARACION_ASIGNACION shift and go to state 153
    COMA            shift and go to state 154
    I_PARENTESIS    shift and go to state 91
    PUNTO           shift and go to state 94
    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 171 (valor_variable -> ID .)
    ASIGNACION      shift and go to state 95
    ASIGNACION_ADICION shift and go to state 96
    ASIGNACION_RESTA shift and go to state 97
    ASIGNACION_MULTI shift and go to state 98
    ASIGNACION_DIVISION shift and go to state 99
    ASIGNACION_MODULO shift and go to state 100
    INCREMENTO      shift and go to state 101
    DECREMENTO      shift and go to state 102

    asignacion                     shift and go to state 90
    operador_matematico            shift and go to state 92

state 111

    (53) instruccion -> FOR instruccion . PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE

    PUNTO_COMA      shift and go to state 155


state 112

    (87) instruccion -> MAP I_CORCHETE . type D_CORCHETE type I_LLAVE D_LLAVE
    (89) instruccion -> MAP I_CORCHETE . type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (135) type -> . BOOL
    (136) type -> . STRINGTYPE
    (137) type -> . INTEGER
    (138) type -> . floating_type
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    BOOL            shift and go to state 85
    STRINGTYPE      shift and go to state 83
    INTEGER         shift and go to state 82
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    type                           shift and go to state 156
    floating_type                  shift and go to state 84

state 113

    (71) array_int -> I_CORCHETE D_CORCHETE . INTEGER I_LLAVE D_LLAVE
    (72) array_double -> I_CORCHETE D_CORCHETE . floating_type I_LLAVE D_LLAVE
    (73) array_string -> I_CORCHETE D_CORCHETE . STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> I_CORCHETE D_CORCHETE . BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> I_CORCHETE D_CORCHETE . INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> I_CORCHETE D_CORCHETE . floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> I_CORCHETE D_CORCHETE . STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> I_CORCHETE D_CORCHETE . BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    INTEGER         shift and go to state 157
    STRINGTYPE      shift and go to state 159
    BOOLEAN         shift and go to state 160
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    floating_type                  shift and go to state 158

state 114

    (134) array_length -> I_CORCHETE INT . D_CORCHETE

    D_CORCHETE      shift and go to state 161


state 115

    (88) instruccion -> MAKE I_PARENTESIS . MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS

    MAP             shift and go to state 162


state 116

    (90) instruccion -> TYPE ID . STRUCT I_LLAVE atributos_struct D_LLAVE

    STRUCT          shift and go to state 163


state 117

    (29) funcion -> FUNC ID . cuerpo_fun
    (31) funcion_no_type -> FUNC ID . parametros_sin_tipo body
    (32) cuerpo_fun -> . parametrosMetodo body
    (42) parametros_sin_tipo -> . I_PARENTESIS parametros D_PARENTESIS
    (33) parametrosMetodo -> . parametrosMetodoInt
    (34) parametrosMetodo -> . parametrosMetodoString
    (35) parametrosMetodo -> . parametrosMetodoDouble
    (36) parametrosMetodo -> . parametrosMetodoBool
    (37) parametrosMetodo -> . parametros_sin_tipo
    (38) parametrosMetodoInt -> . parametros_sin_tipo INTEGER
    (39) parametrosMetodoString -> . parametros_sin_tipo STRINGTYPE
    (40) parametrosMetodoDouble -> . parametros_sin_tipo floating_type
    (41) parametrosMetodoBool -> . ID BOOL

    I_PARENTESIS    shift and go to state 168
    ID              shift and go to state 164

    cuerpo_fun                     shift and go to state 165
    parametros_sin_tipo            shift and go to state 166
    parametrosMetodo               shift and go to state 167
    parametrosMetodoInt            shift and go to state 169
    parametrosMetodoString         shift and go to state 170
    parametrosMetodoDouble         shift and go to state 171
    parametrosMetodoBool           shift and go to state 172

state 118

    (115) resultado_inc_dec -> valor_struct operador_matematico .

    $end            reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    PUNTO_COMA      reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    D_LLAVE         reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    ID              reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    IF              reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    ELSE            reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    ELSEIF          reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    FOR             reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    MAP             reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    MAKE            reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    TYPE            reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    I_PARENTESIS    reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    PRINTLN         reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    PRINTF          reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    PRINT           reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    VAR             reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    I_CORCHETE      reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    INT             reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    DOUBLE          reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    STRING          reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    BOOLEAN         reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    RETURN          reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)
    FUNC            reduce using rule 115 (resultado_inc_dec -> valor_struct operador_matematico .)


state 119

    (28) decla_header -> VAR ID .

    ASIGNACION      reduce using rule 28 (decla_header -> VAR ID .)
    ID              reduce using rule 28 (decla_header -> VAR ID .)
    BOOL            reduce using rule 28 (decla_header -> VAR ID .)
    STRINGTYPE      reduce using rule 28 (decla_header -> VAR ID .)
    INTEGER         reduce using rule 28 (decla_header -> VAR ID .)
    I_CORCHETE      reduce using rule 28 (decla_header -> VAR ID .)
    FLOAT32         reduce using rule 28 (decla_header -> VAR ID .)
    FLOAT64         reduce using rule 28 (decla_header -> VAR ID .)


state 120

    (75) array_length_int -> array_length INTEGER . I_LLAVE D_LLAVE
    (83) array_length_con_valores_int -> array_length INTEGER . I_LLAVE valores_int D_LLAVE

    I_LLAVE         shift and go to state 173


state 121

    (76) array_length_double -> array_length floating_type . I_LLAVE D_LLAVE
    (84) array_length_con_valores_double -> array_length floating_type . I_LLAVE valores_double D_LLAVE

    I_LLAVE         shift and go to state 174


state 122

    (77) array_length_string -> array_length STRINGTYPE . I_LLAVE D_LLAVE
    (85) array_length_con_valores_string -> array_length STRINGTYPE . I_LLAVE valores_string D_LLAVE

    I_LLAVE         shift and go to state 175


state 123

    (78) array_length_boolean -> array_length BOOLEAN . I_LLAVE D_LLAVE
    (86) array_length_con_valores_boolean -> array_length BOOLEAN . I_LLAVE valores_boolean D_LLAVE

    I_LLAVE         shift and go to state 176


state 124

    (113) resultado -> expression operacion_binaria expression .
    (113) resultado -> expression . operacion_binaria expression
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    D_PARENTESIS    reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    PUNTO_COMA      reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    D_LLAVE         reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    ID              reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    IF              reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    ELSE            reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    ELSEIF          reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    FOR             reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    MAP             reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    MAKE            reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    TYPE            reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    I_PARENTESIS    reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    PRINTLN         reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    PRINTF          reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    PRINT           reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    VAR             reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    I_CORCHETE      reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    INT             reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    DOUBLE          reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    STRING          reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    BOOLEAN         reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    RETURN          reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    FUNC            reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    COMA            reduce using rule 113 (resultado -> expression operacion_binaria expression .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

  ! ADICION         [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! RESTA           [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! MULTIPLICACION  [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! DIVISION        [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! MODULO          [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! IGUAL           [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! DIFERENTE       [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! MAYOR           [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]
  ! MENOR           [ reduce using rule 113 (resultado -> expression operacion_binaria expression .) ]

    operacion_binaria              shift and go to state 59

state 125

    (16) instruccion -> print I_PARENTESIS valores . D_PARENTESIS

    D_PARENTESIS    shift and go to state 177


state 126

    (116) valores -> valor .
    (117) valores -> valor . COMA valores
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 116 (valores -> valor .)
    BOOL            reduce using rule 116 (valores -> valor .)
    STRINGTYPE      reduce using rule 116 (valores -> valor .)
    INTEGER         reduce using rule 116 (valores -> valor .)
    FLOAT32         reduce using rule 116 (valores -> valor .)
    FLOAT64         reduce using rule 116 (valores -> valor .)
    D_LLAVE         reduce using rule 116 (valores -> valor .)
    COMA            shift and go to state 178
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 103

state 127

    (112) expression -> I_PARENTESIS resultado D_PARENTESIS .

    ADICION         reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    RESTA           reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MULTIPLICACION  reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DIVISION        reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MODULO          reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MENOR_IGUAL     reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    IGUAL           reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DIFERENTE       reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAYOR           reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAYOR_IGUAL     reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MENOR           reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    $end            reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    D_PARENTESIS    reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    D_LLAVE         reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ID              reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    IF              reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ELSE            reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    ELSEIF          reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    FOR             reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAP             reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    MAKE            reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    TYPE            reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINTLN         reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINTF          reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    PRINT           reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    VAR             reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    I_CORCHETE      reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    INT             reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    DOUBLE          reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    STRING          reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    BOOLEAN         reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    RETURN          reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    FUNC            reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)
    COMA            reduce using rule 112 (expression -> I_PARENTESIS resultado D_PARENTESIS .)


state 128

    (18) instruccion -> decla_header ASIGNACION instruccion .

    $end            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    PUNTO_COMA      reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    D_LLAVE         reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    ID              reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    IF              reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    ELSE            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    ELSEIF          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    FOR             reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    MAP             reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    MAKE            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    TYPE            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    I_PARENTESIS    reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    PRINTLN         reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    PRINTF          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    PRINT           reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    VAR             reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    I_CORCHETE      reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    INT             reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    DOUBLE          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    STRING          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    BOOLEAN         reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    RETURN          reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)
    FUNC            reduce using rule 18 (instruccion -> decla_header ASIGNACION instruccion .)


state 129

    (25) declaracion_comun -> decla_header ASIGNACION valor .
    (126) valor -> valor . operacion_binaria valor
    (109) expression -> valor .
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

  ! reduce/reduce conflict for $end resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for ID resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for IF resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for ELSE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for FOR resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for MAP resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for MAKE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for TYPE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for PRINTF resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for PRINT resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for VAR resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for INT resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for STRING resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for RETURN resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! reduce/reduce conflict for FUNC resolved using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    PUNTO_COMA      reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    D_LLAVE         reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    ID              reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    IF              reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    ELSE            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    ELSEIF          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    FOR             reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    MAP             reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    MAKE            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    TYPE            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    I_PARENTESIS    reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    PRINTLN         reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    PRINTF          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    PRINT           reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    VAR             reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    I_CORCHETE      reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    INT             reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    DOUBLE          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    STRING          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    BOOLEAN         reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    RETURN          reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    FUNC            reduce using rule 25 (declaracion_comun -> decla_header ASIGNACION valor .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

  ! ADICION         [ reduce using rule 109 (expression -> valor .) ]
  ! RESTA           [ reduce using rule 109 (expression -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 109 (expression -> valor .) ]
  ! DIVISION        [ reduce using rule 109 (expression -> valor .) ]
  ! MODULO          [ reduce using rule 109 (expression -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 109 (expression -> valor .) ]
  ! IGUAL           [ reduce using rule 109 (expression -> valor .) ]
  ! DIFERENTE       [ reduce using rule 109 (expression -> valor .) ]
  ! MAYOR           [ reduce using rule 109 (expression -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 109 (expression -> valor .) ]
  ! MENOR           [ reduce using rule 109 (expression -> valor .) ]
  ! $end            [ reduce using rule 109 (expression -> valor .) ]
  ! PUNTO_COMA      [ reduce using rule 109 (expression -> valor .) ]
  ! D_LLAVE         [ reduce using rule 109 (expression -> valor .) ]
  ! ID              [ reduce using rule 109 (expression -> valor .) ]
  ! IF              [ reduce using rule 109 (expression -> valor .) ]
  ! ELSE            [ reduce using rule 109 (expression -> valor .) ]
  ! ELSEIF          [ reduce using rule 109 (expression -> valor .) ]
  ! FOR             [ reduce using rule 109 (expression -> valor .) ]
  ! MAP             [ reduce using rule 109 (expression -> valor .) ]
  ! MAKE            [ reduce using rule 109 (expression -> valor .) ]
  ! TYPE            [ reduce using rule 109 (expression -> valor .) ]
  ! I_PARENTESIS    [ reduce using rule 109 (expression -> valor .) ]
  ! PRINTLN         [ reduce using rule 109 (expression -> valor .) ]
  ! PRINTF          [ reduce using rule 109 (expression -> valor .) ]
  ! PRINT           [ reduce using rule 109 (expression -> valor .) ]
  ! VAR             [ reduce using rule 109 (expression -> valor .) ]
  ! I_CORCHETE      [ reduce using rule 109 (expression -> valor .) ]
  ! INT             [ reduce using rule 109 (expression -> valor .) ]
  ! DOUBLE          [ reduce using rule 109 (expression -> valor .) ]
  ! STRING          [ reduce using rule 109 (expression -> valor .) ]
  ! BOOLEAN         [ reduce using rule 109 (expression -> valor .) ]
  ! RETURN          [ reduce using rule 109 (expression -> valor .) ]
  ! FUNC            [ reduce using rule 109 (expression -> valor .) ]

    operacion_binaria              shift and go to state 103

state 130

    (22) instruccion -> ID . asignacion valor
    (23) instruccion -> ID . asignacion instruccion
    (46) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> ID . operador_matematico
    (96) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (98) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (171) valor_variable -> ID .
    (101) valor_struct -> ID . PUNTO ID
    (143) asignacion -> . ASIGNACION
    (144) asignacion -> . ASIGNACION_ADICION
    (145) asignacion -> . ASIGNACION_RESTA
    (146) asignacion -> . ASIGNACION_MULTI
    (147) asignacion -> . DECLARACION_ASIGNACION
    (148) asignacion -> . ASIGNACION_DIVISION
    (149) asignacion -> . ASIGNACION_MODULO
    (141) operador_matematico -> . INCREMENTO
    (142) operador_matematico -> . DECREMENTO

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    I_PARENTESIS    shift and go to state 91
    DECLARACION_ASIGNACION shift and go to state 93
    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    $end            reduce using rule 171 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 171 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 171 (valor_variable -> ID .)
    ID              reduce using rule 171 (valor_variable -> ID .)
    IF              reduce using rule 171 (valor_variable -> ID .)
    ELSE            reduce using rule 171 (valor_variable -> ID .)
    ELSEIF          reduce using rule 171 (valor_variable -> ID .)
    FOR             reduce using rule 171 (valor_variable -> ID .)
    MAP             reduce using rule 171 (valor_variable -> ID .)
    MAKE            reduce using rule 171 (valor_variable -> ID .)
    TYPE            reduce using rule 171 (valor_variable -> ID .)
    PRINTLN         reduce using rule 171 (valor_variable -> ID .)
    PRINTF          reduce using rule 171 (valor_variable -> ID .)
    PRINT           reduce using rule 171 (valor_variable -> ID .)
    VAR             reduce using rule 171 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 171 (valor_variable -> ID .)
    INT             reduce using rule 171 (valor_variable -> ID .)
    DOUBLE          reduce using rule 171 (valor_variable -> ID .)
    STRING          reduce using rule 171 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 171 (valor_variable -> ID .)
    RETURN          reduce using rule 171 (valor_variable -> ID .)
    FUNC            reduce using rule 171 (valor_variable -> ID .)
    PUNTO           shift and go to state 94
    ASIGNACION      shift and go to state 95
    ASIGNACION_ADICION shift and go to state 96
    ASIGNACION_RESTA shift and go to state 97
    ASIGNACION_MULTI shift and go to state 98
    ASIGNACION_DIVISION shift and go to state 99
    ASIGNACION_MODULO shift and go to state 100
    INCREMENTO      shift and go to state 101
    DECREMENTO      shift and go to state 102

  ! I_PARENTESIS    [ reduce using rule 171 (valor_variable -> ID .) ]

    asignacion                     shift and go to state 90
    operador_matematico            shift and go to state 92

state 131

    (166) valor -> valor_struct .
    (115) resultado_inc_dec -> valor_struct . operador_matematico
    (141) operador_matematico -> . INCREMENTO
    (142) operador_matematico -> . DECREMENTO

    ADICION         reduce using rule 166 (valor -> valor_struct .)
    RESTA           reduce using rule 166 (valor -> valor_struct .)
    MULTIPLICACION  reduce using rule 166 (valor -> valor_struct .)
    DIVISION        reduce using rule 166 (valor -> valor_struct .)
    MODULO          reduce using rule 166 (valor -> valor_struct .)
    MENOR_IGUAL     reduce using rule 166 (valor -> valor_struct .)
    IGUAL           reduce using rule 166 (valor -> valor_struct .)
    DIFERENTE       reduce using rule 166 (valor -> valor_struct .)
    MAYOR           reduce using rule 166 (valor -> valor_struct .)
    MAYOR_IGUAL     reduce using rule 166 (valor -> valor_struct .)
    MENOR           reduce using rule 166 (valor -> valor_struct .)
    $end            reduce using rule 166 (valor -> valor_struct .)
    PUNTO_COMA      reduce using rule 166 (valor -> valor_struct .)
    D_LLAVE         reduce using rule 166 (valor -> valor_struct .)
    ID              reduce using rule 166 (valor -> valor_struct .)
    IF              reduce using rule 166 (valor -> valor_struct .)
    ELSE            reduce using rule 166 (valor -> valor_struct .)
    ELSEIF          reduce using rule 166 (valor -> valor_struct .)
    FOR             reduce using rule 166 (valor -> valor_struct .)
    MAP             reduce using rule 166 (valor -> valor_struct .)
    MAKE            reduce using rule 166 (valor -> valor_struct .)
    TYPE            reduce using rule 166 (valor -> valor_struct .)
    I_PARENTESIS    reduce using rule 166 (valor -> valor_struct .)
    PRINTLN         reduce using rule 166 (valor -> valor_struct .)
    PRINTF          reduce using rule 166 (valor -> valor_struct .)
    PRINT           reduce using rule 166 (valor -> valor_struct .)
    VAR             reduce using rule 166 (valor -> valor_struct .)
    I_CORCHETE      reduce using rule 166 (valor -> valor_struct .)
    INT             reduce using rule 166 (valor -> valor_struct .)
    DOUBLE          reduce using rule 166 (valor -> valor_struct .)
    STRING          reduce using rule 166 (valor -> valor_struct .)
    BOOLEAN         reduce using rule 166 (valor -> valor_struct .)
    RETURN          reduce using rule 166 (valor -> valor_struct .)
    FUNC            reduce using rule 166 (valor -> valor_struct .)
    INCREMENTO      shift and go to state 101
    DECREMENTO      shift and go to state 102

    operador_matematico            shift and go to state 118

state 132

    (19) instruccion -> decla_header array_type_spec ASIGNACION . instruccion
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    decla_header                   shift and go to state 10
    instruccion                    shift and go to state 179
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 133

    (24) declaracion_comun -> decla_header type ASIGNACION . valor
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    valor                          shift and go to state 180
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 134

    (130) array_type_spec -> array_length INTEGER .

    ASIGNACION      reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    $end            reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    PUNTO_COMA      reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    D_LLAVE         reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    ID              reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    IF              reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    ELSE            reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    ELSEIF          reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    FOR             reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    MAP             reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    MAKE            reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    TYPE            reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    I_PARENTESIS    reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    PRINTLN         reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    PRINTF          reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    PRINT           reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    VAR             reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    I_CORCHETE      reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    INT             reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    DOUBLE          reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    STRING          reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    BOOLEAN         reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    RETURN          reduce using rule 130 (array_type_spec -> array_length INTEGER .)
    FUNC            reduce using rule 130 (array_type_spec -> array_length INTEGER .)


state 135

    (131) array_type_spec -> array_length STRINGTYPE .

    ASIGNACION      reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    $end            reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    PUNTO_COMA      reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    D_LLAVE         reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    ID              reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    IF              reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    ELSE            reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    ELSEIF          reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    FOR             reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    MAP             reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    MAKE            reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    TYPE            reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    I_PARENTESIS    reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    PRINTLN         reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    PRINTF          reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    PRINT           reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    VAR             reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    I_CORCHETE      reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    INT             reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    DOUBLE          reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    STRING          reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    BOOLEAN         reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    RETURN          reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)
    FUNC            reduce using rule 131 (array_type_spec -> array_length STRINGTYPE .)


state 136

    (132) array_type_spec -> array_length BOOLEAN .

    ASIGNACION      reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    $end            reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    PUNTO_COMA      reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    D_LLAVE         reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    ID              reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    IF              reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    ELSE            reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    ELSEIF          reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    FOR             reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    MAP             reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    MAKE            reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    TYPE            reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    I_PARENTESIS    reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    PRINTLN         reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    PRINTF          reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    PRINT           reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    VAR             reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    I_CORCHETE      reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    INT             reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    DOUBLE          reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    STRING          reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    BOOLEAN         reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    RETURN          reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)
    FUNC            reduce using rule 132 (array_type_spec -> array_length BOOLEAN .)


state 137

    (133) array_type_spec -> array_length floating_type .

    ASIGNACION      reduce using rule 133 (array_type_spec -> array_length floating_type .)
    $end            reduce using rule 133 (array_type_spec -> array_length floating_type .)
    PUNTO_COMA      reduce using rule 133 (array_type_spec -> array_length floating_type .)
    D_LLAVE         reduce using rule 133 (array_type_spec -> array_length floating_type .)
    ID              reduce using rule 133 (array_type_spec -> array_length floating_type .)
    IF              reduce using rule 133 (array_type_spec -> array_length floating_type .)
    ELSE            reduce using rule 133 (array_type_spec -> array_length floating_type .)
    ELSEIF          reduce using rule 133 (array_type_spec -> array_length floating_type .)
    FOR             reduce using rule 133 (array_type_spec -> array_length floating_type .)
    MAP             reduce using rule 133 (array_type_spec -> array_length floating_type .)
    MAKE            reduce using rule 133 (array_type_spec -> array_length floating_type .)
    TYPE            reduce using rule 133 (array_type_spec -> array_length floating_type .)
    I_PARENTESIS    reduce using rule 133 (array_type_spec -> array_length floating_type .)
    PRINTLN         reduce using rule 133 (array_type_spec -> array_length floating_type .)
    PRINTF          reduce using rule 133 (array_type_spec -> array_length floating_type .)
    PRINT           reduce using rule 133 (array_type_spec -> array_length floating_type .)
    VAR             reduce using rule 133 (array_type_spec -> array_length floating_type .)
    I_CORCHETE      reduce using rule 133 (array_type_spec -> array_length floating_type .)
    INT             reduce using rule 133 (array_type_spec -> array_length floating_type .)
    DOUBLE          reduce using rule 133 (array_type_spec -> array_length floating_type .)
    STRING          reduce using rule 133 (array_type_spec -> array_length floating_type .)
    BOOLEAN         reduce using rule 133 (array_type_spec -> array_length floating_type .)
    RETURN          reduce using rule 133 (array_type_spec -> array_length floating_type .)
    FUNC            reduce using rule 133 (array_type_spec -> array_length floating_type .)


state 138

    (95) init_struct -> empty_struct ASIGNACION ID . I_LLAVE valores D_LLAVE
    (97) init_struct -> empty_struct ASIGNACION ID . I_LLAVE atributos_nombrados D_LLAVE

    I_LLAVE         shift and go to state 181


state 139

    (22) instruccion -> ID . asignacion valor
    (23) instruccion -> ID . asignacion instruccion
    (171) valor_variable -> ID .
    (101) valor_struct -> ID . PUNTO ID
    (46) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> ID . operador_matematico
    (96) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (98) init_struct -> ID . DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (143) asignacion -> . ASIGNACION
    (144) asignacion -> . ASIGNACION_ADICION
    (145) asignacion -> . ASIGNACION_RESTA
    (146) asignacion -> . ASIGNACION_MULTI
    (147) asignacion -> . DECLARACION_ASIGNACION
    (148) asignacion -> . ASIGNACION_DIVISION
    (149) asignacion -> . ASIGNACION_MODULO
    (141) operador_matematico -> . INCREMENTO
    (142) operador_matematico -> . DECREMENTO

  ! shift/reduce conflict for I_PARENTESIS resolved as shift
    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    $end            reduce using rule 171 (valor_variable -> ID .)
    PUNTO_COMA      reduce using rule 171 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 171 (valor_variable -> ID .)
    ID              reduce using rule 171 (valor_variable -> ID .)
    IF              reduce using rule 171 (valor_variable -> ID .)
    ELSE            reduce using rule 171 (valor_variable -> ID .)
    ELSEIF          reduce using rule 171 (valor_variable -> ID .)
    FOR             reduce using rule 171 (valor_variable -> ID .)
    MAP             reduce using rule 171 (valor_variable -> ID .)
    MAKE            reduce using rule 171 (valor_variable -> ID .)
    TYPE            reduce using rule 171 (valor_variable -> ID .)
    PRINTLN         reduce using rule 171 (valor_variable -> ID .)
    PRINTF          reduce using rule 171 (valor_variable -> ID .)
    PRINT           reduce using rule 171 (valor_variable -> ID .)
    VAR             reduce using rule 171 (valor_variable -> ID .)
    I_CORCHETE      reduce using rule 171 (valor_variable -> ID .)
    INT             reduce using rule 171 (valor_variable -> ID .)
    DOUBLE          reduce using rule 171 (valor_variable -> ID .)
    STRING          reduce using rule 171 (valor_variable -> ID .)
    BOOLEAN         reduce using rule 171 (valor_variable -> ID .)
    RETURN          reduce using rule 171 (valor_variable -> ID .)
    FUNC            reduce using rule 171 (valor_variable -> ID .)
    PUNTO           shift and go to state 94
    I_PARENTESIS    shift and go to state 91
    DECLARACION_ASIGNACION shift and go to state 93
    ASIGNACION      shift and go to state 95
    ASIGNACION_ADICION shift and go to state 96
    ASIGNACION_RESTA shift and go to state 97
    ASIGNACION_MULTI shift and go to state 98
    ASIGNACION_DIVISION shift and go to state 99
    ASIGNACION_MODULO shift and go to state 100
    INCREMENTO      shift and go to state 101
    DECREMENTO      shift and go to state 102

  ! I_PARENTESIS    [ reduce using rule 171 (valor_variable -> ID .) ]

    asignacion                     shift and go to state 90
    operador_matematico            shift and go to state 92

state 140

    (22) instruccion -> ID asignacion valor .
    (126) valor -> valor . operacion_binaria valor
    (109) expression -> valor .
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

  ! reduce/reduce conflict for $end resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PUNTO_COMA resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for D_LLAVE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ID resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for IF resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ELSE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for FOR resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for MAP resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for MAKE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for TYPE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for I_PARENTESIS resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINTLN resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINTF resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for PRINT resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for VAR resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for I_CORCHETE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for INT resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for DOUBLE resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for STRING resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for RETURN resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! reduce/reduce conflict for FUNC resolved using rule 22 (instruccion -> ID asignacion valor .)
  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 22 (instruccion -> ID asignacion valor .)
    PUNTO_COMA      reduce using rule 22 (instruccion -> ID asignacion valor .)
    D_LLAVE         reduce using rule 22 (instruccion -> ID asignacion valor .)
    ID              reduce using rule 22 (instruccion -> ID asignacion valor .)
    IF              reduce using rule 22 (instruccion -> ID asignacion valor .)
    ELSE            reduce using rule 22 (instruccion -> ID asignacion valor .)
    ELSEIF          reduce using rule 22 (instruccion -> ID asignacion valor .)
    FOR             reduce using rule 22 (instruccion -> ID asignacion valor .)
    MAP             reduce using rule 22 (instruccion -> ID asignacion valor .)
    MAKE            reduce using rule 22 (instruccion -> ID asignacion valor .)
    TYPE            reduce using rule 22 (instruccion -> ID asignacion valor .)
    I_PARENTESIS    reduce using rule 22 (instruccion -> ID asignacion valor .)
    PRINTLN         reduce using rule 22 (instruccion -> ID asignacion valor .)
    PRINTF          reduce using rule 22 (instruccion -> ID asignacion valor .)
    PRINT           reduce using rule 22 (instruccion -> ID asignacion valor .)
    VAR             reduce using rule 22 (instruccion -> ID asignacion valor .)
    I_CORCHETE      reduce using rule 22 (instruccion -> ID asignacion valor .)
    INT             reduce using rule 22 (instruccion -> ID asignacion valor .)
    DOUBLE          reduce using rule 22 (instruccion -> ID asignacion valor .)
    STRING          reduce using rule 22 (instruccion -> ID asignacion valor .)
    BOOLEAN         reduce using rule 22 (instruccion -> ID asignacion valor .)
    RETURN          reduce using rule 22 (instruccion -> ID asignacion valor .)
    FUNC            reduce using rule 22 (instruccion -> ID asignacion valor .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

  ! ADICION         [ reduce using rule 109 (expression -> valor .) ]
  ! RESTA           [ reduce using rule 109 (expression -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 109 (expression -> valor .) ]
  ! DIVISION        [ reduce using rule 109 (expression -> valor .) ]
  ! MODULO          [ reduce using rule 109 (expression -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 109 (expression -> valor .) ]
  ! IGUAL           [ reduce using rule 109 (expression -> valor .) ]
  ! DIFERENTE       [ reduce using rule 109 (expression -> valor .) ]
  ! MAYOR           [ reduce using rule 109 (expression -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 109 (expression -> valor .) ]
  ! MENOR           [ reduce using rule 109 (expression -> valor .) ]
  ! $end            [ reduce using rule 109 (expression -> valor .) ]
  ! PUNTO_COMA      [ reduce using rule 109 (expression -> valor .) ]
  ! D_LLAVE         [ reduce using rule 109 (expression -> valor .) ]
  ! ID              [ reduce using rule 109 (expression -> valor .) ]
  ! IF              [ reduce using rule 109 (expression -> valor .) ]
  ! ELSE            [ reduce using rule 109 (expression -> valor .) ]
  ! ELSEIF          [ reduce using rule 109 (expression -> valor .) ]
  ! FOR             [ reduce using rule 109 (expression -> valor .) ]
  ! MAP             [ reduce using rule 109 (expression -> valor .) ]
  ! MAKE            [ reduce using rule 109 (expression -> valor .) ]
  ! TYPE            [ reduce using rule 109 (expression -> valor .) ]
  ! I_PARENTESIS    [ reduce using rule 109 (expression -> valor .) ]
  ! PRINTLN         [ reduce using rule 109 (expression -> valor .) ]
  ! PRINTF          [ reduce using rule 109 (expression -> valor .) ]
  ! PRINT           [ reduce using rule 109 (expression -> valor .) ]
  ! VAR             [ reduce using rule 109 (expression -> valor .) ]
  ! I_CORCHETE      [ reduce using rule 109 (expression -> valor .) ]
  ! INT             [ reduce using rule 109 (expression -> valor .) ]
  ! DOUBLE          [ reduce using rule 109 (expression -> valor .) ]
  ! STRING          [ reduce using rule 109 (expression -> valor .) ]
  ! BOOLEAN         [ reduce using rule 109 (expression -> valor .) ]
  ! RETURN          [ reduce using rule 109 (expression -> valor .) ]
  ! FUNC            [ reduce using rule 109 (expression -> valor .) ]

    operacion_binaria              shift and go to state 103

state 141

    (23) instruccion -> ID asignacion instruccion .

    $end            reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    PUNTO_COMA      reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    D_LLAVE         reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    ID              reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    IF              reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    ELSE            reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    ELSEIF          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    FOR             reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    MAP             reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    MAKE            reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    TYPE            reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    I_PARENTESIS    reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    PRINTLN         reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    PRINTF          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    PRINT           reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    VAR             reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    I_CORCHETE      reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    INT             reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    DOUBLE          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    STRING          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    BOOLEAN         reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    RETURN          reduce using rule 23 (instruccion -> ID asignacion instruccion .)
    FUNC            reduce using rule 23 (instruccion -> ID asignacion instruccion .)


state 142

    (46) llamada_func -> ID I_PARENTESIS llamada_params . D_PARENTESIS

    D_PARENTESIS    shift and go to state 182


state 143

    (47) llamada_params -> expression .
    (48) llamada_params -> expression . COMA llamada_params
    (113) resultado -> expression . operacion_binaria expression
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    D_PARENTESIS    reduce using rule 47 (llamada_params -> expression .)
    COMA            shift and go to state 183
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 59

state 144

    (96) init_struct -> ID DECLARACION_ASIGNACION ID . I_LLAVE valores D_LLAVE
    (98) init_struct -> ID DECLARACION_ASIGNACION ID . I_LLAVE atributos_nombrados D_LLAVE

    I_LLAVE         shift and go to state 184


state 145

    (101) valor_struct -> ID PUNTO ID .

    INCREMENTO      reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    DECREMENTO      reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    ADICION         reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    RESTA           reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    MULTIPLICACION  reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    DIVISION        reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    MODULO          reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    MENOR_IGUAL     reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    IGUAL           reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    DIFERENTE       reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    MAYOR           reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    MAYOR_IGUAL     reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    MENOR           reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    $end            reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    I_LLAVE         reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    PUNTO_COMA      reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    D_PARENTESIS    reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    D_LLAVE         reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    ID              reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    IF              reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    ELSE            reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    ELSEIF          reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    FOR             reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    MAP             reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    MAKE            reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    TYPE            reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    I_PARENTESIS    reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    PRINTLN         reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    PRINTF          reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    PRINT           reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    VAR             reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    I_CORCHETE      reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    INT             reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    DOUBLE          reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    STRING          reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    BOOLEAN         reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    RETURN          reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    FUNC            reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    COMA            reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    BOOL            reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    STRINGTYPE      reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    INTEGER         reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    FLOAT32         reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    FLOAT64         reduce using rule 101 (valor_struct -> ID PUNTO ID .)
    DOS_PUNTOS      reduce using rule 101 (valor_struct -> ID PUNTO ID .)


state 146

    (126) valor -> valor operacion_binaria valor .
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    $end            reduce using rule 126 (valor -> valor operacion_binaria valor .)
    I_LLAVE         reduce using rule 126 (valor -> valor operacion_binaria valor .)
    PUNTO_COMA      reduce using rule 126 (valor -> valor operacion_binaria valor .)
    D_PARENTESIS    reduce using rule 126 (valor -> valor operacion_binaria valor .)
    D_LLAVE         reduce using rule 126 (valor -> valor operacion_binaria valor .)
    ID              reduce using rule 126 (valor -> valor operacion_binaria valor .)
    IF              reduce using rule 126 (valor -> valor operacion_binaria valor .)
    ELSE            reduce using rule 126 (valor -> valor operacion_binaria valor .)
    ELSEIF          reduce using rule 126 (valor -> valor operacion_binaria valor .)
    FOR             reduce using rule 126 (valor -> valor operacion_binaria valor .)
    MAP             reduce using rule 126 (valor -> valor operacion_binaria valor .)
    MAKE            reduce using rule 126 (valor -> valor operacion_binaria valor .)
    TYPE            reduce using rule 126 (valor -> valor operacion_binaria valor .)
    I_PARENTESIS    reduce using rule 126 (valor -> valor operacion_binaria valor .)
    PRINTLN         reduce using rule 126 (valor -> valor operacion_binaria valor .)
    PRINTF          reduce using rule 126 (valor -> valor operacion_binaria valor .)
    PRINT           reduce using rule 126 (valor -> valor operacion_binaria valor .)
    VAR             reduce using rule 126 (valor -> valor operacion_binaria valor .)
    I_CORCHETE      reduce using rule 126 (valor -> valor operacion_binaria valor .)
    INT             reduce using rule 126 (valor -> valor operacion_binaria valor .)
    DOUBLE          reduce using rule 126 (valor -> valor operacion_binaria valor .)
    STRING          reduce using rule 126 (valor -> valor operacion_binaria valor .)
    BOOLEAN         reduce using rule 126 (valor -> valor operacion_binaria valor .)
    RETURN          reduce using rule 126 (valor -> valor operacion_binaria valor .)
    FUNC            reduce using rule 126 (valor -> valor operacion_binaria valor .)
    COMA            reduce using rule 126 (valor -> valor operacion_binaria valor .)
    BOOL            reduce using rule 126 (valor -> valor operacion_binaria valor .)
    STRINGTYPE      reduce using rule 126 (valor -> valor operacion_binaria valor .)
    INTEGER         reduce using rule 126 (valor -> valor operacion_binaria valor .)
    FLOAT32         reduce using rule 126 (valor -> valor operacion_binaria valor .)
    FLOAT64         reduce using rule 126 (valor -> valor operacion_binaria valor .)
    DOS_PUNTOS      reduce using rule 126 (valor -> valor operacion_binaria valor .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

  ! ADICION         [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! RESTA           [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! MULTIPLICACION  [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! DIVISION        [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! MODULO          [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! IGUAL           [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! DIFERENTE       [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR           [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]
  ! MENOR           [ reduce using rule 126 (valor -> valor operacion_binaria valor .) ]

    operacion_binaria              shift and go to state 103

state 147

    (49) instruccion -> IF condicion I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    I_LLAVE         shift and go to state 149
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    body                           shift and go to state 185
    instruccion                    shift and go to state 151
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 148

    (107) condicion -> I_PARENTESIS valor . D_PARENTESIS
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    D_PARENTESIS    shift and go to state 186
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 103

state 149

    (5) body -> I_LLAVE . instruct_expression D_LLAVE
    (6) body -> I_LLAVE . varias_instrucciones D_LLAVE
    (7) body -> I_LLAVE . varias_instrucciones instruct_expression D_LLAVE
    (8) body -> I_LLAVE . D_LLAVE
    (11) instruct_expression -> . RETURN valor
    (12) instruct_expression -> . RETURN resultado
    (9) varias_instrucciones -> . instruccion
    (10) varias_instrucciones -> . instruccion varias_instrucciones
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    D_LLAVE         shift and go to state 188
    RETURN          shift and go to state 190
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    instruct_expression            shift and go to state 187
    varias_instrucciones           shift and go to state 189
    valor                          shift and go to state 14
    resultado                      shift and go to state 43
    instruccion                    shift and go to state 191
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 150

    (50) instruccion -> ELSE I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 192


state 151

    (4) body -> instruccion .

    D_LLAVE         reduce using rule 4 (body -> instruccion .)
    ID              reduce using rule 4 (body -> instruccion .)
    IF              reduce using rule 4 (body -> instruccion .)
    ELSE            reduce using rule 4 (body -> instruccion .)
    ELSEIF          reduce using rule 4 (body -> instruccion .)
    FOR             reduce using rule 4 (body -> instruccion .)
    MAP             reduce using rule 4 (body -> instruccion .)
    MAKE            reduce using rule 4 (body -> instruccion .)
    TYPE            reduce using rule 4 (body -> instruccion .)
    FUNC            reduce using rule 4 (body -> instruccion .)
    I_PARENTESIS    reduce using rule 4 (body -> instruccion .)
    PRINTLN         reduce using rule 4 (body -> instruccion .)
    PRINTF          reduce using rule 4 (body -> instruccion .)
    PRINT           reduce using rule 4 (body -> instruccion .)
    VAR             reduce using rule 4 (body -> instruccion .)
    I_CORCHETE      reduce using rule 4 (body -> instruccion .)
    INT             reduce using rule 4 (body -> instruccion .)
    DOUBLE          reduce using rule 4 (body -> instruccion .)
    STRING          reduce using rule 4 (body -> instruccion .)
    BOOLEAN         reduce using rule 4 (body -> instruccion .)
    $end            reduce using rule 4 (body -> instruccion .)


state 152

    (51) instruccion -> ELSEIF condicion I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    I_LLAVE         shift and go to state 149
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    body                           shift and go to state 193
    instruccion                    shift and go to state 151
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 153

    (52) instruccion -> FOR ID DECLARACION_ASIGNACION . RANGE ID I_LLAVE body D_LLAVE
    (96) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE valores D_LLAVE
    (98) init_struct -> ID DECLARACION_ASIGNACION . ID I_LLAVE atributos_nombrados D_LLAVE
    (147) asignacion -> DECLARACION_ASIGNACION .

  ! shift/reduce conflict for ID resolved as shift
    RANGE           shift and go to state 194
    ID              shift and go to state 144
    IF              reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    ELSE            reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    ELSEIF          reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    FOR             reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    MAP             reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    MAKE            reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    TYPE            reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    INT             reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    DOUBLE          reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    STRING          reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    BOOLEAN         reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    I_PARENTESIS    reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTLN         reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    PRINTF          reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    PRINT           reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    VAR             reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)
    I_CORCHETE      reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .)

  ! ID              [ reduce using rule 147 (asignacion -> DECLARACION_ASIGNACION .) ]


state 154

    (54) instruccion -> FOR ID COMA . ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE

    ID              shift and go to state 195


state 155

    (53) instruccion -> FOR instruccion PUNTO_COMA . valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    valor                          shift and go to state 196
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 156

    (87) instruccion -> MAP I_CORCHETE type . D_CORCHETE type I_LLAVE D_LLAVE
    (89) instruccion -> MAP I_CORCHETE type . D_CORCHETE type I_LLAVE claves_valores D_LLAVE

    D_CORCHETE      shift and go to state 197


state 157

    (71) array_int -> I_CORCHETE D_CORCHETE INTEGER . I_LLAVE D_LLAVE
    (79) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER . I_LLAVE valores_int D_LLAVE

    I_LLAVE         shift and go to state 198


state 158

    (72) array_double -> I_CORCHETE D_CORCHETE floating_type . I_LLAVE D_LLAVE
    (80) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type . I_LLAVE valores_double D_LLAVE

    I_LLAVE         shift and go to state 199


state 159

    (73) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE . I_LLAVE D_LLAVE
    (81) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE . I_LLAVE valores_string D_LLAVE

    I_LLAVE         shift and go to state 200


state 160

    (74) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN . I_LLAVE D_LLAVE
    (82) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN . I_LLAVE valores_boolean D_LLAVE

    I_LLAVE         shift and go to state 201


state 161

    (134) array_length -> I_CORCHETE INT D_CORCHETE .

    INTEGER         reduce using rule 134 (array_length -> I_CORCHETE INT D_CORCHETE .)
    STRINGTYPE      reduce using rule 134 (array_length -> I_CORCHETE INT D_CORCHETE .)
    BOOLEAN         reduce using rule 134 (array_length -> I_CORCHETE INT D_CORCHETE .)
    FLOAT32         reduce using rule 134 (array_length -> I_CORCHETE INT D_CORCHETE .)
    FLOAT64         reduce using rule 134 (array_length -> I_CORCHETE INT D_CORCHETE .)


state 162

    (88) instruccion -> MAKE I_PARENTESIS MAP . I_CORCHETE type D_CORCHETE type D_PARENTESIS

    I_CORCHETE      shift and go to state 202


state 163

    (90) instruccion -> TYPE ID STRUCT . I_LLAVE atributos_struct D_LLAVE

    I_LLAVE         shift and go to state 203


state 164

    (41) parametrosMetodoBool -> ID . BOOL

    BOOL            shift and go to state 204


state 165

    (29) funcion -> FUNC ID cuerpo_fun .

    ID              reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    IF              reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    ELSE            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    ELSEIF          reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    FOR             reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    MAP             reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    MAKE            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    TYPE            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    FUNC            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    I_PARENTESIS    reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    PRINTLN         reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    PRINTF          reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    PRINT           reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    VAR             reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    I_CORCHETE      reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    INT             reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    DOUBLE          reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    STRING          reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    BOOLEAN         reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)
    $end            reduce using rule 29 (funcion -> FUNC ID cuerpo_fun .)


state 166

    (31) funcion_no_type -> FUNC ID parametros_sin_tipo . body
    (37) parametrosMetodo -> parametros_sin_tipo .
    (38) parametrosMetodoInt -> parametros_sin_tipo . INTEGER
    (39) parametrosMetodoString -> parametros_sin_tipo . STRINGTYPE
    (40) parametrosMetodoDouble -> parametros_sin_tipo . floating_type
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

  ! shift/reduce conflict for I_LLAVE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for MAP resolved as shift
  ! shift/reduce conflict for MAKE resolved as shift
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for I_PARENTESIS resolved as shift
  ! shift/reduce conflict for PRINTLN resolved as shift
  ! shift/reduce conflict for PRINTF resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for I_CORCHETE resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
    INTEGER         shift and go to state 206
    STRINGTYPE      shift and go to state 207
    I_LLAVE         shift and go to state 149
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

  ! I_LLAVE         [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! ID              [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! IF              [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! ELSE            [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! ELSEIF          [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! FOR             [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! MAP             [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! MAKE            [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! TYPE            [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! I_PARENTESIS    [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! PRINTLN         [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! PRINTF          [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! PRINT           [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! VAR             [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! I_CORCHETE      [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! INT             [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! DOUBLE          [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! STRING          [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]
  ! BOOLEAN         [ reduce using rule 37 (parametrosMetodo -> parametros_sin_tipo .) ]

    body                           shift and go to state 205
    floating_type                  shift and go to state 208
    instruccion                    shift and go to state 151
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 167

    (32) cuerpo_fun -> parametrosMetodo . body
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    I_LLAVE         shift and go to state 149
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    body                           shift and go to state 209
    instruccion                    shift and go to state 151
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 168

    (42) parametros_sin_tipo -> I_PARENTESIS . parametros D_PARENTESIS
    (43) parametros -> . atributo
    (44) parametros -> . atributo COMA parametros
    (45) parametros -> . valores type
    (93) atributo -> . ID type
    (116) valores -> . valor
    (117) valores -> . valor COMA valores
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 213
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    parametros                     shift and go to state 210
    atributo                       shift and go to state 211
    valores                        shift and go to state 212
    valor                          shift and go to state 126
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 169

    (33) parametrosMetodo -> parametrosMetodoInt .

    I_LLAVE         reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    ID              reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    IF              reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    ELSE            reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    ELSEIF          reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    FOR             reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    MAP             reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    MAKE            reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    TYPE            reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    I_PARENTESIS    reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    PRINTLN         reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    PRINTF          reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    PRINT           reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    VAR             reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    I_CORCHETE      reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    INT             reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    DOUBLE          reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    STRING          reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)
    BOOLEAN         reduce using rule 33 (parametrosMetodo -> parametrosMetodoInt .)


state 170

    (34) parametrosMetodo -> parametrosMetodoString .

    I_LLAVE         reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    ID              reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    IF              reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    ELSE            reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    ELSEIF          reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    FOR             reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    MAP             reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    MAKE            reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    TYPE            reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    I_PARENTESIS    reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    PRINTLN         reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    PRINTF          reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    PRINT           reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    VAR             reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    I_CORCHETE      reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    INT             reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    DOUBLE          reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    STRING          reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)
    BOOLEAN         reduce using rule 34 (parametrosMetodo -> parametrosMetodoString .)


state 171

    (35) parametrosMetodo -> parametrosMetodoDouble .

    I_LLAVE         reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    ID              reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    IF              reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    ELSE            reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    ELSEIF          reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    FOR             reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    MAP             reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    MAKE            reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    TYPE            reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    I_PARENTESIS    reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    PRINTLN         reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    PRINTF          reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    PRINT           reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    VAR             reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    I_CORCHETE      reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    INT             reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    DOUBLE          reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    STRING          reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)
    BOOLEAN         reduce using rule 35 (parametrosMetodo -> parametrosMetodoDouble .)


state 172

    (36) parametrosMetodo -> parametrosMetodoBool .

    I_LLAVE         reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    ID              reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    IF              reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    ELSE            reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    ELSEIF          reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    FOR             reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    MAP             reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    MAKE            reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    TYPE            reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    I_PARENTESIS    reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    PRINTLN         reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    PRINTF          reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    PRINT           reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    VAR             reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    I_CORCHETE      reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    INT             reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    DOUBLE          reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    STRING          reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)
    BOOLEAN         reduce using rule 36 (parametrosMetodo -> parametrosMetodoBool .)


state 173

    (75) array_length_int -> array_length INTEGER I_LLAVE . D_LLAVE
    (83) array_length_con_valores_int -> array_length INTEGER I_LLAVE . valores_int D_LLAVE
    (118) valores_int -> . valor_int
    (119) valores_int -> . valor_int COMA valores_int
    (167) valor_int -> . INT

    D_LLAVE         shift and go to state 214
    INT             shift and go to state 55

    valores_int                    shift and go to state 215
    valor_int                      shift and go to state 216

state 174

    (76) array_length_double -> array_length floating_type I_LLAVE . D_LLAVE
    (84) array_length_con_valores_double -> array_length floating_type I_LLAVE . valores_double D_LLAVE
    (120) valores_double -> . valor_double
    (121) valores_double -> . valor_double COMA valores_double
    (168) valor_double -> . DOUBLE

    D_LLAVE         shift and go to state 217
    DOUBLE          shift and go to state 56

    valores_double                 shift and go to state 218
    valor_double                   shift and go to state 219

state 175

    (77) array_length_string -> array_length STRINGTYPE I_LLAVE . D_LLAVE
    (85) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE . valores_string D_LLAVE
    (122) valores_string -> . valor_string
    (123) valores_string -> . valor_string COMA valores_string
    (169) valor_string -> . STRING

    D_LLAVE         shift and go to state 220
    STRING          shift and go to state 57

    valores_string                 shift and go to state 221
    valor_string                   shift and go to state 222

state 176

    (78) array_length_boolean -> array_length BOOLEAN I_LLAVE . D_LLAVE
    (86) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE . valores_boolean D_LLAVE
    (124) valores_boolean -> . valor_boolean
    (125) valores_boolean -> . valor_boolean COMA valores_boolean
    (170) valor_boolean -> . BOOLEAN

    D_LLAVE         shift and go to state 223
    BOOLEAN         shift and go to state 48

    valores_boolean                shift and go to state 224
    valor_boolean                  shift and go to state 225

state 177

    (16) instruccion -> print I_PARENTESIS valores D_PARENTESIS .

    $end            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    D_LLAVE         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ID              reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    IF              reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ELSE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    ELSEIF          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    FOR             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    MAP             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    MAKE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    TYPE            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINTLN         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINTF          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    PRINT           reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    VAR             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    I_CORCHETE      reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    INT             reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    DOUBLE          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    STRING          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    BOOLEAN         reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    RETURN          reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)
    FUNC            reduce using rule 16 (instruccion -> print I_PARENTESIS valores D_PARENTESIS .)


state 178

    (117) valores -> valor COMA . valores
    (116) valores -> . valor
    (117) valores -> . valor COMA valores
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    valor                          shift and go to state 126
    valores                        shift and go to state 226
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 179

    (19) instruccion -> decla_header array_type_spec ASIGNACION instruccion .

    $end            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    PUNTO_COMA      reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    D_LLAVE         reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    ID              reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    IF              reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    ELSE            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    ELSEIF          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    FOR             reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    MAP             reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    MAKE            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    TYPE            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    I_PARENTESIS    reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    PRINTLN         reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    PRINTF          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    PRINT           reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    VAR             reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    I_CORCHETE      reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    INT             reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    DOUBLE          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    STRING          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    BOOLEAN         reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    RETURN          reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)
    FUNC            reduce using rule 19 (instruccion -> decla_header array_type_spec ASIGNACION instruccion .)


state 180

    (24) declaracion_comun -> decla_header type ASIGNACION valor .
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    $end            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    PUNTO_COMA      reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    D_LLAVE         reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    ID              reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    IF              reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    ELSE            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    ELSEIF          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    FOR             reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    MAP             reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    MAKE            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    TYPE            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    I_PARENTESIS    reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    PRINTLN         reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    PRINTF          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    PRINT           reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    VAR             reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    I_CORCHETE      reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    INT             reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    DOUBLE          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    STRING          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    BOOLEAN         reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    RETURN          reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    FUNC            reduce using rule 24 (declaracion_comun -> decla_header type ASIGNACION valor .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 103

state 181

    (95) init_struct -> empty_struct ASIGNACION ID I_LLAVE . valores D_LLAVE
    (97) init_struct -> empty_struct ASIGNACION ID I_LLAVE . atributos_nombrados D_LLAVE
    (116) valores -> . valor
    (117) valores -> . valor COMA valores
    (99) atributos_nombrados -> . declara_atributo
    (100) atributos_nombrados -> . declara_atributo COMA atributos_nombrados
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (102) declara_atributo -> . ID DOS_PUNTOS expression
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 227
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    valores                        shift and go to state 228
    atributos_nombrados            shift and go to state 229
    valor                          shift and go to state 126
    declara_atributo               shift and go to state 230
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 182

    (46) llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .

    $end            reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ADICION         reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    RESTA           reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MULTIPLICACION  reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DIVISION        reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MODULO          reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MENOR_IGUAL     reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    IGUAL           reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DIFERENTE       reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAYOR           reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAYOR_IGUAL     reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MENOR           reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    D_PARENTESIS    reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    D_LLAVE         reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ID              reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    IF              reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ELSE            reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    ELSEIF          reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    FOR             reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAP             reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    MAKE            reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    TYPE            reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINTLN         reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINTF          reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    PRINT           reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    VAR             reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    I_CORCHETE      reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    INT             reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    DOUBLE          reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    STRING          reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    BOOLEAN         reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    RETURN          reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    FUNC            reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)
    COMA            reduce using rule 46 (llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS .)


state 183

    (48) llamada_params -> expression COMA . llamada_params
    (47) llamada_params -> . expression
    (48) llamada_params -> . expression COMA llamada_params
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 76
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    expression                     shift and go to state 143
    llamada_params                 shift and go to state 231
    valor                          shift and go to state 14
    resultado                      shift and go to state 43
    llamada_func                   shift and go to state 74
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 184

    (96) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE . valores D_LLAVE
    (98) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE . atributos_nombrados D_LLAVE
    (116) valores -> . valor
    (117) valores -> . valor COMA valores
    (99) atributos_nombrados -> . declara_atributo
    (100) atributos_nombrados -> . declara_atributo COMA atributos_nombrados
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (102) declara_atributo -> . ID DOS_PUNTOS expression
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 227
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    valores                        shift and go to state 232
    atributos_nombrados            shift and go to state 233
    valor                          shift and go to state 126
    declara_atributo               shift and go to state 230
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 185

    (49) instruccion -> IF condicion I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 234


state 186

    (107) condicion -> I_PARENTESIS valor D_PARENTESIS .

    I_LLAVE         reduce using rule 107 (condicion -> I_PARENTESIS valor D_PARENTESIS .)


state 187

    (5) body -> I_LLAVE instruct_expression . D_LLAVE

    D_LLAVE         shift and go to state 235


state 188

    (8) body -> I_LLAVE D_LLAVE .

    D_LLAVE         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ID              reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    IF              reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    FOR             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    MAP             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    VAR             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    INT             reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    STRING          reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 8 (body -> I_LLAVE D_LLAVE .)
    $end            reduce using rule 8 (body -> I_LLAVE D_LLAVE .)


state 189

    (6) body -> I_LLAVE varias_instrucciones . D_LLAVE
    (7) body -> I_LLAVE varias_instrucciones . instruct_expression D_LLAVE
    (11) instruct_expression -> . RETURN valor
    (12) instruct_expression -> . RETURN resultado

    D_LLAVE         shift and go to state 236
    RETURN          shift and go to state 190

    instruct_expression            shift and go to state 237

state 190

    (11) instruct_expression -> RETURN . valor
    (12) instruct_expression -> RETURN . resultado
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 240
    I_PARENTESIS    shift and go to state 8

    valor                          shift and go to state 238
    resultado                      shift and go to state 239
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75
    expression                     shift and go to state 73
    llamada_func                   shift and go to state 74

state 191

    (9) varias_instrucciones -> instruccion .
    (10) varias_instrucciones -> instruccion . varias_instrucciones
    (9) varias_instrucciones -> . instruccion
    (10) varias_instrucciones -> . instruccion varias_instrucciones
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    D_LLAVE         reduce using rule 9 (varias_instrucciones -> instruccion .)
    RETURN          reduce using rule 9 (varias_instrucciones -> instruccion .)
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    instruccion                    shift and go to state 191
    varias_instrucciones           shift and go to state 241
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 192

    (50) instruccion -> ELSE I_LLAVE body D_LLAVE .

    $end            reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ID              reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    IF              reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    INT             reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 50 (instruccion -> ELSE I_LLAVE body D_LLAVE .)


state 193

    (51) instruccion -> ELSEIF condicion I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 242


state 194

    (52) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE . ID I_LLAVE body D_LLAVE

    ID              shift and go to state 243


state 195

    (54) instruccion -> FOR ID COMA ID . DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE

    DECLARACION_ASIGNACION shift and go to state 244


state 196

    (53) instruccion -> FOR instruccion PUNTO_COMA valor . PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    PUNTO_COMA      shift and go to state 245
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 103

state 197

    (87) instruccion -> MAP I_CORCHETE type D_CORCHETE . type I_LLAVE D_LLAVE
    (89) instruccion -> MAP I_CORCHETE type D_CORCHETE . type I_LLAVE claves_valores D_LLAVE
    (135) type -> . BOOL
    (136) type -> . STRINGTYPE
    (137) type -> . INTEGER
    (138) type -> . floating_type
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    BOOL            shift and go to state 85
    STRINGTYPE      shift and go to state 83
    INTEGER         shift and go to state 82
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    type                           shift and go to state 246
    floating_type                  shift and go to state 84

state 198

    (71) array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE . D_LLAVE
    (79) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE . valores_int D_LLAVE
    (118) valores_int -> . valor_int
    (119) valores_int -> . valor_int COMA valores_int
    (167) valor_int -> . INT

    D_LLAVE         shift and go to state 247
    INT             shift and go to state 55

    valores_int                    shift and go to state 248
    valor_int                      shift and go to state 216

state 199

    (72) array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE . D_LLAVE
    (80) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE . valores_double D_LLAVE
    (120) valores_double -> . valor_double
    (121) valores_double -> . valor_double COMA valores_double
    (168) valor_double -> . DOUBLE

    D_LLAVE         shift and go to state 249
    DOUBLE          shift and go to state 56

    valores_double                 shift and go to state 250
    valor_double                   shift and go to state 219

state 200

    (73) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE . D_LLAVE
    (81) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE . valores_string D_LLAVE
    (122) valores_string -> . valor_string
    (123) valores_string -> . valor_string COMA valores_string
    (169) valor_string -> . STRING

    D_LLAVE         shift and go to state 251
    STRING          shift and go to state 57

    valores_string                 shift and go to state 252
    valor_string                   shift and go to state 222

state 201

    (74) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE . D_LLAVE
    (82) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE . valores_boolean D_LLAVE
    (124) valores_boolean -> . valor_boolean
    (125) valores_boolean -> . valor_boolean COMA valores_boolean
    (170) valor_boolean -> . BOOLEAN

    D_LLAVE         shift and go to state 253
    BOOLEAN         shift and go to state 48

    valores_boolean                shift and go to state 254
    valor_boolean                  shift and go to state 225

state 202

    (88) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE . type D_CORCHETE type D_PARENTESIS
    (135) type -> . BOOL
    (136) type -> . STRINGTYPE
    (137) type -> . INTEGER
    (138) type -> . floating_type
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    BOOL            shift and go to state 85
    STRINGTYPE      shift and go to state 83
    INTEGER         shift and go to state 82
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    type                           shift and go to state 255
    floating_type                  shift and go to state 84

state 203

    (90) instruccion -> TYPE ID STRUCT I_LLAVE . atributos_struct D_LLAVE
    (91) atributos_struct -> . atributo
    (92) atributos_struct -> . atributo atributos_struct
    (93) atributo -> . ID type

    ID              shift and go to state 256

    atributos_struct               shift and go to state 257
    atributo                       shift and go to state 258

state 204

    (41) parametrosMetodoBool -> ID BOOL .

    I_LLAVE         reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    ID              reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    IF              reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    ELSE            reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    ELSEIF          reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    FOR             reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    MAP             reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    MAKE            reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    TYPE            reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    I_PARENTESIS    reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    PRINTLN         reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    PRINTF          reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    PRINT           reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    VAR             reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    I_CORCHETE      reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    INT             reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    DOUBLE          reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    STRING          reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)
    BOOLEAN         reduce using rule 41 (parametrosMetodoBool -> ID BOOL .)


state 205

    (31) funcion_no_type -> FUNC ID parametros_sin_tipo body .

    ID              reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    IF              reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    ELSE            reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    ELSEIF          reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    FOR             reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    MAP             reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    MAKE            reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    TYPE            reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    FUNC            reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    I_PARENTESIS    reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    PRINTLN         reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    PRINTF          reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    PRINT           reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    VAR             reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    I_CORCHETE      reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    INT             reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    DOUBLE          reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    STRING          reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    BOOLEAN         reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)
    $end            reduce using rule 31 (funcion_no_type -> FUNC ID parametros_sin_tipo body .)


state 206

    (38) parametrosMetodoInt -> parametros_sin_tipo INTEGER .

    I_LLAVE         reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    ID              reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    IF              reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    ELSE            reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    ELSEIF          reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    FOR             reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    MAP             reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    MAKE            reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    TYPE            reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    I_PARENTESIS    reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    PRINTLN         reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    PRINTF          reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    PRINT           reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    VAR             reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    I_CORCHETE      reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    INT             reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    DOUBLE          reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    STRING          reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)
    BOOLEAN         reduce using rule 38 (parametrosMetodoInt -> parametros_sin_tipo INTEGER .)


state 207

    (39) parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .

    I_LLAVE         reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    ID              reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    IF              reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    ELSE            reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    ELSEIF          reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    FOR             reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    MAP             reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    MAKE            reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    TYPE            reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    I_PARENTESIS    reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    PRINTLN         reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    PRINTF          reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    PRINT           reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    VAR             reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    I_CORCHETE      reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    INT             reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    DOUBLE          reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    STRING          reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)
    BOOLEAN         reduce using rule 39 (parametrosMetodoString -> parametros_sin_tipo STRINGTYPE .)


state 208

    (40) parametrosMetodoDouble -> parametros_sin_tipo floating_type .

    I_LLAVE         reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    ID              reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    IF              reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    ELSE            reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    ELSEIF          reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    FOR             reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    MAP             reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    MAKE            reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    TYPE            reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    I_PARENTESIS    reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    PRINTLN         reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    PRINTF          reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    PRINT           reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    VAR             reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    I_CORCHETE      reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    INT             reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    DOUBLE          reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    STRING          reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)
    BOOLEAN         reduce using rule 40 (parametrosMetodoDouble -> parametros_sin_tipo floating_type .)


state 209

    (32) cuerpo_fun -> parametrosMetodo body .

    ID              reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    IF              reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    ELSE            reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    ELSEIF          reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    FOR             reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    MAP             reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    MAKE            reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    TYPE            reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    FUNC            reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    I_PARENTESIS    reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    PRINTLN         reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    PRINTF          reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    PRINT           reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    VAR             reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    I_CORCHETE      reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    INT             reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    DOUBLE          reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    STRING          reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    BOOLEAN         reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)
    $end            reduce using rule 32 (cuerpo_fun -> parametrosMetodo body .)


state 210

    (42) parametros_sin_tipo -> I_PARENTESIS parametros . D_PARENTESIS

    D_PARENTESIS    shift and go to state 259


state 211

    (43) parametros -> atributo .
    (44) parametros -> atributo . COMA parametros

    D_PARENTESIS    reduce using rule 43 (parametros -> atributo .)
    COMA            shift and go to state 260


state 212

    (45) parametros -> valores . type
    (135) type -> . BOOL
    (136) type -> . STRINGTYPE
    (137) type -> . INTEGER
    (138) type -> . floating_type
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    BOOL            shift and go to state 85
    STRINGTYPE      shift and go to state 83
    INTEGER         shift and go to state 82
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    type                           shift and go to state 261
    floating_type                  shift and go to state 84

state 213

    (93) atributo -> ID . type
    (171) valor_variable -> ID .
    (101) valor_struct -> ID . PUNTO ID
    (135) type -> . BOOL
    (136) type -> . STRINGTYPE
    (137) type -> . INTEGER
    (138) type -> . floating_type
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRINGTYPE resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOAT32 resolved as shift
  ! shift/reduce conflict for FLOAT64 resolved as shift
    COMA            reduce using rule 171 (valor_variable -> ID .)
    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    PUNTO           shift and go to state 94
    BOOL            shift and go to state 85
    STRINGTYPE      shift and go to state 83
    INTEGER         shift and go to state 82
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

  ! BOOL            [ reduce using rule 171 (valor_variable -> ID .) ]
  ! STRINGTYPE      [ reduce using rule 171 (valor_variable -> ID .) ]
  ! INTEGER         [ reduce using rule 171 (valor_variable -> ID .) ]
  ! FLOAT32         [ reduce using rule 171 (valor_variable -> ID .) ]
  ! FLOAT64         [ reduce using rule 171 (valor_variable -> ID .) ]

    type                           shift and go to state 262
    floating_type                  shift and go to state 84

state 214

    (75) array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .

    $end            reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ID              reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    IF              reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    FOR             reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    MAP             reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    VAR             reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    INT             reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    STRING          reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 75 (array_length_int -> array_length INTEGER I_LLAVE D_LLAVE .)


state 215

    (83) array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int . D_LLAVE

    D_LLAVE         shift and go to state 263


state 216

    (118) valores_int -> valor_int .
    (119) valores_int -> valor_int . COMA valores_int

    D_LLAVE         reduce using rule 118 (valores_int -> valor_int .)
    COMA            shift and go to state 264


state 217

    (76) array_length_double -> array_length floating_type I_LLAVE D_LLAVE .

    $end            reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ID              reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    IF              reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    INT             reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 76 (array_length_double -> array_length floating_type I_LLAVE D_LLAVE .)


state 218

    (84) array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double . D_LLAVE

    D_LLAVE         shift and go to state 265


state 219

    (120) valores_double -> valor_double .
    (121) valores_double -> valor_double . COMA valores_double

    D_LLAVE         reduce using rule 120 (valores_double -> valor_double .)
    COMA            shift and go to state 266


state 220

    (77) array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .

    $end            reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ID              reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    IF              reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    FOR             reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    MAP             reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    VAR             reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    INT             reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    STRING          reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 77 (array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE .)


state 221

    (85) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string . D_LLAVE

    D_LLAVE         shift and go to state 267


state 222

    (122) valores_string -> valor_string .
    (123) valores_string -> valor_string . COMA valores_string

    D_LLAVE         reduce using rule 122 (valores_string -> valor_string .)
    COMA            shift and go to state 268


state 223

    (78) array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .

    $end            reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ID              reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    IF              reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    FOR             reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    MAP             reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    VAR             reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    INT             reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    STRING          reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 78 (array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE .)


state 224

    (86) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean . D_LLAVE

    D_LLAVE         shift and go to state 269


state 225

    (124) valores_boolean -> valor_boolean .
    (125) valores_boolean -> valor_boolean . COMA valores_boolean

    D_LLAVE         reduce using rule 124 (valores_boolean -> valor_boolean .)
    COMA            shift and go to state 270


state 226

    (117) valores -> valor COMA valores .

    D_PARENTESIS    reduce using rule 117 (valores -> valor COMA valores .)
    BOOL            reduce using rule 117 (valores -> valor COMA valores .)
    STRINGTYPE      reduce using rule 117 (valores -> valor COMA valores .)
    INTEGER         reduce using rule 117 (valores -> valor COMA valores .)
    FLOAT32         reduce using rule 117 (valores -> valor COMA valores .)
    FLOAT64         reduce using rule 117 (valores -> valor COMA valores .)
    D_LLAVE         reduce using rule 117 (valores -> valor COMA valores .)


state 227

    (102) declara_atributo -> ID . DOS_PUNTOS expression
    (171) valor_variable -> ID .
    (101) valor_struct -> ID . PUNTO ID

    DOS_PUNTOS      shift and go to state 271
    COMA            reduce using rule 171 (valor_variable -> ID .)
    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 171 (valor_variable -> ID .)
    PUNTO           shift and go to state 94


state 228

    (95) init_struct -> empty_struct ASIGNACION ID I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 272


state 229

    (97) init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados . D_LLAVE

    D_LLAVE         shift and go to state 273


state 230

    (99) atributos_nombrados -> declara_atributo .
    (100) atributos_nombrados -> declara_atributo . COMA atributos_nombrados

    D_LLAVE         reduce using rule 99 (atributos_nombrados -> declara_atributo .)
    COMA            shift and go to state 274


state 231

    (48) llamada_params -> expression COMA llamada_params .

    D_PARENTESIS    reduce using rule 48 (llamada_params -> expression COMA llamada_params .)


state 232

    (96) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores . D_LLAVE

    D_LLAVE         shift and go to state 275


state 233

    (98) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados . D_LLAVE

    D_LLAVE         shift and go to state 276


state 234

    (49) instruccion -> IF condicion I_LLAVE body D_LLAVE .

    $end            reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ID              reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    IF              reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    INT             reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 49 (instruccion -> IF condicion I_LLAVE body D_LLAVE .)


state 235

    (5) body -> I_LLAVE instruct_expression D_LLAVE .

    D_LLAVE         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ID              reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    IF              reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ELSE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    ELSEIF          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    FOR             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    MAP             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    MAKE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    TYPE            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    FUNC            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    I_PARENTESIS    reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINTLN         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINTF          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    PRINT           reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    VAR             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    I_CORCHETE      reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    INT             reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    DOUBLE          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    STRING          reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    BOOLEAN         reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)
    $end            reduce using rule 5 (body -> I_LLAVE instruct_expression D_LLAVE .)


state 236

    (6) body -> I_LLAVE varias_instrucciones D_LLAVE .

    D_LLAVE         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ID              reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    IF              reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ELSE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    ELSEIF          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    FOR             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    MAP             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    MAKE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    TYPE            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    FUNC            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    I_PARENTESIS    reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINTLN         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINTF          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    PRINT           reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    VAR             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    I_CORCHETE      reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    INT             reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    DOUBLE          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    STRING          reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    BOOLEAN         reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)
    $end            reduce using rule 6 (body -> I_LLAVE varias_instrucciones D_LLAVE .)


state 237

    (7) body -> I_LLAVE varias_instrucciones instruct_expression . D_LLAVE

    D_LLAVE         shift and go to state 277


state 238

    (11) instruct_expression -> RETURN valor .
    (126) valor -> valor . operacion_binaria valor
    (109) expression -> valor .
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
    D_LLAVE         reduce using rule 11 (instruct_expression -> RETURN valor .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

  ! ADICION         [ reduce using rule 109 (expression -> valor .) ]
  ! RESTA           [ reduce using rule 109 (expression -> valor .) ]
  ! MULTIPLICACION  [ reduce using rule 109 (expression -> valor .) ]
  ! DIVISION        [ reduce using rule 109 (expression -> valor .) ]
  ! MODULO          [ reduce using rule 109 (expression -> valor .) ]
  ! MENOR_IGUAL     [ reduce using rule 109 (expression -> valor .) ]
  ! IGUAL           [ reduce using rule 109 (expression -> valor .) ]
  ! DIFERENTE       [ reduce using rule 109 (expression -> valor .) ]
  ! MAYOR           [ reduce using rule 109 (expression -> valor .) ]
  ! MAYOR_IGUAL     [ reduce using rule 109 (expression -> valor .) ]
  ! MENOR           [ reduce using rule 109 (expression -> valor .) ]

    operacion_binaria              shift and go to state 103

state 239

    (12) instruct_expression -> RETURN resultado .
    (110) expression -> resultado .

    D_LLAVE         reduce using rule 12 (instruct_expression -> RETURN resultado .)
    ADICION         reduce using rule 110 (expression -> resultado .)
    RESTA           reduce using rule 110 (expression -> resultado .)
    MULTIPLICACION  reduce using rule 110 (expression -> resultado .)
    DIVISION        reduce using rule 110 (expression -> resultado .)
    MODULO          reduce using rule 110 (expression -> resultado .)
    MENOR_IGUAL     reduce using rule 110 (expression -> resultado .)
    IGUAL           reduce using rule 110 (expression -> resultado .)
    DIFERENTE       reduce using rule 110 (expression -> resultado .)
    MAYOR           reduce using rule 110 (expression -> resultado .)
    MAYOR_IGUAL     reduce using rule 110 (expression -> resultado .)
    MENOR           reduce using rule 110 (expression -> resultado .)


state 240

    (171) valor_variable -> ID .
    (101) valor_struct -> ID . PUNTO ID
    (46) llamada_func -> ID . I_PARENTESIS llamada_params D_PARENTESIS

    ADICION         reduce using rule 171 (valor_variable -> ID .)
    RESTA           reduce using rule 171 (valor_variable -> ID .)
    MULTIPLICACION  reduce using rule 171 (valor_variable -> ID .)
    DIVISION        reduce using rule 171 (valor_variable -> ID .)
    MODULO          reduce using rule 171 (valor_variable -> ID .)
    MENOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    IGUAL           reduce using rule 171 (valor_variable -> ID .)
    DIFERENTE       reduce using rule 171 (valor_variable -> ID .)
    MAYOR           reduce using rule 171 (valor_variable -> ID .)
    MAYOR_IGUAL     reduce using rule 171 (valor_variable -> ID .)
    MENOR           reduce using rule 171 (valor_variable -> ID .)
    D_LLAVE         reduce using rule 171 (valor_variable -> ID .)
    PUNTO           shift and go to state 94
    I_PARENTESIS    shift and go to state 91


state 241

    (10) varias_instrucciones -> instruccion varias_instrucciones .

    D_LLAVE         reduce using rule 10 (varias_instrucciones -> instruccion varias_instrucciones .)
    RETURN          reduce using rule 10 (varias_instrucciones -> instruccion varias_instrucciones .)


state 242

    (51) instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .

    $end            reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ID              reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    IF              reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    INT             reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 51 (instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE .)


state 243

    (52) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 278


state 244

    (54) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION . RANGE ID I_LLAVE body D_LLAVE

    RANGE           shift and go to state 279


state 245

    (53) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA . ID operador_matematico I_LLAVE body D_LLAVE

    ID              shift and go to state 280


state 246

    (87) instruccion -> MAP I_CORCHETE type D_CORCHETE type . I_LLAVE D_LLAVE
    (89) instruccion -> MAP I_CORCHETE type D_CORCHETE type . I_LLAVE claves_valores D_LLAVE

    I_LLAVE         shift and go to state 281


state 247

    (71) array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .

    $end            reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ID              reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    IF              reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    FOR             reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    MAP             reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    VAR             reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    INT             reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    STRING          reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 71 (array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE .)


state 248

    (79) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int . D_LLAVE

    D_LLAVE         shift and go to state 282


state 249

    (72) array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .

    $end            reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ID              reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    IF              reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    INT             reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 72 (array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE .)


state 250

    (80) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double . D_LLAVE

    D_LLAVE         shift and go to state 283


state 251

    (73) array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .

    $end            reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ID              reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    IF              reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    FOR             reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    MAP             reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    VAR             reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    INT             reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    STRING          reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 73 (array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE .)


state 252

    (81) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string . D_LLAVE

    D_LLAVE         shift and go to state 284


state 253

    (74) array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .

    $end            reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ID              reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    IF              reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    FOR             reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    MAP             reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    VAR             reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    INT             reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    STRING          reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 74 (array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE .)


state 254

    (82) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean . D_LLAVE

    D_LLAVE         shift and go to state 285


state 255

    (88) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type . D_CORCHETE type D_PARENTESIS

    D_CORCHETE      shift and go to state 286


state 256

    (93) atributo -> ID . type
    (135) type -> . BOOL
    (136) type -> . STRINGTYPE
    (137) type -> . INTEGER
    (138) type -> . floating_type
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    BOOL            shift and go to state 85
    STRINGTYPE      shift and go to state 83
    INTEGER         shift and go to state 82
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    type                           shift and go to state 262
    floating_type                  shift and go to state 84

state 257

    (90) instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct . D_LLAVE

    D_LLAVE         shift and go to state 287


state 258

    (91) atributos_struct -> atributo .
    (92) atributos_struct -> atributo . atributos_struct
    (91) atributos_struct -> . atributo
    (92) atributos_struct -> . atributo atributos_struct
    (93) atributo -> . ID type

    D_LLAVE         reduce using rule 91 (atributos_struct -> atributo .)
    ID              shift and go to state 256

    atributo                       shift and go to state 258
    atributos_struct               shift and go to state 288

state 259

    (42) parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .

    INTEGER         reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    STRINGTYPE      reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    I_LLAVE         reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    FLOAT32         reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    FLOAT64         reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    ID              reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    IF              reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    ELSE            reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    ELSEIF          reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    FOR             reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    MAP             reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    MAKE            reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    TYPE            reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINTLN         reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINTF          reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    PRINT           reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    VAR             reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    I_CORCHETE      reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    INT             reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    DOUBLE          reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    STRING          reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)
    BOOLEAN         reduce using rule 42 (parametros_sin_tipo -> I_PARENTESIS parametros D_PARENTESIS .)


state 260

    (44) parametros -> atributo COMA . parametros
    (43) parametros -> . atributo
    (44) parametros -> . atributo COMA parametros
    (45) parametros -> . valores type
    (93) atributo -> . ID type
    (116) valores -> . valor
    (117) valores -> . valor COMA valores
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    ID              shift and go to state 213
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    atributo                       shift and go to state 211
    parametros                     shift and go to state 289
    valores                        shift and go to state 212
    valor                          shift and go to state 126
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 261

    (45) parametros -> valores type .

    D_PARENTESIS    reduce using rule 45 (parametros -> valores type .)


state 262

    (93) atributo -> ID type .

    COMA            reduce using rule 93 (atributo -> ID type .)
    D_PARENTESIS    reduce using rule 93 (atributo -> ID type .)
    ID              reduce using rule 93 (atributo -> ID type .)
    D_LLAVE         reduce using rule 93 (atributo -> ID type .)


state 263

    (83) array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .

    $end            reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PUNTO_COMA      reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    D_LLAVE         reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ID              reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    IF              reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSE            reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSEIF          reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    FOR             reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    MAP             reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    MAKE            reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    TYPE            reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    I_PARENTESIS    reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTLN         reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTF          reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINT           reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    VAR             reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    I_CORCHETE      reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    INT             reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    DOUBLE          reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    STRING          reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    BOOLEAN         reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    RETURN          reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)
    FUNC            reduce using rule 83 (array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE .)


state 264

    (119) valores_int -> valor_int COMA . valores_int
    (118) valores_int -> . valor_int
    (119) valores_int -> . valor_int COMA valores_int
    (167) valor_int -> . INT

    INT             shift and go to state 55

    valor_int                      shift and go to state 216
    valores_int                    shift and go to state 290

state 265

    (84) array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .

    $end            reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PUNTO_COMA      reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    D_LLAVE         reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ID              reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    IF              reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ELSE            reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    ELSEIF          reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    FOR             reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    MAP             reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    MAKE            reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    TYPE            reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    I_PARENTESIS    reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTLN         reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTF          reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    PRINT           reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    VAR             reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    I_CORCHETE      reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    INT             reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    DOUBLE          reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    STRING          reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    BOOLEAN         reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    RETURN          reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)
    FUNC            reduce using rule 84 (array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE .)


state 266

    (121) valores_double -> valor_double COMA . valores_double
    (120) valores_double -> . valor_double
    (121) valores_double -> . valor_double COMA valores_double
    (168) valor_double -> . DOUBLE

    DOUBLE          shift and go to state 56

    valor_double                   shift and go to state 219
    valores_double                 shift and go to state 291

state 267

    (85) array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .

    $end            reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PUNTO_COMA      reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    D_LLAVE         reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ID              reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    IF              reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSE            reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSEIF          reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FOR             reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAP             reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAKE            reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    TYPE            reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_PARENTESIS    reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTLN         reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTF          reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINT           reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    VAR             reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_CORCHETE      reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    INT             reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    DOUBLE          reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    STRING          reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    BOOLEAN         reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    RETURN          reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FUNC            reduce using rule 85 (array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE .)


state 268

    (123) valores_string -> valor_string COMA . valores_string
    (122) valores_string -> . valor_string
    (123) valores_string -> . valor_string COMA valores_string
    (169) valor_string -> . STRING

    STRING          shift and go to state 57

    valor_string                   shift and go to state 222
    valores_string                 shift and go to state 292

state 269

    (86) array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .

    $end            reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PUNTO_COMA      reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    D_LLAVE         reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ID              reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    IF              reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSE            reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSEIF          reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FOR             reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAP             reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAKE            reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    TYPE            reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_PARENTESIS    reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTLN         reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTF          reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINT           reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    VAR             reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_CORCHETE      reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    INT             reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    DOUBLE          reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    STRING          reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    BOOLEAN         reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    RETURN          reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FUNC            reduce using rule 86 (array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE .)


state 270

    (125) valores_boolean -> valor_boolean COMA . valores_boolean
    (124) valores_boolean -> . valor_boolean
    (125) valores_boolean -> . valor_boolean COMA valores_boolean
    (170) valor_boolean -> . BOOLEAN

    BOOLEAN         shift and go to state 48

    valor_boolean                  shift and go to state 225
    valores_boolean                shift and go to state 293

state 271

    (102) declara_atributo -> ID DOS_PUNTOS . expression
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    I_PARENTESIS    shift and go to state 8
    ID              shift and go to state 76
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    expression                     shift and go to state 294
    valor                          shift and go to state 14
    resultado                      shift and go to state 43
    llamada_func                   shift and go to state 74
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 272

    (95) init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .

    $end            reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    D_LLAVE         reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ID              reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    IF              reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSE            reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSEIF          reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FOR             reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAP             reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAKE            reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    TYPE            reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTLN         reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTF          reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINT           reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    VAR             reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_CORCHETE      reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    INT             reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    DOUBLE          reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    STRING          reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    BOOLEAN         reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    RETURN          reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FUNC            reduce using rule 95 (init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE .)


state 273

    (97) init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .

    $end            reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PUNTO_COMA      reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    D_LLAVE         reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ID              reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    IF              reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ELSE            reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ELSEIF          reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    FOR             reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    MAP             reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    MAKE            reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    TYPE            reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    I_PARENTESIS    reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINTLN         reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINTF          reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINT           reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    VAR             reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    I_CORCHETE      reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    INT             reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    DOUBLE          reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    STRING          reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    BOOLEAN         reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    RETURN          reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    FUNC            reduce using rule 97 (init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)


state 274

    (100) atributos_nombrados -> declara_atributo COMA . atributos_nombrados
    (99) atributos_nombrados -> . declara_atributo
    (100) atributos_nombrados -> . declara_atributo COMA atributos_nombrados
    (102) declara_atributo -> . ID DOS_PUNTOS expression

    ID              shift and go to state 296

    declara_atributo               shift and go to state 230
    atributos_nombrados            shift and go to state 295

state 275

    (96) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .

    $end            reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    D_LLAVE         reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ID              reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    IF              reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSE            reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    ELSEIF          reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FOR             reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAP             reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    MAKE            reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    TYPE            reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTLN         reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINTF          reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    PRINT           reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    VAR             reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    I_CORCHETE      reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    INT             reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    DOUBLE          reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    STRING          reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    BOOLEAN         reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    RETURN          reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)
    FUNC            reduce using rule 96 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE .)


state 276

    (98) init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .

    $end            reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PUNTO_COMA      reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    D_LLAVE         reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ID              reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    IF              reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ELSE            reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    ELSEIF          reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    FOR             reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    MAP             reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    MAKE            reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    TYPE            reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    I_PARENTESIS    reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINTLN         reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINTF          reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    PRINT           reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    VAR             reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    I_CORCHETE      reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    INT             reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    DOUBLE          reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    STRING          reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    BOOLEAN         reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    RETURN          reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)
    FUNC            reduce using rule 98 (init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE .)


state 277

    (7) body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .

    D_LLAVE         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ID              reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    IF              reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ELSE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    ELSEIF          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    FOR             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    MAP             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    MAKE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    TYPE            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    FUNC            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    I_PARENTESIS    reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINTLN         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINTF          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    PRINT           reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    VAR             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    I_CORCHETE      reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    INT             reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    DOUBLE          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    STRING          reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    BOOLEAN         reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)
    $end            reduce using rule 7 (body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE .)


state 278

    (52) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    I_LLAVE         shift and go to state 149
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    body                           shift and go to state 297
    instruccion                    shift and go to state 151
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 279

    (54) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE . ID I_LLAVE body D_LLAVE

    ID              shift and go to state 298


state 280

    (53) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID . operador_matematico I_LLAVE body D_LLAVE
    (141) operador_matematico -> . INCREMENTO
    (142) operador_matematico -> . DECREMENTO

    INCREMENTO      shift and go to state 101
    DECREMENTO      shift and go to state 102

    operador_matematico            shift and go to state 299

state 281

    (87) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE . D_LLAVE
    (89) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE . claves_valores D_LLAVE
    (104) claves_valores -> . clave_valor
    (105) claves_valores -> . clave_valor COMA claves_valores
    (103) clave_valor -> . valor DOS_PUNTOS valor
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    D_LLAVE         shift and go to state 300
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    claves_valores                 shift and go to state 301
    clave_valor                    shift and go to state 302
    valor                          shift and go to state 303
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 282

    (79) array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .

    $end            reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PUNTO_COMA      reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    D_LLAVE         reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ID              reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    IF              reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSE            reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    ELSEIF          reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    FOR             reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    MAP             reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    MAKE            reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    TYPE            reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    I_PARENTESIS    reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTLN         reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINTF          reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    PRINT           reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    VAR             reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    I_CORCHETE      reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    INT             reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    DOUBLE          reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    STRING          reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    BOOLEAN         reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    RETURN          reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)
    FUNC            reduce using rule 79 (array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE .)


state 283

    (80) array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .

    $end            reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PUNTO_COMA      reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    D_LLAVE         reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ID              reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    IF              reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ELSE            reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    ELSEIF          reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    FOR             reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    MAP             reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    MAKE            reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    TYPE            reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    I_PARENTESIS    reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTLN         reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINTF          reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    PRINT           reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    VAR             reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    I_CORCHETE      reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    INT             reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    DOUBLE          reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    STRING          reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    BOOLEAN         reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    RETURN          reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)
    FUNC            reduce using rule 80 (array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE .)


state 284

    (81) array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .

    $end            reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PUNTO_COMA      reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    D_LLAVE         reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ID              reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    IF              reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSE            reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    ELSEIF          reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FOR             reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAP             reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    MAKE            reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    TYPE            reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_PARENTESIS    reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTLN         reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINTF          reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    PRINT           reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    VAR             reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    I_CORCHETE      reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    INT             reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    DOUBLE          reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    STRING          reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    BOOLEAN         reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    RETURN          reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)
    FUNC            reduce using rule 81 (array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE .)


state 285

    (82) array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .

    $end            reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PUNTO_COMA      reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    D_LLAVE         reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ID              reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    IF              reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSE            reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    ELSEIF          reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FOR             reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAP             reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    MAKE            reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    TYPE            reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_PARENTESIS    reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTLN         reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINTF          reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    PRINT           reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    VAR             reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    I_CORCHETE      reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    INT             reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    DOUBLE          reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    STRING          reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    BOOLEAN         reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    RETURN          reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)
    FUNC            reduce using rule 82 (array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE .)


state 286

    (88) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE . type D_PARENTESIS
    (135) type -> . BOOL
    (136) type -> . STRINGTYPE
    (137) type -> . INTEGER
    (138) type -> . floating_type
    (139) floating_type -> . FLOAT32
    (140) floating_type -> . FLOAT64

    BOOL            shift and go to state 85
    STRINGTYPE      shift and go to state 83
    INTEGER         shift and go to state 82
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88

    type                           shift and go to state 304
    floating_type                  shift and go to state 84

state 287

    (90) instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .

    $end            reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PUNTO_COMA      reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    D_LLAVE         reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ID              reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    IF              reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ELSE            reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    ELSEIF          reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    FOR             reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    MAP             reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    MAKE            reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    TYPE            reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    I_PARENTESIS    reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINTLN         reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINTF          reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    PRINT           reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    VAR             reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    I_CORCHETE      reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    INT             reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    DOUBLE          reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    STRING          reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    BOOLEAN         reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    RETURN          reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)
    FUNC            reduce using rule 90 (instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE .)


state 288

    (92) atributos_struct -> atributo atributos_struct .

    D_LLAVE         reduce using rule 92 (atributos_struct -> atributo atributos_struct .)


state 289

    (44) parametros -> atributo COMA parametros .

    D_PARENTESIS    reduce using rule 44 (parametros -> atributo COMA parametros .)


state 290

    (119) valores_int -> valor_int COMA valores_int .

    D_LLAVE         reduce using rule 119 (valores_int -> valor_int COMA valores_int .)


state 291

    (121) valores_double -> valor_double COMA valores_double .

    D_LLAVE         reduce using rule 121 (valores_double -> valor_double COMA valores_double .)


state 292

    (123) valores_string -> valor_string COMA valores_string .

    D_LLAVE         reduce using rule 123 (valores_string -> valor_string COMA valores_string .)


state 293

    (125) valores_boolean -> valor_boolean COMA valores_boolean .

    D_LLAVE         reduce using rule 125 (valores_boolean -> valor_boolean COMA valores_boolean .)


state 294

    (102) declara_atributo -> ID DOS_PUNTOS expression .
    (113) resultado -> expression . operacion_binaria expression
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    COMA            reduce using rule 102 (declara_atributo -> ID DOS_PUNTOS expression .)
    D_LLAVE         reduce using rule 102 (declara_atributo -> ID DOS_PUNTOS expression .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 59

state 295

    (100) atributos_nombrados -> declara_atributo COMA atributos_nombrados .

    D_LLAVE         reduce using rule 100 (atributos_nombrados -> declara_atributo COMA atributos_nombrados .)


state 296

    (102) declara_atributo -> ID . DOS_PUNTOS expression

    DOS_PUNTOS      shift and go to state 271


state 297

    (52) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 305


state 298

    (54) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 306


state 299

    (53) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico . I_LLAVE body D_LLAVE

    I_LLAVE         shift and go to state 307


state 300

    (87) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .

    $end            reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PUNTO_COMA      reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    D_LLAVE         reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ID              reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    IF              reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ELSE            reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    ELSEIF          reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    FOR             reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    MAP             reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    MAKE            reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    TYPE            reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    I_PARENTESIS    reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINTLN         reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINTF          reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    PRINT           reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    VAR             reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    I_CORCHETE      reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    INT             reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    DOUBLE          reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    STRING          reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    BOOLEAN         reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    RETURN          reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)
    FUNC            reduce using rule 87 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE .)


state 301

    (89) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores . D_LLAVE

    D_LLAVE         shift and go to state 308


state 302

    (104) claves_valores -> clave_valor .
    (105) claves_valores -> clave_valor . COMA claves_valores

    D_LLAVE         reduce using rule 104 (claves_valores -> clave_valor .)
    COMA            shift and go to state 309


state 303

    (103) clave_valor -> valor . DOS_PUNTOS valor
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    DOS_PUNTOS      shift and go to state 310
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 103

state 304

    (88) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type . D_PARENTESIS

    D_PARENTESIS    shift and go to state 311


state 305

    (52) instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .

    $end            reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ID              reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    IF              reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    INT             reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 52 (instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)


state 306

    (54) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    I_LLAVE         shift and go to state 149
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    body                           shift and go to state 312
    instruccion                    shift and go to state 151
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    valor                          shift and go to state 14
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 307

    (53) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE . body D_LLAVE
    (4) body -> . instruccion
    (5) body -> . I_LLAVE instruct_expression D_LLAVE
    (6) body -> . I_LLAVE varias_instrucciones D_LLAVE
    (7) body -> . I_LLAVE varias_instrucciones instruct_expression D_LLAVE
    (8) body -> . I_LLAVE D_LLAVE
    (13) instruccion -> . llamada_func
    (14) instruccion -> . resultado_inc_dec
    (15) instruccion -> . expression
    (16) instruccion -> . print I_PARENTESIS valores D_PARENTESIS
    (17) instruccion -> . declaracion_comun
    (18) instruccion -> . decla_header ASIGNACION instruccion
    (19) instruccion -> . decla_header array_type_spec ASIGNACION instruccion
    (20) instruccion -> . empty_struct
    (21) instruccion -> . empty_array
    (22) instruccion -> . ID asignacion valor
    (23) instruccion -> . ID asignacion instruccion
    (49) instruccion -> . IF condicion I_LLAVE body D_LLAVE
    (50) instruccion -> . ELSE I_LLAVE body D_LLAVE
    (51) instruccion -> . ELSEIF condicion I_LLAVE body D_LLAVE
    (52) instruccion -> . FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (53) instruccion -> . FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE
    (54) instruccion -> . FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE
    (55) instruccion -> . array_int
    (56) instruccion -> . array_double
    (57) instruccion -> . array_string
    (58) instruccion -> . array_boolean
    (59) instruccion -> . array_length_int
    (60) instruccion -> . array_length_double
    (61) instruccion -> . array_length_string
    (62) instruccion -> . array_length_boolean
    (63) instruccion -> . array_con_valores_int
    (64) instruccion -> . array_con_valores_double
    (65) instruccion -> . array_con_valores_string
    (66) instruccion -> . array_con_valores_boolean
    (67) instruccion -> . array_length_con_valores_int
    (68) instruccion -> . array_length_con_valores_double
    (69) instruccion -> . array_length_con_valores_string
    (70) instruccion -> . array_length_con_valores_boolean
    (87) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE
    (88) instruccion -> . MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS
    (89) instruccion -> . MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE
    (90) instruccion -> . TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE
    (94) instruccion -> . init_struct
    (46) llamada_func -> . ID I_PARENTESIS llamada_params D_PARENTESIS
    (114) resultado_inc_dec -> . ID operador_matematico
    (115) resultado_inc_dec -> . valor_struct operador_matematico
    (109) expression -> . valor
    (110) expression -> . resultado
    (111) expression -> . llamada_func
    (112) expression -> . I_PARENTESIS resultado D_PARENTESIS
    (127) print -> . PRINTLN
    (128) print -> . PRINTF
    (129) print -> . PRINT
    (24) declaracion_comun -> . decla_header type ASIGNACION valor
    (25) declaracion_comun -> . decla_header ASIGNACION valor
    (28) decla_header -> . VAR ID
    (26) empty_struct -> . decla_header ID
    (27) empty_array -> . decla_header array_type_spec
    (71) array_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE
    (72) array_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE
    (73) array_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE
    (74) array_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE
    (75) array_length_int -> . array_length INTEGER I_LLAVE D_LLAVE
    (76) array_length_double -> . array_length floating_type I_LLAVE D_LLAVE
    (77) array_length_string -> . array_length STRINGTYPE I_LLAVE D_LLAVE
    (78) array_length_boolean -> . array_length BOOLEAN I_LLAVE D_LLAVE
    (79) array_con_valores_int -> . I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE
    (80) array_con_valores_double -> . I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE
    (81) array_con_valores_string -> . I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE
    (82) array_con_valores_boolean -> . I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (83) array_length_con_valores_int -> . array_length INTEGER I_LLAVE valores_int D_LLAVE
    (84) array_length_con_valores_double -> . array_length floating_type I_LLAVE valores_double D_LLAVE
    (85) array_length_con_valores_string -> . array_length STRINGTYPE I_LLAVE valores_string D_LLAVE
    (86) array_length_con_valores_boolean -> . array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE
    (95) init_struct -> . empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE
    (96) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE
    (97) init_struct -> . empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (98) init_struct -> . ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE
    (101) valor_struct -> . ID PUNTO ID
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (113) resultado -> . expression operacion_binaria expression
    (134) array_length -> . I_CORCHETE INT D_CORCHETE
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID

    I_LLAVE         shift and go to state 149
    ID              shift and go to state 13
    IF              shift and go to state 15
    ELSE            shift and go to state 16
    ELSEIF          shift and go to state 17
    FOR             shift and go to state 18
    MAP             shift and go to state 35
    MAKE            shift and go to state 37
    TYPE            shift and go to state 38
    I_PARENTESIS    shift and go to state 8
    PRINTLN         shift and go to state 44
    PRINTF          shift and go to state 45
    PRINT           shift and go to state 46
    VAR             shift and go to state 47
    I_CORCHETE      shift and go to state 36
    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48

    instruccion                    shift and go to state 151
    valor                          shift and go to state 14
    body                           shift and go to state 313
    llamada_func                   shift and go to state 4
    resultado_inc_dec              shift and go to state 5
    expression                     shift and go to state 6
    print                          shift and go to state 7
    declaracion_comun              shift and go to state 9
    decla_header                   shift and go to state 10
    empty_struct                   shift and go to state 11
    empty_array                    shift and go to state 12
    array_int                      shift and go to state 19
    array_double                   shift and go to state 20
    array_string                   shift and go to state 21
    array_boolean                  shift and go to state 22
    array_length_int               shift and go to state 23
    array_length_double            shift and go to state 24
    array_length_string            shift and go to state 25
    array_length_boolean           shift and go to state 26
    array_con_valores_int          shift and go to state 27
    array_con_valores_double       shift and go to state 28
    array_con_valores_string       shift and go to state 29
    array_con_valores_boolean      shift and go to state 30
    array_length_con_valores_int   shift and go to state 31
    array_length_con_valores_double shift and go to state 32
    array_length_con_valores_string shift and go to state 33
    array_length_con_valores_boolean shift and go to state 34
    init_struct                    shift and go to state 39
    valor_struct                   shift and go to state 42
    resultado                      shift and go to state 43
    array_length                   shift and go to state 49
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54

state 308

    (89) instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .

    $end            reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PUNTO_COMA      reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    D_LLAVE         reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ID              reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    IF              reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ELSE            reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    ELSEIF          reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    FOR             reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    MAP             reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    MAKE            reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    TYPE            reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    I_PARENTESIS    reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINTLN         reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINTF          reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    PRINT           reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    VAR             reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    I_CORCHETE      reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    INT             reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    DOUBLE          reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    STRING          reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    BOOLEAN         reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    RETURN          reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)
    FUNC            reduce using rule 89 (instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE .)


state 309

    (105) claves_valores -> clave_valor COMA . claves_valores
    (104) claves_valores -> . clave_valor
    (105) claves_valores -> . clave_valor COMA claves_valores
    (103) clave_valor -> . valor DOS_PUNTOS valor
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    clave_valor                    shift and go to state 302
    claves_valores                 shift and go to state 314
    valor                          shift and go to state 303
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 310

    (103) clave_valor -> valor DOS_PUNTOS . valor
    (126) valor -> . valor operacion_binaria valor
    (161) valor -> . valor_int
    (162) valor -> . valor_double
    (163) valor -> . valor_string
    (164) valor -> . valor_boolean
    (165) valor -> . valor_variable
    (166) valor -> . valor_struct
    (167) valor_int -> . INT
    (168) valor_double -> . DOUBLE
    (169) valor_string -> . STRING
    (170) valor_boolean -> . BOOLEAN
    (171) valor_variable -> . ID
    (101) valor_struct -> . ID PUNTO ID

    INT             shift and go to state 55
    DOUBLE          shift and go to state 56
    STRING          shift and go to state 57
    BOOLEAN         shift and go to state 48
    ID              shift and go to state 107

    valor                          shift and go to state 315
    valor_int                      shift and go to state 50
    valor_double                   shift and go to state 51
    valor_string                   shift and go to state 52
    valor_boolean                  shift and go to state 53
    valor_variable                 shift and go to state 54
    valor_struct                   shift and go to state 75

state 311

    (88) instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .

    $end            reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PUNTO_COMA      reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    D_LLAVE         reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ID              reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    IF              reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ELSE            reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    ELSEIF          reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    FOR             reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    MAP             reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    MAKE            reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    TYPE            reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    I_PARENTESIS    reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINTLN         reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINTF          reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    PRINT           reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    VAR             reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    I_CORCHETE      reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    INT             reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    DOUBLE          reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    STRING          reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    BOOLEAN         reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    RETURN          reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)
    FUNC            reduce using rule 88 (instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS .)


state 312

    (54) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 316


state 313

    (53) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body . D_LLAVE

    D_LLAVE         shift and go to state 317


state 314

    (105) claves_valores -> clave_valor COMA claves_valores .

    D_LLAVE         reduce using rule 105 (claves_valores -> clave_valor COMA claves_valores .)


state 315

    (103) clave_valor -> valor DOS_PUNTOS valor .
    (126) valor -> valor . operacion_binaria valor
    (150) operacion_binaria -> . ADICION
    (151) operacion_binaria -> . RESTA
    (152) operacion_binaria -> . MULTIPLICACION
    (153) operacion_binaria -> . DIVISION
    (154) operacion_binaria -> . MODULO
    (155) operacion_binaria -> . MENOR_IGUAL
    (156) operacion_binaria -> . IGUAL
    (157) operacion_binaria -> . DIFERENTE
    (158) operacion_binaria -> . MAYOR
    (159) operacion_binaria -> . MAYOR_IGUAL
    (160) operacion_binaria -> . MENOR

    COMA            reduce using rule 103 (clave_valor -> valor DOS_PUNTOS valor .)
    D_LLAVE         reduce using rule 103 (clave_valor -> valor DOS_PUNTOS valor .)
    ADICION         shift and go to state 60
    RESTA           shift and go to state 61
    MULTIPLICACION  shift and go to state 62
    DIVISION        shift and go to state 63
    MODULO          shift and go to state 64
    MENOR_IGUAL     shift and go to state 65
    IGUAL           shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR           shift and go to state 68
    MAYOR_IGUAL     shift and go to state 69
    MENOR           shift and go to state 70

    operacion_binaria              shift and go to state 103

state 316

    (54) instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .

    $end            reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ID              reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    IF              reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    INT             reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 54 (instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE .)


state 317

    (53) instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .

    $end            reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PUNTO_COMA      reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    D_LLAVE         reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ID              reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    IF              reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ELSE            reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    ELSEIF          reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    FOR             reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    MAP             reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    MAKE            reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    TYPE            reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    I_PARENTESIS    reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINTLN         reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINTF          reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    PRINT           reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    VAR             reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    I_CORCHETE      reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    INT             reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    DOUBLE          reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    STRING          reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    BOOLEAN         reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    RETURN          reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)
    FUNC            reduce using rule 53 (instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for I_PARENTESIS in state 13 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 14 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 14 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 14 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 14 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 14 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 14 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 14 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 14 resolved as shift
WARNING: shift/reduce conflict for I_PARENTESIS in state 76 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 124 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 124 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 124 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 124 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 129 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 129 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 129 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 129 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 129 resolved as shift
WARNING: shift/reduce conflict for I_PARENTESIS in state 130 resolved as shift
WARNING: shift/reduce conflict for I_PARENTESIS in state 139 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 140 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 140 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 140 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 140 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 140 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 140 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 146 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 146 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 146 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 146 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 146 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 146 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 146 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 153 resolved as shift
WARNING: shift/reduce conflict for I_LLAVE in state 166 resolved as shift
WARNING: shift/reduce conflict for ID in state 166 resolved as shift
WARNING: shift/reduce conflict for IF in state 166 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 166 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 166 resolved as shift
WARNING: shift/reduce conflict for FOR in state 166 resolved as shift
WARNING: shift/reduce conflict for MAP in state 166 resolved as shift
WARNING: shift/reduce conflict for MAKE in state 166 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 166 resolved as shift
WARNING: shift/reduce conflict for I_PARENTESIS in state 166 resolved as shift
WARNING: shift/reduce conflict for PRINTLN in state 166 resolved as shift
WARNING: shift/reduce conflict for PRINTF in state 166 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 166 resolved as shift
WARNING: shift/reduce conflict for VAR in state 166 resolved as shift
WARNING: shift/reduce conflict for I_CORCHETE in state 166 resolved as shift
WARNING: shift/reduce conflict for INT in state 166 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 166 resolved as shift
WARNING: shift/reduce conflict for STRING in state 166 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 166 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 213 resolved as shift
WARNING: shift/reduce conflict for STRINGTYPE in state 213 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 213 resolved as shift
WARNING: shift/reduce conflict for FLOAT32 in state 213 resolved as shift
WARNING: shift/reduce conflict for FLOAT64 in state 213 resolved as shift
WARNING: shift/reduce conflict for ADICION in state 238 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 238 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 238 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 238 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 238 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 238 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 238 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 238 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 238 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 238 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 238 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (instruccion -> llamada_func)
WARNING: rejected rule (expression -> llamada_func) in state 4
WARNING: reduce/reduce conflict in state 129 resolved using rule (declaracion_comun -> decla_header ASIGNACION valor)
WARNING: rejected rule (expression -> valor) in state 129
WARNING: reduce/reduce conflict in state 140 resolved using rule (instruccion -> ID asignacion valor)
WARNING: rejected rule (expression -> valor) in state 140
