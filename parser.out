Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ASIGNACION_ADICION
    ASIGNACION_DIVISION
    ASIGNACION_MODULO
    ASIGNACION_MULTI
    ASIGNACION_RESTA
    BOOLEAN
    BREAK
    CASE
    CHAN
    CONST
    CONTINUE
    DECLARACION_ASIGNACION
    DECREMENTO
    DEFAULT
    DEFER
    DIFERENTE
    DOS_PUNTOS
    D_CORCHETE
    D_LLAVE
    ELSE
    ELSEIF
    FALLTHROUGH
    FLOAT32
    FLOAT64
    FOR
    FUNC
    GO
    GOTO
    IDENTIFICADOR
    IF
    IGUAL
    IMPORT
    INCREMENTO
    INTERFACE
    I_CORCHETE
    I_LLAVE
    MAP
    MAYOR
    MAYOR_IGUAL
    MENOR
    MENOR_IGUAL
    NOT
    OR
    PACKAGE
    PUNTO
    PUNTO_COMA
    RANGE
    RETURN
    SELECT
    STRUCT
    SWITCH
    TYPE

Grammar

Rule 0     S' -> instruccion
Rule 1     instruccion -> print I_PARENTESIS arg D_PARENTESIS
Rule 2     instruccion -> VAR type ID ASIGNACION valor
Rule 3     valor -> valor operacion_mat valor
Rule 4     arg -> valor
Rule 5     arg -> valor COMA valor
Rule 6     print -> PRINTLN
Rule 7     print -> PRINTF
Rule 8     print -> PRINT
Rule 9     type -> BOOL
Rule 10    type -> STRINGTYPE
Rule 11    type -> INTEGER
Rule 12    operacion_mat -> ADICION
Rule 13    operacion_mat -> RESTA
Rule 14    operacion_mat -> MULTIPLICACION
Rule 15    operacion_mat -> DIVISION
Rule 16    operacion_mat -> MODULO
Rule 17    valor -> INT
Rule 18    valor -> DOUBLE
Rule 19    valor -> STRING
Rule 20    valor -> ID

Terminals, with rules where they appear

ADICION              : 12
AND                  : 
ASIGNACION           : 2
ASIGNACION_ADICION   : 
ASIGNACION_DIVISION  : 
ASIGNACION_MODULO    : 
ASIGNACION_MULTI     : 
ASIGNACION_RESTA     : 
BOOL                 : 9
BOOLEAN              : 
BREAK                : 
CASE                 : 
CHAN                 : 
COMA                 : 5
CONST                : 
CONTINUE             : 
DECLARACION_ASIGNACION : 
DECREMENTO           : 
DEFAULT              : 
DEFER                : 
DIFERENTE            : 
DIVISION             : 15
DOS_PUNTOS           : 
DOUBLE               : 18
D_CORCHETE           : 
D_LLAVE              : 
D_PARENTESIS         : 1
ELSE                 : 
ELSEIF               : 
FALLTHROUGH          : 
FLOAT32              : 
FLOAT64              : 
FOR                  : 
FUNC                 : 
GO                   : 
GOTO                 : 
ID                   : 2 20
IDENTIFICADOR        : 
IF                   : 
IGUAL                : 
IMPORT               : 
INCREMENTO           : 
INT                  : 17
INTEGER              : 11
INTERFACE            : 
I_CORCHETE           : 
I_LLAVE              : 
I_PARENTESIS         : 1
MAP                  : 
MAYOR                : 
MAYOR_IGUAL          : 
MENOR                : 
MENOR_IGUAL          : 
MODULO               : 16
MULTIPLICACION       : 14
NOT                  : 
OR                   : 
PACKAGE              : 
PRINT                : 8
PRINTF               : 7
PRINTLN              : 6
PUNTO                : 
PUNTO_COMA           : 
RANGE                : 
RESTA                : 13
RETURN               : 
SELECT               : 
STRING               : 19
STRINGTYPE           : 10
STRUCT               : 
SWITCH               : 
TYPE                 : 
VAR                  : 2
error                : 

Nonterminals, with rules where they appear

arg                  : 1
instruccion          : 0
operacion_mat        : 3
print                : 1
type                 : 2
valor                : 2 3 3 4 5 5

Parsing method: LALR

state 0

    (0) S' -> . instruccion
    (1) instruccion -> . print I_PARENTESIS arg D_PARENTESIS
    (2) instruccion -> . VAR type ID ASIGNACION valor
    (6) print -> . PRINTLN
    (7) print -> . PRINTF
    (8) print -> . PRINT

    VAR             shift and go to state 3
    PRINTLN         shift and go to state 4
    PRINTF          shift and go to state 5
    PRINT           shift and go to state 6

    instruccion                    shift and go to state 1
    print                          shift and go to state 2

state 1

    (0) S' -> instruccion .



state 2

    (1) instruccion -> print . I_PARENTESIS arg D_PARENTESIS

    I_PARENTESIS    shift and go to state 7


state 3

    (2) instruccion -> VAR . type ID ASIGNACION valor
    (9) type -> . BOOL
    (10) type -> . STRINGTYPE
    (11) type -> . INTEGER

    BOOL            shift and go to state 9
    STRINGTYPE      shift and go to state 10
    INTEGER         shift and go to state 11

    type                           shift and go to state 8

state 4

    (6) print -> PRINTLN .

    I_PARENTESIS    reduce using rule 6 (print -> PRINTLN .)


state 5

    (7) print -> PRINTF .

    I_PARENTESIS    reduce using rule 7 (print -> PRINTF .)


state 6

    (8) print -> PRINT .

    I_PARENTESIS    reduce using rule 8 (print -> PRINT .)


state 7

    (1) instruccion -> print I_PARENTESIS . arg D_PARENTESIS
    (4) arg -> . valor
    (5) arg -> . valor COMA valor
    (3) valor -> . valor operacion_mat valor
    (17) valor -> . INT
    (18) valor -> . DOUBLE
    (19) valor -> . STRING
    (20) valor -> . ID

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 17

    arg                            shift and go to state 12
    valor                          shift and go to state 13

state 8

    (2) instruccion -> VAR type . ID ASIGNACION valor

    ID              shift and go to state 18


state 9

    (9) type -> BOOL .

    ID              reduce using rule 9 (type -> BOOL .)


state 10

    (10) type -> STRINGTYPE .

    ID              reduce using rule 10 (type -> STRINGTYPE .)


state 11

    (11) type -> INTEGER .

    ID              reduce using rule 11 (type -> INTEGER .)


state 12

    (1) instruccion -> print I_PARENTESIS arg . D_PARENTESIS

    D_PARENTESIS    shift and go to state 19


state 13

    (4) arg -> valor .
    (5) arg -> valor . COMA valor
    (3) valor -> valor . operacion_mat valor
    (12) operacion_mat -> . ADICION
    (13) operacion_mat -> . RESTA
    (14) operacion_mat -> . MULTIPLICACION
    (15) operacion_mat -> . DIVISION
    (16) operacion_mat -> . MODULO

    D_PARENTESIS    reduce using rule 4 (arg -> valor .)
    COMA            shift and go to state 20
    ADICION         shift and go to state 22
    RESTA           shift and go to state 23
    MULTIPLICACION  shift and go to state 24
    DIVISION        shift and go to state 25
    MODULO          shift and go to state 26

    operacion_mat                  shift and go to state 21

state 14

    (17) valor -> INT .

    COMA            reduce using rule 17 (valor -> INT .)
    ADICION         reduce using rule 17 (valor -> INT .)
    RESTA           reduce using rule 17 (valor -> INT .)
    MULTIPLICACION  reduce using rule 17 (valor -> INT .)
    DIVISION        reduce using rule 17 (valor -> INT .)
    MODULO          reduce using rule 17 (valor -> INT .)
    D_PARENTESIS    reduce using rule 17 (valor -> INT .)
    $end            reduce using rule 17 (valor -> INT .)


state 15

    (18) valor -> DOUBLE .

    COMA            reduce using rule 18 (valor -> DOUBLE .)
    ADICION         reduce using rule 18 (valor -> DOUBLE .)
    RESTA           reduce using rule 18 (valor -> DOUBLE .)
    MULTIPLICACION  reduce using rule 18 (valor -> DOUBLE .)
    DIVISION        reduce using rule 18 (valor -> DOUBLE .)
    MODULO          reduce using rule 18 (valor -> DOUBLE .)
    D_PARENTESIS    reduce using rule 18 (valor -> DOUBLE .)
    $end            reduce using rule 18 (valor -> DOUBLE .)


state 16

    (19) valor -> STRING .

    COMA            reduce using rule 19 (valor -> STRING .)
    ADICION         reduce using rule 19 (valor -> STRING .)
    RESTA           reduce using rule 19 (valor -> STRING .)
    MULTIPLICACION  reduce using rule 19 (valor -> STRING .)
    DIVISION        reduce using rule 19 (valor -> STRING .)
    MODULO          reduce using rule 19 (valor -> STRING .)
    D_PARENTESIS    reduce using rule 19 (valor -> STRING .)
    $end            reduce using rule 19 (valor -> STRING .)


state 17

    (20) valor -> ID .

    COMA            reduce using rule 20 (valor -> ID .)
    ADICION         reduce using rule 20 (valor -> ID .)
    RESTA           reduce using rule 20 (valor -> ID .)
    MULTIPLICACION  reduce using rule 20 (valor -> ID .)
    DIVISION        reduce using rule 20 (valor -> ID .)
    MODULO          reduce using rule 20 (valor -> ID .)
    D_PARENTESIS    reduce using rule 20 (valor -> ID .)
    $end            reduce using rule 20 (valor -> ID .)


state 18

    (2) instruccion -> VAR type ID . ASIGNACION valor

    ASIGNACION      shift and go to state 27


state 19

    (1) instruccion -> print I_PARENTESIS arg D_PARENTESIS .

    $end            reduce using rule 1 (instruccion -> print I_PARENTESIS arg D_PARENTESIS .)


state 20

    (5) arg -> valor COMA . valor
    (3) valor -> . valor operacion_mat valor
    (17) valor -> . INT
    (18) valor -> . DOUBLE
    (19) valor -> . STRING
    (20) valor -> . ID

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 17

    valor                          shift and go to state 28

state 21

    (3) valor -> valor operacion_mat . valor
    (3) valor -> . valor operacion_mat valor
    (17) valor -> . INT
    (18) valor -> . DOUBLE
    (19) valor -> . STRING
    (20) valor -> . ID

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 17

    valor                          shift and go to state 29

state 22

    (12) operacion_mat -> ADICION .

    INT             reduce using rule 12 (operacion_mat -> ADICION .)
    DOUBLE          reduce using rule 12 (operacion_mat -> ADICION .)
    STRING          reduce using rule 12 (operacion_mat -> ADICION .)
    ID              reduce using rule 12 (operacion_mat -> ADICION .)


state 23

    (13) operacion_mat -> RESTA .

    INT             reduce using rule 13 (operacion_mat -> RESTA .)
    DOUBLE          reduce using rule 13 (operacion_mat -> RESTA .)
    STRING          reduce using rule 13 (operacion_mat -> RESTA .)
    ID              reduce using rule 13 (operacion_mat -> RESTA .)


state 24

    (14) operacion_mat -> MULTIPLICACION .

    INT             reduce using rule 14 (operacion_mat -> MULTIPLICACION .)
    DOUBLE          reduce using rule 14 (operacion_mat -> MULTIPLICACION .)
    STRING          reduce using rule 14 (operacion_mat -> MULTIPLICACION .)
    ID              reduce using rule 14 (operacion_mat -> MULTIPLICACION .)


state 25

    (15) operacion_mat -> DIVISION .

    INT             reduce using rule 15 (operacion_mat -> DIVISION .)
    DOUBLE          reduce using rule 15 (operacion_mat -> DIVISION .)
    STRING          reduce using rule 15 (operacion_mat -> DIVISION .)
    ID              reduce using rule 15 (operacion_mat -> DIVISION .)


state 26

    (16) operacion_mat -> MODULO .

    INT             reduce using rule 16 (operacion_mat -> MODULO .)
    DOUBLE          reduce using rule 16 (operacion_mat -> MODULO .)
    STRING          reduce using rule 16 (operacion_mat -> MODULO .)
    ID              reduce using rule 16 (operacion_mat -> MODULO .)


state 27

    (2) instruccion -> VAR type ID ASIGNACION . valor
    (3) valor -> . valor operacion_mat valor
    (17) valor -> . INT
    (18) valor -> . DOUBLE
    (19) valor -> . STRING
    (20) valor -> . ID

    INT             shift and go to state 14
    DOUBLE          shift and go to state 15
    STRING          shift and go to state 16
    ID              shift and go to state 17

    valor                          shift and go to state 30

state 28

    (5) arg -> valor COMA valor .
    (3) valor -> valor . operacion_mat valor
    (12) operacion_mat -> . ADICION
    (13) operacion_mat -> . RESTA
    (14) operacion_mat -> . MULTIPLICACION
    (15) operacion_mat -> . DIVISION
    (16) operacion_mat -> . MODULO

    D_PARENTESIS    reduce using rule 5 (arg -> valor COMA valor .)
    ADICION         shift and go to state 22
    RESTA           shift and go to state 23
    MULTIPLICACION  shift and go to state 24
    DIVISION        shift and go to state 25
    MODULO          shift and go to state 26

    operacion_mat                  shift and go to state 21

state 29

    (3) valor -> valor operacion_mat valor .
    (3) valor -> valor . operacion_mat valor
    (12) operacion_mat -> . ADICION
    (13) operacion_mat -> . RESTA
    (14) operacion_mat -> . MULTIPLICACION
    (15) operacion_mat -> . DIVISION
    (16) operacion_mat -> . MODULO

  ! shift/reduce conflict for ADICION resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    COMA            reduce using rule 3 (valor -> valor operacion_mat valor .)
    D_PARENTESIS    reduce using rule 3 (valor -> valor operacion_mat valor .)
    $end            reduce using rule 3 (valor -> valor operacion_mat valor .)
    ADICION         shift and go to state 22
    RESTA           shift and go to state 23
    MULTIPLICACION  shift and go to state 24
    DIVISION        shift and go to state 25
    MODULO          shift and go to state 26

  ! ADICION         [ reduce using rule 3 (valor -> valor operacion_mat valor .) ]
  ! RESTA           [ reduce using rule 3 (valor -> valor operacion_mat valor .) ]
  ! MULTIPLICACION  [ reduce using rule 3 (valor -> valor operacion_mat valor .) ]
  ! DIVISION        [ reduce using rule 3 (valor -> valor operacion_mat valor .) ]
  ! MODULO          [ reduce using rule 3 (valor -> valor operacion_mat valor .) ]

    operacion_mat                  shift and go to state 21

state 30

    (2) instruccion -> VAR type ID ASIGNACION valor .
    (3) valor -> valor . operacion_mat valor
    (12) operacion_mat -> . ADICION
    (13) operacion_mat -> . RESTA
    (14) operacion_mat -> . MULTIPLICACION
    (15) operacion_mat -> . DIVISION
    (16) operacion_mat -> . MODULO

    $end            reduce using rule 2 (instruccion -> VAR type ID ASIGNACION valor .)
    ADICION         shift and go to state 22
    RESTA           shift and go to state 23
    MULTIPLICACION  shift and go to state 24
    DIVISION        shift and go to state 25
    MODULO          shift and go to state 26

    operacion_mat                  shift and go to state 21
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ADICION in state 29 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 29 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 29 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 29 resolved as shift
