
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADICION AND ASIGNACION ASIGNACION_ADICION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTI ASIGNACION_RESTA BOOL BOOLEAN BREAK CASE CHAN COMA CONST CONTINUE DECLARACION_ASIGNACION DECREMENTO DEFAULT DEFER DIFERENTE DIVISION DOS_PUNTOS DOUBLE D_CORCHETE D_LLAVE D_PARENTESIS ELSE ELSEIF FALLTHROUGH FLOAT32 FLOAT64 FOR FUNC GO GOTO ID IDENTIFICADOR IF IGUAL IMPORT INCREMENTO INT INTEGER INTERFACE I_CORCHETE I_LLAVE I_PARENTESIS MAKE MAP MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PACKAGE PRINT PRINTF PRINTLN PUNTO PUNTO_COMA RANGE RESTA RETURN SELECT STRING STRINGTYPE STRUCT SWITCH TYPE VARgo : instruccion\n            | funcion go\n            | funcionbody : instruccion\n            | I_LLAVE instruct_expression D_LLAVE\n            | I_LLAVE varias_instrucciones D_LLAVE\n            | I_LLAVE varias_instrucciones instruct_expression D_LLAVE\n            | I_LLAVE D_LLAVEvarias_instrucciones : instruccion\n                            | instruccion varias_instruccionesinstruct_expression : RETURN valor\n                            | RETURN resultadoinstruccion : llamada_func\n                     | resultado_inc_dec\n                     | expressioninstruccion : print I_PARENTESIS valores D_PARENTESISinstruccion : declaracion_comun\n                   | decla_header ASIGNACION instruccion\n                   | decla_header array_type_spec ASIGNACION instruccion\n                   | empty_struct\n                   | empty_arrayinstruccion : ID asignacion valor\n          | ID asignacion instrucciondeclaracion_comun : decla_header type ASIGNACION valor\n                  | decla_header ASIGNACION valorempty_struct : decla_header IDempty_array : decla_header array_type_specdecla_header : VAR IDfuncion : FUNC ID cuerpo_funcuerpo_fun : parametrosMetodo bodyparametrosMetodo : I_PARENTESIS parametros D_PARENTESIS type\n                        | I_PARENTESIS parametros D_PARENTESISparametros : atributo\n                  | atributo COMA parametros\n                  | llamada_func : ID I_PARENTESIS llamada_params D_PARENTESISllamada_params : expression\n                      | expression COMA llamada_paramsinstruccion : IF condicion I_LLAVE body D_LLAVEinstruccion : ELSE I_LLAVE body D_LLAVEinstruccion : ELSEIF condicion I_LLAVE body D_LLAVEinstruccion : FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVEinstruccion : FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : array_int\n    | array_double\n    | array_string\n    | array_booleaninstruccion : array_length_int\n    | array_length_double\n    | array_length_string\n    | array_length_booleaninstruccion : array_con_valores_int\n    | array_con_valores_double\n    | array_con_valores_string\n    | array_con_valores_booleaninstruccion : array_length_con_valores_int\n    | array_length_con_valores_double\n    | array_length_con_valores_string\n    | array_length_con_valores_booleanarray_int : I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVEarray_double : I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVEarray_string : I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVEarray_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVEarray_length_int : array_length INTEGER I_LLAVE D_LLAVEarray_length_double : array_length floating_type I_LLAVE D_LLAVEarray_length_string : array_length STRINGTYPE I_LLAVE D_LLAVEarray_length_boolean : array_length BOOLEAN I_LLAVE D_LLAVEarray_con_valores_int : I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVEarray_con_valores_double : I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVEarray_con_valores_string : I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVEarray_con_valores_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVEarray_length_con_valores_int : array_length INTEGER I_LLAVE valores_int D_LLAVEarray_length_con_valores_double : array_length floating_type I_LLAVE valores_double D_LLAVEarray_length_con_valores_string : array_length STRINGTYPE I_LLAVE valores_string D_LLAVEarray_length_con_valores_boolean : array_length BOOLEAN I_LLAVE valores_boolean D_LLAVEinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVEinstruccion : MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESISinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVEinstruccion : TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVEatributos_struct : atributo\n                | atributo atributos_structatributo : ID typeinstruccion : init_structinit_struct : empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE\n                    | ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE\n                    | empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE\n                    | ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVEatributos_nombrados : declara_atributo\n                    | declara_atributo COMA atributos_nombradosvalor_struct : ID PUNTO IDdeclara_atributo : ID DOS_PUNTOS expressionclave_valor : valor DOS_PUNTOS valorclaves_valores : clave_valor\n          | clave_valor COMA claves_valorescondicion : valor\n                | I_PARENTESIS valor D_PARENTESISiteracion_for : IDexpression : valor\n                  | resultado\n                  | llamada_func\n                  | I_PARENTESIS resultado D_PARENTESISresultado : expression operacion_binaria expressionresultado_inc_dec : ID operador_matematicovalores : valor\n          | valor COMA valoresvalores_int : valor_int\n          | valor_int COMA valores_intvalores_double : valor_double\n          | valor_double COMA valores_doublevalores_string : valor_string\n          | valor_string COMA valores_stringvalores_boolean : valor_boolean\n          | valor_boolean COMA valores_booleanvalor : valor operacion_binaria valorprint : PRINTLN\n          | PRINTF\n          | PRINTarray_type_spec : array_length INTEGER\n          | array_length STRINGTYPE\n          | array_length BOOLEAN\n          | array_length floating_typearray_length : I_CORCHETE INT D_CORCHETEtype : BOOL\n          | STRINGTYPE\n          | INTEGER\n          | floating_type floating_type : FLOAT32\n          | FLOAT64operador_matematico : INCREMENTO\n          | DECREMENTOasignacion : ASIGNACION\n          | ASIGNACION_ADICION\n          | ASIGNACION_RESTA\n          | ASIGNACION_MULTI\n          | DECLARACION_ASIGNACION\n          | ASIGNACION_DIVISION\n          | ASIGNACION_MODULOoperacion_binaria : ADICION\n          | RESTA\n          | MULTIPLICACION\n          | DIVISION\n          | MODULOoperacion_binaria : MENOR_IGUAL\n          | IGUAL\n          | DIFERENTE\n          | MAYOR\n          | MAYOR_IGUAL\n          | MENORvalor : valor_int\n          | valor_double\n          | valor_string\n          | valor_boolean\n          | valor_variable\n          | valor_structvalor_int : INTvalor_double : DOUBLEvalor_string : STRINGvalor_boolean : BOOLEANvalor_variable : ID'
    
_lr_action_items = {'ID':([0,3,4,5,6,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,38,39,40,41,45,46,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,78,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,116,121,124,125,126,127,128,129,130,131,132,134,135,136,140,141,142,144,146,147,148,149,150,159,160,161,166,167,168,169,170,171,172,173,177,179,180,181,183,192,193,197,200,203,206,217,218,219,225,228,230,232,234,236,240,241,242,243,244,246,248,250,252,253,254,255,256,257,258,259,260,262,263,264,265,266,268,270,282,287,288,289,290,291,292,293,298,299,],[13,13,-13,-14,-15,74,-17,78,-20,-21,-160,-99,105,105,108,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,114,-84,115,-100,116,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,74,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,105,-101,-160,13,-27,-26,-126,-125,-127,-124,-128,-129,133,134,74,-104,139,140,-132,-133,-134,-135,-137,-138,-130,-131,105,105,-160,13,-28,-103,-102,-18,-25,13,105,-119,-120,-121,-122,-160,-22,-23,-91,-115,13,13,-4,13,139,184,105,-29,13,196,-16,105,-19,-24,210,-36,74,210,-8,223,13,-40,226,196,-30,-65,-66,-67,-68,-39,-5,-6,-41,261,-61,-62,-63,-64,196,-32,196,-83,-73,-74,-75,-76,74,-85,-87,278,-86,-88,-7,13,280,105,-69,-70,-71,-72,-80,-31,-77,-42,13,13,-79,105,105,-78,-44,-43,]),'IF':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[15,15,-13,-14,-15,-17,-20,-21,-160,-99,15,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,15,-27,-26,-126,-125,-127,-124,-128,-129,15,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,15,-103,-102,-18,-25,15,-119,-120,-121,-122,-160,-22,-23,-91,-115,15,15,-4,15,-136,-29,15,-16,-19,-24,-36,-8,15,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,15,-69,-70,-71,-72,-80,-31,-77,-42,15,15,-79,-78,-44,-43,]),'ELSE':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[16,16,-13,-14,-15,-17,-20,-21,-160,-99,16,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,16,-27,-26,-126,-125,-127,-124,-128,-129,16,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,16,-103,-102,-18,-25,16,-119,-120,-121,-122,-160,-22,-23,-91,-115,16,16,-4,16,-136,-29,16,-16,-19,-24,-36,-8,16,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,16,-69,-70,-71,-72,-80,-31,-77,-42,16,16,-79,-78,-44,-43,]),'ELSEIF':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[17,17,-13,-14,-15,-17,-20,-21,-160,-99,17,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,17,-27,-26,-126,-125,-127,-124,-128,-129,17,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,17,-103,-102,-18,-25,17,-119,-120,-121,-122,-160,-22,-23,-91,-115,17,17,-4,17,-136,-29,17,-16,-19,-24,-36,-8,17,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,17,-69,-70,-71,-72,-80,-31,-77,-42,17,17,-79,-78,-44,-43,]),'FOR':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[18,18,-13,-14,-15,-17,-20,-21,-160,-99,18,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,18,-27,-26,-126,-125,-127,-124,-128,-129,18,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,18,-103,-102,-18,-25,18,-119,-120,-121,-122,-160,-22,-23,-91,-115,18,18,-4,18,-136,-29,18,-16,-19,-24,-36,-8,18,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,18,-69,-70,-71,-72,-80,-31,-77,-42,18,18,-79,-78,-44,-43,]),'MAP':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,113,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[35,35,-13,-14,-15,-17,-20,-21,-160,-99,35,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,35,-27,-26,-126,-125,-127,-124,-128,-129,35,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,35,157,-103,-102,-18,-25,35,-119,-120,-121,-122,-160,-22,-23,-91,-115,35,35,-4,35,-136,-29,35,-16,-19,-24,-36,-8,35,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,35,-69,-70,-71,-72,-80,-31,-77,-42,35,35,-79,-78,-44,-43,]),'MAKE':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[37,37,-13,-14,-15,-17,-20,-21,-160,-99,37,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,37,-27,-26,-126,-125,-127,-124,-128,-129,37,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,37,-103,-102,-18,-25,37,-119,-120,-121,-122,-160,-22,-23,-91,-115,37,37,-4,37,-136,-29,37,-16,-19,-24,-36,-8,37,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,37,-69,-70,-71,-72,-80,-31,-77,-42,37,37,-79,-78,-44,-43,]),'TYPE':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[38,38,-13,-14,-15,-17,-20,-21,-160,-99,38,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,38,-27,-26,-126,-125,-127,-124,-128,-129,38,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,38,-103,-102,-18,-25,38,-119,-120,-121,-122,-160,-22,-23,-91,-115,38,38,-4,38,-136,-29,38,-16,-19,-24,-36,-8,38,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,38,-69,-70,-71,-72,-80,-31,-77,-42,38,38,-79,-78,-44,-43,]),'FUNC':([0,3,4,5,6,9,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,76,78,85,86,90,99,100,105,121,124,125,126,129,130,131,132,134,135,136,140,141,146,159,166,168,169,171,177,181,193,197,200,203,206,217,218,219,225,230,232,234,236,244,246,248,250,253,254,256,257,258,263,264,265,266,268,282,287,290,293,298,299,],[40,40,-13,-14,-15,-17,-20,-21,-160,-99,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,-27,-26,-128,-129,-104,-130,-131,-160,-103,-102,-18,-25,-119,-120,-121,-122,-160,-22,-23,-91,-115,-4,-29,-16,-19,-24,-36,-8,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-73,-74,-75,-76,-85,-87,-86,-88,-7,-69,-70,-71,-72,-80,-77,-42,-79,-78,-44,-43,]),'I_PARENTESIS':([0,3,4,5,6,7,8,9,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,39,41,42,43,44,46,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,76,78,80,81,82,83,85,86,88,89,90,91,93,94,95,96,97,98,99,100,105,106,108,115,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,172,177,179,180,181,193,197,200,203,206,217,218,219,223,225,230,232,234,236,241,244,246,248,250,252,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[8,8,-13,-14,-15,70,8,-17,-20,-21,89,-99,104,104,8,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,113,-84,-100,-116,-117,-118,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,8,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-101,89,8,-27,-26,-126,-125,-127,-124,-128,-129,8,8,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,8,89,161,-103,-102,-18,-25,8,-119,-120,-121,-122,89,-22,-23,-91,-115,8,8,-4,8,-136,-29,8,-16,-19,-24,-36,8,-8,8,8,-40,-30,-65,-66,-67,-68,-39,-5,-6,89,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,8,-85,-87,-86,-88,-7,8,-69,-70,-71,-72,-80,-31,-77,-42,8,8,-79,-78,-44,-43,]),'PRINTLN':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[42,42,-13,-14,-15,-17,-20,-21,-160,-99,42,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,42,-27,-26,-126,-125,-127,-124,-128,-129,42,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,42,-103,-102,-18,-25,42,-119,-120,-121,-122,-160,-22,-23,-91,-115,42,42,-4,42,-136,-29,42,-16,-19,-24,-36,-8,42,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,42,-69,-70,-71,-72,-80,-31,-77,-42,42,42,-79,-78,-44,-43,]),'PRINTF':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[43,43,-13,-14,-15,-17,-20,-21,-160,-99,43,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,43,-27,-26,-126,-125,-127,-124,-128,-129,43,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,43,-103,-102,-18,-25,43,-119,-120,-121,-122,-160,-22,-23,-91,-115,43,43,-4,43,-136,-29,43,-16,-19,-24,-36,-8,43,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,43,-69,-70,-71,-72,-80,-31,-77,-42,43,43,-79,-78,-44,-43,]),'PRINT':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[44,44,-13,-14,-15,-17,-20,-21,-160,-99,44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,44,-27,-26,-126,-125,-127,-124,-128,-129,44,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,44,-103,-102,-18,-25,44,-119,-120,-121,-122,-160,-22,-23,-91,-115,44,44,-4,44,-136,-29,44,-16,-19,-24,-36,-8,44,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,44,-69,-70,-71,-72,-80,-31,-77,-42,44,44,-79,-78,-44,-43,]),'VAR':([0,3,4,5,6,9,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[45,45,-13,-14,-15,-17,-20,-21,-160,-99,45,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,45,-27,-26,-126,-125,-127,-124,-128,-129,45,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,45,-103,-102,-18,-25,45,-119,-120,-121,-122,-160,-22,-23,-91,-115,45,45,-4,45,-136,-29,45,-16,-19,-24,-36,-8,45,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,45,-69,-70,-71,-72,-80,-31,-77,-42,45,45,-79,-78,-44,-43,]),'I_CORCHETE':([0,3,4,5,6,9,10,11,12,13,14,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,39,41,46,48,49,50,51,52,53,54,55,56,73,74,75,76,78,80,81,82,83,85,86,88,90,91,93,94,95,96,97,98,99,100,105,106,116,121,124,125,126,127,129,130,131,132,134,135,136,140,141,142,144,146,147,148,157,159,160,166,168,169,171,177,180,181,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,253,254,256,257,258,259,263,264,265,266,268,270,282,287,288,289,290,293,298,299,],[36,36,-13,-14,-15,-17,84,-20,-21,-160,-99,36,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,110,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,36,-27,-26,-126,-125,-127,-124,-128,-129,36,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,-160,36,-28,-103,-102,-18,-25,36,-119,-120,-121,-122,-160,-22,-23,-91,-115,36,36,-4,36,-136,191,-29,36,-16,-19,-24,-36,-8,36,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,-85,-87,-86,-88,-7,36,-69,-70,-71,-72,-80,-31,-77,-42,36,36,-79,-78,-44,-43,]),'INT':([0,3,4,5,6,8,9,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,39,41,46,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,78,80,81,82,83,84,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,104,105,106,121,124,125,126,127,128,129,130,131,132,134,135,136,140,141,142,144,146,147,148,150,159,160,162,166,167,168,169,170,171,172,173,177,179,180,181,187,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,245,246,248,250,252,253,254,256,257,258,259,262,263,264,265,266,268,270,282,287,288,289,290,291,292,293,298,299,],[54,54,-13,-14,-15,54,-17,-20,-21,-160,-99,54,54,54,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,112,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,54,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,54,-101,-160,54,-27,-26,-126,-125,-127,-124,112,-128,-129,54,54,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,54,54,-160,54,-103,-102,-18,-25,54,54,-119,-120,-121,-122,-160,-22,-23,-91,-115,54,54,-4,54,-136,54,-29,54,54,-16,54,-19,-24,54,-36,54,54,-8,54,54,-40,54,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,54,-74,-75,-76,54,-85,-87,-86,-88,-7,54,54,-69,-70,-71,-72,-80,-31,-77,-42,54,54,-79,54,54,-78,-44,-43,]),'DOUBLE':([0,3,4,5,6,8,9,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,78,80,81,82,83,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,104,105,106,121,124,125,126,127,128,129,130,131,132,134,135,136,140,141,142,144,146,147,148,150,159,160,163,166,167,168,169,170,171,172,173,177,179,180,181,188,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,247,248,250,252,253,254,256,257,258,259,262,263,264,265,266,268,270,282,287,288,289,290,291,292,293,298,299,],[55,55,-13,-14,-15,55,-17,-20,-21,-160,-99,55,55,55,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,55,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,55,-101,-160,55,-27,-26,-126,-125,-127,-124,-128,-129,55,55,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,55,55,-160,55,-103,-102,-18,-25,55,55,-119,-120,-121,-122,-160,-22,-23,-91,-115,55,55,-4,55,-136,55,-29,55,55,-16,55,-19,-24,55,-36,55,55,-8,55,55,-40,55,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,55,-75,-76,55,-85,-87,-86,-88,-7,55,55,-69,-70,-71,-72,-80,-31,-77,-42,55,55,-79,55,55,-78,-44,-43,]),'STRING':([0,3,4,5,6,8,9,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,78,80,81,82,83,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,104,105,106,121,124,125,126,127,128,129,130,131,132,134,135,136,140,141,142,144,146,147,148,150,159,160,164,166,167,168,169,170,171,172,173,177,179,180,181,189,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,249,250,252,253,254,256,257,258,259,262,263,264,265,266,268,270,282,287,288,289,290,291,292,293,298,299,],[56,56,-13,-14,-15,56,-17,-20,-21,-160,-99,56,56,56,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,56,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,56,-101,-160,56,-27,-26,-126,-125,-127,-124,-128,-129,56,56,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,56,56,-160,56,-103,-102,-18,-25,56,56,-119,-120,-121,-122,-160,-22,-23,-91,-115,56,56,-4,56,-136,56,-29,56,56,-16,56,-19,-24,56,-36,56,56,-8,56,56,-40,56,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,56,-76,56,-85,-87,-86,-88,-7,56,56,-69,-70,-71,-72,-80,-31,-77,-42,56,56,-79,56,56,-78,-44,-43,]),'BOOLEAN':([0,3,4,5,6,8,9,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,47,48,49,50,51,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,76,78,79,80,81,82,83,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,104,105,106,111,121,124,125,126,127,128,129,130,131,132,134,135,136,140,141,142,144,146,147,148,150,156,159,160,165,166,167,168,169,170,171,172,173,177,179,180,181,190,193,197,200,203,206,217,218,219,225,230,232,234,236,241,244,246,248,250,251,252,253,254,256,257,258,259,262,263,264,265,266,268,270,282,287,288,289,290,291,292,293,298,299,],[46,46,-13,-14,-15,46,-17,-20,-21,-160,-99,46,46,46,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,120,-150,-151,-152,-153,-154,-155,-156,-157,-158,46,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,46,-101,-160,46,-27,-26,131,-126,-125,-127,-124,-128,-129,46,46,-104,-136,-132,-133,-134,-135,-137,-138,-130,-131,46,46,-160,46,155,-103,-102,-18,-25,46,46,-119,-120,-121,-122,-160,-22,-23,-91,-115,46,46,-4,46,-136,46,-123,-29,46,46,-16,46,-19,-24,46,-36,46,46,-8,46,46,-40,46,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-32,-73,-74,-75,-76,46,46,-85,-87,-86,-88,-7,46,46,-69,-70,-71,-72,-80,-31,-77,-42,46,46,-79,46,46,-78,-44,-43,]),'$end':([1,2,3,4,5,6,9,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,57,73,74,76,78,85,86,90,99,100,105,121,124,125,126,129,130,131,132,134,135,136,140,141,146,159,166,168,169,171,177,181,193,197,200,203,206,217,218,219,225,230,232,234,236,244,246,248,250,253,254,256,257,258,263,264,265,266,268,282,287,290,293,298,299,],[0,-1,-3,-13,-14,-15,-17,-20,-21,-160,-99,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-2,-101,-160,-27,-26,-128,-129,-104,-130,-131,-160,-103,-102,-18,-25,-119,-120,-121,-122,-160,-22,-23,-91,-115,-4,-29,-16,-19,-24,-36,-8,-40,-30,-65,-66,-67,-68,-39,-5,-6,-41,-61,-62,-63,-64,-73,-74,-75,-76,-85,-87,-86,-88,-7,-69,-70,-71,-72,-80,-77,-42,-79,-78,-44,-43,]),'PUNTO_COMA':([4,5,6,9,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,76,78,85,86,90,99,100,105,108,109,121,124,125,126,129,130,131,132,134,135,136,140,141,166,168,169,171,181,185,197,200,203,206,217,225,230,232,234,236,244,246,248,250,253,254,256,257,263,264,265,266,268,282,287,290,293,298,299,],[-13,-14,-15,-17,-20,-21,-160,-99,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,-27,-26,-128,-129,-104,-130,-131,-160,-160,150,-103,-102,-18,-25,-119,-120,-121,-122,-160,-22,-23,-91,-115,-16,-19,-24,-36,-40,228,-65,-66,-67,-68,-39,-41,-61,-62,-63,-64,-73,-74,-75,-76,-85,-87,-86,-88,-69,-70,-71,-72,-80,-77,-42,-79,-78,-44,-43,]),'D_LLAVE':([4,5,6,9,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,76,78,80,81,82,83,85,86,90,99,100,105,121,123,124,125,126,129,130,131,132,134,135,136,140,141,144,145,146,162,163,164,165,166,168,169,171,174,176,177,178,180,181,182,187,188,189,190,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,222,223,224,225,230,231,232,233,234,235,236,237,239,240,243,244,246,248,250,253,254,256,257,258,262,263,264,265,266,268,269,272,273,274,275,276,277,279,282,283,284,287,290,293,294,295,296,297,298,299,],[-13,-14,-15,-17,-20,-21,-160,-99,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,-27,-26,-126,-125,-127,-124,-128,-129,-104,-130,-131,-160,-103,-105,-102,-18,-25,-119,-120,-121,-122,-160,-22,-23,-91,-115,177,181,-4,197,200,203,206,-16,-19,-24,-36,217,218,-8,219,-9,-40,225,230,232,234,236,-65,244,-107,-66,246,-109,-67,248,-111,-68,250,-113,-106,-160,253,254,-89,256,257,-39,-5,-6,258,-11,-12,-160,-10,-41,-61,263,-62,264,-63,265,-64,266,268,-81,-83,-73,-74,-75,-76,-85,-87,-86,-88,-7,282,-69,-70,-71,-72,-80,-82,-108,-110,-112,-114,-92,-90,287,-77,290,-94,-42,-79,-78,298,299,-95,-93,-44,-43,]),'RETURN':([4,5,6,9,11,12,13,14,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,46,48,49,50,51,52,53,54,55,56,73,74,76,78,85,86,90,99,100,105,121,124,125,126,129,130,131,132,134,135,136,140,141,144,166,168,169,171,178,180,181,197,200,203,206,217,224,225,230,232,234,236,244,246,248,250,253,254,256,257,263,264,265,266,268,282,287,290,293,298,299,],[-13,-14,-15,-17,-20,-21,-160,-99,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-84,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,-27,-26,-128,-129,-104,-130,-131,-160,-103,-102,-18,-25,-119,-120,-121,-122,-160,-22,-23,-91,-115,179,-16,-19,-24,-36,179,-9,-40,-65,-66,-67,-68,-39,-10,-41,-61,-62,-63,-64,-73,-74,-75,-76,-85,-87,-86,-88,-69,-70,-71,-72,-80,-77,-42,-79,-78,-44,-43,]),'ADICION':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,59,-160,59,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,59,-101,-160,59,-160,-160,59,59,-102,59,-160,59,59,-91,59,59,59,-36,59,-160,59,-100,-160,59,59,59,]),'RESTA':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,60,-160,60,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,60,-101,-160,60,-160,-160,60,60,-102,60,-160,60,60,-91,60,60,60,-36,60,-160,60,-100,-160,60,60,60,]),'MULTIPLICACION':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,61,-160,61,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,61,-101,-160,61,-160,-160,61,61,-102,61,-160,61,61,-91,61,61,61,-36,61,-160,61,-100,-160,61,61,61,]),'DIVISION':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,62,-160,62,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,62,-101,-160,62,-160,-160,62,62,-102,62,-160,62,62,-91,62,62,62,-36,62,-160,62,-100,-160,62,62,62,]),'MODULO':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,63,-160,63,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,63,-101,-160,63,-160,-160,63,63,-102,63,-160,63,63,-91,63,63,63,-36,63,-160,63,-100,-160,63,63,63,]),'MENOR_IGUAL':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,64,-160,64,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,64,-101,-160,64,-160,-160,64,64,-102,64,-160,64,64,-91,64,64,64,-36,64,-160,64,-100,-160,64,64,64,]),'IGUAL':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,65,-160,65,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,65,-101,-160,65,-160,-160,65,65,-102,65,-160,65,65,-91,65,65,65,-36,65,-160,65,-100,-160,65,65,65,]),'DIFERENTE':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,66,-160,66,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,66,-101,-160,66,-160,-160,66,66,-102,66,-160,66,66,-91,66,66,66,-36,66,-160,66,-100,-160,66,66,66,]),'MAYOR':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,67,-160,67,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,67,-101,-160,67,-160,-160,67,67,-102,67,-160,67,67,-91,67,67,67,-36,67,-160,67,-100,-160,67,67,67,]),'MAYOR_IGUAL':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,68,-160,68,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,68,-101,-160,68,-160,-160,68,68,-102,68,-160,68,68,-91,68,68,68,-36,68,-160,68,-100,-160,68,68,68,]),'MENOR':([4,6,13,14,41,46,48,49,50,51,52,53,54,55,56,71,72,73,74,103,105,108,121,123,124,126,134,135,138,140,141,143,169,171,185,210,221,222,223,276,285,297,],[-101,69,-160,69,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-100,69,-101,-160,69,-160,-160,69,69,-102,69,-160,69,69,-91,69,69,69,-36,69,-160,69,-100,-160,69,69,69,]),'ASIGNACION':([10,11,13,76,77,78,80,81,82,83,85,86,108,116,129,130,131,132,134,],[75,87,93,127,128,-26,-126,-125,-127,-124,-128,-129,93,-28,-119,-120,-121,-122,93,]),'BOOL':([10,110,116,186,191,196,241,267,],[83,83,-28,83,83,83,83,83,]),'STRINGTYPE':([10,47,79,110,111,116,156,186,191,196,241,267,],[81,119,130,81,154,-28,-123,81,81,81,81,81,]),'INTEGER':([10,47,79,110,111,116,156,186,191,196,241,267,],[80,117,129,80,152,-28,-123,80,80,80,80,80,]),'FLOAT32':([10,47,79,110,111,116,156,186,191,196,241,267,],[85,85,85,85,85,-28,-123,85,85,85,85,85,]),'FLOAT64':([10,47,79,110,111,116,156,186,191,196,241,267,],[86,86,86,86,86,-28,-123,86,86,86,86,86,]),'DECLARACION_ASIGNACION':([13,108,134,184,],[91,148,91,227,]),'PUNTO':([13,74,105,108,134,210,223,],[92,92,92,92,92,92,92,]),'ASIGNACION_ADICION':([13,108,134,],[94,94,94,]),'ASIGNACION_RESTA':([13,108,134,],[95,95,95,]),'ASIGNACION_MULTI':([13,108,134,],[96,96,96,]),'ASIGNACION_DIVISION':([13,108,134,],[97,97,97,]),'ASIGNACION_MODULO':([13,108,134,],[98,98,98,]),'INCREMENTO':([13,108,134,261,],[99,99,99,99,]),'DECREMENTO':([13,108,134,261,],[100,100,100,100,]),'D_PARENTESIS':([14,41,46,48,49,50,51,52,53,54,55,56,71,73,74,80,81,82,83,85,86,105,121,122,123,124,137,138,140,141,143,161,171,194,195,209,214,242,243,271,286,],[-99,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,124,-101,-160,-126,-125,-127,-124,-128,-129,-160,-103,166,-105,-102,171,-37,-91,-115,175,-35,-36,241,-33,-106,-38,-35,-83,-34,293,]),'COMA':([14,41,46,48,49,50,51,52,53,54,55,56,73,74,80,81,82,83,85,86,105,108,121,123,124,138,140,141,171,195,199,202,205,208,210,213,243,276,284,297,],[-99,-100,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-101,-160,-126,-125,-127,-124,-128,-129,-160,149,-103,167,-102,172,-91,-115,-36,242,245,247,249,251,-160,255,-83,-92,291,-93,]),'I_LLAVE':([16,46,48,49,50,51,52,53,54,55,56,80,81,82,83,85,86,99,100,102,103,105,106,107,117,118,119,120,133,139,140,141,142,147,152,153,154,155,158,160,175,226,229,241,259,270,280,281,288,289,],[106,-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-126,-125,-127,-124,-128,-129,-130,-131,142,-96,-160,144,147,162,163,164,165,170,173,-91,-115,144,144,187,188,189,190,192,144,-97,259,262,-32,144,-31,288,289,144,144,]),'D_CORCHETE':([36,80,81,82,83,85,86,112,151,238,],[111,-126,-125,-127,-124,-128,-129,156,186,267,]),'DOS_PUNTOS':([46,48,49,50,51,52,53,54,55,56,105,140,141,210,278,285,],[-159,-150,-151,-152,-153,-154,-155,-156,-157,-158,-160,-91,-115,252,252,292,]),'STRUCT':([114,],[158,]),'RANGE':([148,227,],[183,260,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'go':([0,3,],[1,57,]),'instruccion':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[2,2,109,125,136,146,168,146,180,146,146,180,146,146,146,]),'funcion':([0,3,],[3,3,]),'llamada_func':([0,3,8,18,58,75,88,89,106,127,142,144,147,160,172,179,180,252,259,288,289,],[4,4,73,4,73,4,4,73,4,4,4,4,4,4,73,73,4,73,4,4,4,]),'resultado_inc_dec':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expression':([0,3,8,18,58,75,88,89,106,127,142,144,147,160,172,179,180,252,259,288,289,],[6,6,72,6,121,6,6,138,6,6,6,6,6,6,138,72,6,276,6,6,6,]),'print':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'declaracion_comun':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'decla_header':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'empty_struct':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'empty_array':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'valor':([0,3,8,15,17,18,58,70,75,88,89,101,104,106,127,128,142,144,147,150,160,167,170,172,173,179,180,252,259,262,288,289,291,292,],[14,14,14,103,103,14,14,123,126,135,14,141,143,14,14,169,14,14,14,185,14,123,123,14,123,221,14,14,14,285,14,14,285,297,]),'array_int':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'array_double':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'array_string':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'array_boolean':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'array_length_int':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'array_length_double':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'array_length_string':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'array_length_boolean':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'array_con_valores_int':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'array_con_valores_double':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array_con_valores_string':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'array_con_valores_boolean':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'array_length_con_valores_int':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'array_length_con_valores_double':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'array_length_con_valores_string':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'array_length_con_valores_boolean':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'init_struct':([0,3,18,75,88,106,127,142,144,147,160,180,259,288,289,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'resultado':([0,3,8,18,58,75,88,89,106,127,142,144,147,160,172,179,180,252,259,288,289,],[41,41,71,41,41,41,41,41,41,41,41,41,41,41,41,222,41,41,41,41,41,]),'array_length':([0,3,10,18,75,88,106,127,142,144,147,160,180,259,288,289,],[47,47,79,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'valor_int':([0,3,8,15,17,18,58,70,75,88,89,101,104,106,127,128,142,144,147,150,160,162,167,170,172,173,179,180,187,245,252,259,262,288,289,291,292,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,199,48,48,48,48,48,48,199,199,48,48,48,48,48,48,48,]),'valor_double':([0,3,8,15,17,18,58,70,75,88,89,101,104,106,127,128,142,144,147,150,160,163,167,170,172,173,179,180,188,247,252,259,262,288,289,291,292,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,202,49,49,49,49,49,49,202,202,49,49,49,49,49,49,49,]),'valor_string':([0,3,8,15,17,18,58,70,75,88,89,101,104,106,127,128,142,144,147,150,160,164,167,170,172,173,179,180,189,249,252,259,262,288,289,291,292,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,205,50,50,50,50,50,50,205,205,50,50,50,50,50,50,50,]),'valor_boolean':([0,3,8,15,17,18,58,70,75,88,89,101,104,106,127,128,142,144,147,150,160,165,167,170,172,173,179,180,190,251,252,259,262,288,289,291,292,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,208,51,51,51,51,51,51,208,208,51,51,51,51,51,51,51,]),'valor_variable':([0,3,8,15,17,18,58,70,75,88,89,101,104,106,127,128,142,144,147,150,160,167,170,172,173,179,180,252,259,262,288,289,291,292,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'valor_struct':([0,3,8,15,17,18,58,70,75,88,89,101,104,106,127,128,142,144,147,150,160,167,170,172,173,179,180,252,259,262,288,289,291,292,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'operacion_binaria':([6,14,72,103,121,123,126,135,138,141,143,169,185,221,276,285,297,],[58,101,58,101,58,101,101,101,58,101,101,101,101,101,58,101,101,]),'array_type_spec':([10,],[76,]),'type':([10,110,186,191,196,241,267,],[77,151,229,238,243,270,286,]),'floating_type':([10,47,79,110,111,186,191,196,241,267,],[82,118,132,82,153,82,82,82,82,82,]),'asignacion':([13,108,134,],[88,88,88,]),'operador_matematico':([13,108,134,261,],[90,90,90,281,]),'condicion':([15,17,],[102,107,]),'valores':([70,167,170,173,],[122,209,211,215,]),'llamada_params':([89,172,],[137,214,]),'body':([106,142,147,160,259,288,289,],[145,174,182,193,279,294,295,]),'cuerpo_fun':([115,],[159,]),'parametrosMetodo':([115,],[160,]),'instruct_expression':([144,178,],[176,220,]),'varias_instrucciones':([144,180,],[178,224,]),'parametros':([161,242,],[194,271,]),'atributo':([161,192,240,242,],[195,240,240,195,]),'valores_int':([162,187,245,],[198,231,272,]),'valores_double':([163,188,247,],[201,233,273,]),'valores_string':([164,189,249,],[204,235,274,]),'valores_boolean':([165,190,251,],[207,237,275,]),'atributos_nombrados':([170,173,255,],[212,216,277,]),'declara_atributo':([170,173,255,],[213,213,213,]),'atributos_struct':([192,240,],[239,269,]),'claves_valores':([262,291,],[283,296,]),'clave_valor':([262,291,],[284,284,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> go","S'",1,None,None,None),
  ('go -> instruccion','go',1,'p_go','new_syntax.py',18),
  ('go -> funcion go','go',2,'p_go','new_syntax.py',19),
  ('go -> funcion','go',1,'p_go','new_syntax.py',20),
  ('body -> instruccion','body',1,'p_body','new_syntax.py',23),
  ('body -> I_LLAVE instruct_expression D_LLAVE','body',3,'p_body','new_syntax.py',24),
  ('body -> I_LLAVE varias_instrucciones D_LLAVE','body',3,'p_body','new_syntax.py',25),
  ('body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE','body',4,'p_body','new_syntax.py',26),
  ('body -> I_LLAVE D_LLAVE','body',2,'p_body','new_syntax.py',27),
  ('varias_instrucciones -> instruccion','varias_instrucciones',1,'p_varias_instrucciones','new_syntax.py',30),
  ('varias_instrucciones -> instruccion varias_instrucciones','varias_instrucciones',2,'p_varias_instrucciones','new_syntax.py',31),
  ('instruct_expression -> RETURN valor','instruct_expression',2,'p_expression_result','new_syntax.py',34),
  ('instruct_expression -> RETURN resultado','instruct_expression',2,'p_expression_result','new_syntax.py',35),
  ('instruccion -> llamada_func','instruccion',1,'p_instrucciones','new_syntax.py',39),
  ('instruccion -> resultado_inc_dec','instruccion',1,'p_instrucciones','new_syntax.py',40),
  ('instruccion -> expression','instruccion',1,'p_instrucciones','new_syntax.py',41),
  ('instruccion -> print I_PARENTESIS valores D_PARENTESIS','instruccion',4,'p_impresion','new_syntax.py',44),
  ('instruccion -> declaracion_comun','instruccion',1,'p_declaracion','new_syntax.py',47),
  ('instruccion -> decla_header ASIGNACION instruccion','instruccion',3,'p_declaracion','new_syntax.py',48),
  ('instruccion -> decla_header array_type_spec ASIGNACION instruccion','instruccion',4,'p_declaracion','new_syntax.py',49),
  ('instruccion -> empty_struct','instruccion',1,'p_declaracion','new_syntax.py',50),
  ('instruccion -> empty_array','instruccion',1,'p_declaracion','new_syntax.py',51),
  ('instruccion -> ID asignacion valor','instruccion',3,'p_asignacion','new_syntax.py',54),
  ('instruccion -> ID asignacion instruccion','instruccion',3,'p_asignacion','new_syntax.py',55),
  ('declaracion_comun -> decla_header type ASIGNACION valor','declaracion_comun',4,'p_declaraciones_comunes','new_syntax.py',58),
  ('declaracion_comun -> decla_header ASIGNACION valor','declaracion_comun',3,'p_declaraciones_comunes','new_syntax.py',59),
  ('empty_struct -> decla_header ID','empty_struct',2,'p_declara_empty_struct_var','new_syntax.py',62),
  ('empty_array -> decla_header array_type_spec','empty_array',2,'p_declara_empty_array','new_syntax.py',65),
  ('decla_header -> VAR ID','decla_header',2,'p_declara_header','new_syntax.py',68),
  ('funcion -> FUNC ID cuerpo_fun','funcion',3,'p_funcion','new_syntax.py',71),
  ('cuerpo_fun -> parametrosMetodo body','cuerpo_fun',2,'p_body_fm','new_syntax.py',74),
  ('parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type','parametrosMetodo',4,'p_parametros_metodo','new_syntax.py',77),
  ('parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS','parametrosMetodo',3,'p_parametros_metodo','new_syntax.py',78),
  ('parametros -> atributo','parametros',1,'p_parametros','new_syntax.py',81),
  ('parametros -> atributo COMA parametros','parametros',3,'p_parametros','new_syntax.py',82),
  ('parametros -> <empty>','parametros',0,'p_parametros','new_syntax.py',83),
  ('llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS','llamada_func',4,'p_llamada_func','new_syntax.py',86),
  ('llamada_params -> expression','llamada_params',1,'p_llamada_params','new_syntax.py',89),
  ('llamada_params -> expression COMA llamada_params','llamada_params',3,'p_llamada_params','new_syntax.py',90),
  ('instruccion -> IF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_condicion','new_syntax.py',95),
  ('instruccion -> ELSE I_LLAVE body D_LLAVE','instruccion',4,'p_else_condicion','new_syntax.py',98),
  ('instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_else_condicion','new_syntax.py',101),
  ('instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',8,'p_for_each','new_syntax.py',104),
  ('instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE','instruccion',10,'p_for_condicion','new_syntax.py',107),
  ('instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',10,'p_for_map','new_syntax.py',110),
  ('instruccion -> array_int','instruccion',1,'p_array','new_syntax.py',115),
  ('instruccion -> array_double','instruccion',1,'p_array','new_syntax.py',116),
  ('instruccion -> array_string','instruccion',1,'p_array','new_syntax.py',117),
  ('instruccion -> array_boolean','instruccion',1,'p_array','new_syntax.py',118),
  ('instruccion -> array_length_int','instruccion',1,'p_array_length','new_syntax.py',121),
  ('instruccion -> array_length_double','instruccion',1,'p_array_length','new_syntax.py',122),
  ('instruccion -> array_length_string','instruccion',1,'p_array_length','new_syntax.py',123),
  ('instruccion -> array_length_boolean','instruccion',1,'p_array_length','new_syntax.py',124),
  ('instruccion -> array_con_valores_int','instruccion',1,'p_array_con_valores','new_syntax.py',127),
  ('instruccion -> array_con_valores_double','instruccion',1,'p_array_con_valores','new_syntax.py',128),
  ('instruccion -> array_con_valores_string','instruccion',1,'p_array_con_valores','new_syntax.py',129),
  ('instruccion -> array_con_valores_boolean','instruccion',1,'p_array_con_valores','new_syntax.py',130),
  ('instruccion -> array_length_con_valores_int','instruccion',1,'p_array_length_con_valores','new_syntax.py',133),
  ('instruccion -> array_length_con_valores_double','instruccion',1,'p_array_length_con_valores','new_syntax.py',134),
  ('instruccion -> array_length_con_valores_string','instruccion',1,'p_array_length_con_valores','new_syntax.py',135),
  ('instruccion -> array_length_con_valores_boolean','instruccion',1,'p_array_length_con_valores','new_syntax.py',136),
  ('array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE','array_int',5,'p_array_int','new_syntax.py',140),
  ('array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE','array_double',5,'p_array_double','new_syntax.py',143),
  ('array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE','array_string',5,'p_array_string','new_syntax.py',146),
  ('array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE','array_boolean',5,'p_array_boolean','new_syntax.py',149),
  ('array_length_int -> array_length INTEGER I_LLAVE D_LLAVE','array_length_int',4,'p_array_length_int','new_syntax.py',152),
  ('array_length_double -> array_length floating_type I_LLAVE D_LLAVE','array_length_double',4,'p_array_length_double','new_syntax.py',155),
  ('array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE','array_length_string',4,'p_array_length_string','new_syntax.py',158),
  ('array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE','array_length_boolean',4,'p_array_length_boolean','new_syntax.py',161),
  ('array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE','array_con_valores_int',6,'p_array_con_valores_int','new_syntax.py',164),
  ('array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE','array_con_valores_double',6,'p_array_con_valores_double','new_syntax.py',167),
  ('array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE','array_con_valores_string',6,'p_array_con_valores_string','new_syntax.py',170),
  ('array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_con_valores_boolean',6,'p_array_con_valores_boolean','new_syntax.py',173),
  ('array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE','array_length_con_valores_int',5,'p_array_length_con_valores_int','new_syntax.py',176),
  ('array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE','array_length_con_valores_double',5,'p_array_length_con_valores_double','new_syntax.py',179),
  ('array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE','array_length_con_valores_string',5,'p_array_length_con_valores_string','new_syntax.py',182),
  ('array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_length_con_valores_boolean',5,'p_array_length_con_valores_boolean','new_syntax.py',185),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE','instruccion',7,'p_map','new_syntax.py',190),
  ('instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS','instruccion',8,'p_map_make','new_syntax.py',193),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE','instruccion',8,'p_map_valores','new_syntax.py',196),
  ('instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE','instruccion',6,'p_struct','new_syntax.py',199),
  ('atributos_struct -> atributo','atributos_struct',1,'p_atributos_struct','new_syntax.py',202),
  ('atributos_struct -> atributo atributos_struct','atributos_struct',2,'p_atributos_struct','new_syntax.py',203),
  ('atributo -> ID type','atributo',2,'p_atributo','new_syntax.py',206),
  ('instruccion -> init_struct','instruccion',1,'p_declaracion_struct','new_syntax.py',209),
  ('init_struct -> empty_struct ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',6,'p_init_struct','new_syntax.py',212),
  ('init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',6,'p_init_struct','new_syntax.py',213),
  ('init_struct -> empty_struct ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE','init_struct',6,'p_init_struct','new_syntax.py',214),
  ('init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE atributos_nombrados D_LLAVE','init_struct',6,'p_init_struct','new_syntax.py',215),
  ('atributos_nombrados -> declara_atributo','atributos_nombrados',1,'p_atributos_nombrados','new_syntax.py',218),
  ('atributos_nombrados -> declara_atributo COMA atributos_nombrados','atributos_nombrados',3,'p_atributos_nombrados','new_syntax.py',219),
  ('valor_struct -> ID PUNTO ID','valor_struct',3,'p_valor_var_struct','new_syntax.py',222),
  ('declara_atributo -> ID DOS_PUNTOS expression','declara_atributo',3,'p_nombrandos_struct','new_syntax.py',225),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','new_syntax.py',228),
  ('claves_valores -> clave_valor','claves_valores',1,'p_multiple_clave_valor','new_syntax.py',231),
  ('claves_valores -> clave_valor COMA claves_valores','claves_valores',3,'p_multiple_clave_valor','new_syntax.py',232),
  ('condicion -> valor','condicion',1,'p_condicion','new_syntax.py',235),
  ('condicion -> I_PARENTESIS valor D_PARENTESIS','condicion',3,'p_condicion','new_syntax.py',236),
  ('iteracion_for -> ID','iteracion_for',1,'p_iteracion_for','new_syntax.py',239),
  ('expression -> valor','expression',1,'p_expression_term','new_syntax.py',242),
  ('expression -> resultado','expression',1,'p_expression_term','new_syntax.py',243),
  ('expression -> llamada_func','expression',1,'p_expression_term','new_syntax.py',244),
  ('expression -> I_PARENTESIS resultado D_PARENTESIS','expression',3,'p_expression_term','new_syntax.py',245),
  ('resultado -> expression operacion_binaria expression','resultado',3,'p_expression_operation','new_syntax.py',248),
  ('resultado_inc_dec -> ID operador_matematico','resultado_inc_dec',2,'p_incremento_decremento','new_syntax.py',251),
  ('valores -> valor','valores',1,'p_multiples_valores','new_syntax.py',254),
  ('valores -> valor COMA valores','valores',3,'p_multiples_valores','new_syntax.py',255),
  ('valores_int -> valor_int','valores_int',1,'p_multiples_valores_int','new_syntax.py',258),
  ('valores_int -> valor_int COMA valores_int','valores_int',3,'p_multiples_valores_int','new_syntax.py',259),
  ('valores_double -> valor_double','valores_double',1,'p_multiples_valores_double','new_syntax.py',262),
  ('valores_double -> valor_double COMA valores_double','valores_double',3,'p_multiples_valores_double','new_syntax.py',263),
  ('valores_string -> valor_string','valores_string',1,'p_multiples_valores_string','new_syntax.py',266),
  ('valores_string -> valor_string COMA valores_string','valores_string',3,'p_multiples_valores_string','new_syntax.py',267),
  ('valores_boolean -> valor_boolean','valores_boolean',1,'p_multiples_valores_boolean','new_syntax.py',270),
  ('valores_boolean -> valor_boolean COMA valores_boolean','valores_boolean',3,'p_multiples_valores_boolean','new_syntax.py',271),
  ('valor -> valor operacion_binaria valor','valor',3,'p_operacion_mat','new_syntax.py',274),
  ('print -> PRINTLN','print',1,'p_print_options','new_syntax.py',277),
  ('print -> PRINTF','print',1,'p_print_options','new_syntax.py',278),
  ('print -> PRINT','print',1,'p_print_options','new_syntax.py',279),
  ('array_type_spec -> array_length INTEGER','array_type_spec',2,'p_tipo_array','new_syntax.py',282),
  ('array_type_spec -> array_length STRINGTYPE','array_type_spec',2,'p_tipo_array','new_syntax.py',283),
  ('array_type_spec -> array_length BOOLEAN','array_type_spec',2,'p_tipo_array','new_syntax.py',284),
  ('array_type_spec -> array_length floating_type','array_type_spec',2,'p_tipo_array','new_syntax.py',285),
  ('array_length -> I_CORCHETE INT D_CORCHETE','array_length',3,'p_array_length_notype','new_syntax.py',288),
  ('type -> BOOL','type',1,'p_tipo','new_syntax.py',291),
  ('type -> STRINGTYPE','type',1,'p_tipo','new_syntax.py',292),
  ('type -> INTEGER','type',1,'p_tipo','new_syntax.py',293),
  ('type -> floating_type','type',1,'p_tipo','new_syntax.py',294),
  ('floating_type -> FLOAT32','floating_type',1,'p_tipo_flotante','new_syntax.py',297),
  ('floating_type -> FLOAT64','floating_type',1,'p_tipo_flotante','new_syntax.py',298),
  ('operador_matematico -> INCREMENTO','operador_matematico',1,'p_operacion_mat_var','new_syntax.py',301),
  ('operador_matematico -> DECREMENTO','operador_matematico',1,'p_operacion_mat_var','new_syntax.py',302),
  ('asignacion -> ASIGNACION','asignacion',1,'p_operadores_asignacion','new_syntax.py',305),
  ('asignacion -> ASIGNACION_ADICION','asignacion',1,'p_operadores_asignacion','new_syntax.py',306),
  ('asignacion -> ASIGNACION_RESTA','asignacion',1,'p_operadores_asignacion','new_syntax.py',307),
  ('asignacion -> ASIGNACION_MULTI','asignacion',1,'p_operadores_asignacion','new_syntax.py',308),
  ('asignacion -> DECLARACION_ASIGNACION','asignacion',1,'p_operadores_asignacion','new_syntax.py',309),
  ('asignacion -> ASIGNACION_DIVISION','asignacion',1,'p_operadores_asignacion','new_syntax.py',310),
  ('asignacion -> ASIGNACION_MODULO','asignacion',1,'p_operadores_asignacion','new_syntax.py',311),
  ('operacion_binaria -> ADICION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',314),
  ('operacion_binaria -> RESTA','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',315),
  ('operacion_binaria -> MULTIPLICACION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',316),
  ('operacion_binaria -> DIVISION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',317),
  ('operacion_binaria -> MODULO','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',318),
  ('operacion_binaria -> MENOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',321),
  ('operacion_binaria -> IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',322),
  ('operacion_binaria -> DIFERENTE','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',323),
  ('operacion_binaria -> MAYOR','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',324),
  ('operacion_binaria -> MAYOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',325),
  ('operacion_binaria -> MENOR','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',326),
  ('valor -> valor_int','valor',1,'p_valores','new_syntax.py',329),
  ('valor -> valor_double','valor',1,'p_valores','new_syntax.py',330),
  ('valor -> valor_string','valor',1,'p_valores','new_syntax.py',331),
  ('valor -> valor_boolean','valor',1,'p_valores','new_syntax.py',332),
  ('valor -> valor_variable','valor',1,'p_valores','new_syntax.py',333),
  ('valor -> valor_struct','valor',1,'p_valores','new_syntax.py',334),
  ('valor_int -> INT','valor_int',1,'p_valores_int','new_syntax.py',337),
  ('valor_double -> DOUBLE','valor_double',1,'p_valores_double','new_syntax.py',340),
  ('valor_string -> STRING','valor_string',1,'p_valores_string','new_syntax.py',343),
  ('valor_boolean -> BOOLEAN','valor_boolean',1,'p_valores_boolean','new_syntax.py',346),
  ('valor_variable -> ID','valor_variable',1,'p_valores_variable','new_syntax.py',349),
]
