
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADICION AND ASIGNACION ASIGNACION_ADICION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTI ASIGNACION_RESTA BOOL BOOLEAN BREAK CASE CHAN COMA CONST CONTINUE DECLARACION_ASIGNACION DECREMENTO DEFAULT DEFER DIFERENTE DIVISION DOS_PUNTOS DOUBLE D_CORCHETE D_LLAVE D_PARENTESIS ELSE ELSEIF FALLTHROUGH FLOAT32 FLOAT64 FOR FUNC GO GOTO ID IDENTIFICADOR IF IGUAL IMPORT INCREMENTO INT INTEGER INTERFACE I_CORCHETE I_LLAVE I_PARENTESIS MAKE MAP MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PACKAGE PRINT PRINTF PRINTLN PUNTO PUNTO_COMA RANGE RESTA RETURN SELECT STRING STRINGTYPE STRUCT SWITCH TYPE VARbody : instruccioninstruccion : print I_PARENTESIS valores D_PARENTESISinstruccion : VAR ID type ASIGNACION valorinstruccion : ID asignacion valorinstruccion : ID operador_matematicoinstruccion : IF condicion I_LLAVE body D_LLAVEinstruccion : ELSE I_LLAVE body D_LLAVEinstruccion : ELSEIF condicion I_LLAVE body D_LLAVEinstruccion : FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVEinstruccion : FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : I_CORCHETE D_CORCHETE type I_LLAVE D_LLAVEinstruccion : I_CORCHETE INT D_CORCHETE type I_LLAVE D_LLAVEinstruccion : I_CORCHETE D_CORCHETE type I_LLAVE valores D_LLAVEinstruccion : I_CORCHETE INT D_CORCHETE type I_LLAVE valores D_LLAVEinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVEinstruccion : MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESISinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVEclave_valor : valor DOS_PUNTOS valorclaves_valores : clave_valor \n          | clave_valor COMA claves_valorescondicion : valoriteracion_for : ID valores : valor \n          | valor COMA valoresvalor : valor operacion_binaria valorprint : PRINTLN \n          | PRINTF\n          | PRINTtype : BOOL\n          | STRINGTYPE\n          | INTEGER\n          | FLOAT32\n          | FLOAT64operador_matematico : INCREMENTO\n          | DECREMENTOasignacion : ASIGNACION\n          | ASIGNACION_ADICION\n          | ASIGNACION_RESTA\n          | ASIGNACION_MULTI\n          | DECLARACION_ASIGNACION\n          | ASIGNACION_DIVISION\n          | ASIGNACION_MODULOoperacion_binaria : ADICION\n          | RESTA\n          | MULTIPLICACION\n          | DIVISION\n          | MODULOoperacion_binaria : MENOR_IGUAL\n          | IGUAL\n          | DIFERENTE\n          | MAYOR\n          | MAYOR_IGUAL\n          | MENORvalor : INT\n          | DOUBLE\n          | STRING\n          | ID'
    
_lr_action_items = {'VAR':([0,9,35,52,66,100,118,119,],[4,4,4,4,4,4,4,4,]),'ID':([0,4,6,8,9,16,18,20,21,22,23,24,25,26,35,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,69,75,76,81,84,94,97,100,101,106,118,119,121,122,],[5,17,34,34,37,34,34,-37,-38,-39,-40,-41,-42,-43,5,5,34,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,5,-41,82,34,34,34,92,34,102,34,5,109,34,5,5,34,34,]),'IF':([0,9,35,52,66,100,118,119,],[6,6,6,6,6,6,6,6,]),'ELSE':([0,9,35,52,66,100,118,119,],[7,7,7,7,7,7,7,7,]),'ELSEIF':([0,9,35,52,66,100,118,119,],[8,8,8,8,8,8,8,8,]),'FOR':([0,9,35,52,66,100,118,119,],[9,9,9,9,9,9,9,9,]),'I_CORCHETE':([0,9,11,35,52,66,73,100,118,119,],[10,10,41,10,10,10,87,10,10,10,]),'MAP':([0,9,35,42,52,66,100,118,119,],[11,11,11,73,11,11,11,11,11,]),'MAKE':([0,9,35,52,66,100,118,119,],[12,12,12,12,12,12,12,12,]),'PRINTLN':([0,9,35,52,66,100,118,119,],[13,13,13,13,13,13,13,13,]),'PRINTF':([0,9,35,52,66,100,118,119,],[14,14,14,14,14,14,14,14,]),'PRINT':([0,9,35,52,66,100,118,119,],[15,15,15,15,15,15,15,15,]),'$end':([1,2,19,27,28,31,32,33,34,51,74,78,79,89,90,91,95,103,104,111,112,117,120,123,128,129,],[0,-1,-5,-35,-36,-55,-56,-57,-58,-4,-2,-26,-7,-3,-6,-8,-12,-14,-13,-15,-16,-9,-18,-17,-11,-10,]),'D_LLAVE':([2,19,27,28,31,32,33,34,44,51,65,74,77,78,79,80,84,88,89,90,91,95,96,97,103,104,105,106,108,111,112,113,114,117,120,123,124,125,126,127,128,129,],[-1,-5,-35,-36,-55,-56,-57,-58,-24,-4,79,-2,90,-26,-7,91,95,-25,-3,-6,-8,-12,103,104,-14,-13,111,112,117,-15,-16,120,-20,-9,-18,-17,128,129,-21,-19,-11,-10,]),'I_PARENTESIS':([3,12,13,14,15,],[16,42,-27,-28,-29,]),'ASIGNACION':([5,37,45,46,47,48,49,50,],[20,20,76,-30,-31,-32,-33,-34,]),'ASIGNACION_ADICION':([5,37,],[21,21,]),'ASIGNACION_RESTA':([5,37,],[22,22,]),'ASIGNACION_MULTI':([5,37,],[23,23,]),'DECLARACION_ASIGNACION':([5,37,82,],[24,67,93,]),'ASIGNACION_DIVISION':([5,37,],[25,25,]),'ASIGNACION_MODULO':([5,37,],[26,26,]),'INCREMENTO':([5,37,102,],[27,27,27,]),'DECREMENTO':([5,37,102,],[28,28,28,]),'INT':([6,8,10,16,18,20,21,22,23,24,25,26,53,54,55,56,57,58,59,60,61,62,63,64,67,69,75,76,84,97,106,121,122,],[31,31,40,31,31,-37,-38,-39,-40,-41,-42,-43,31,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-41,31,31,31,31,31,31,31,31,]),'DOUBLE':([6,8,16,18,20,21,22,23,24,25,26,53,54,55,56,57,58,59,60,61,62,63,64,67,69,75,76,84,97,106,121,122,],[32,32,32,32,-37,-38,-39,-40,-41,-42,-43,32,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-41,32,32,32,32,32,32,32,32,]),'STRING':([6,8,16,18,20,21,22,23,24,25,26,53,54,55,56,57,58,59,60,61,62,63,64,67,69,75,76,84,97,106,121,122,],[33,33,33,33,-37,-38,-39,-40,-41,-42,-43,33,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-41,33,33,33,33,33,33,33,33,]),'I_LLAVE':([7,27,28,29,30,31,32,33,34,36,46,47,48,49,50,70,78,85,92,98,109,110,],[35,-35,-36,52,-22,-55,-56,-57,-58,66,-30,-31,-32,-33,-34,84,-26,97,100,106,118,119,]),'D_CORCHETE':([10,40,46,47,48,49,50,72,99,],[39,71,-30,-31,-32,-33,-34,86,107,]),'BOOL':([17,39,41,71,86,87,107,],[46,46,46,46,46,46,46,]),'STRINGTYPE':([17,39,41,71,86,87,107,],[47,47,47,47,47,47,47,]),'INTEGER':([17,39,41,71,86,87,107,],[48,48,48,48,48,48,48,]),'FLOAT32':([17,39,41,71,86,87,107,],[49,49,49,49,49,49,49,]),'FLOAT64':([17,39,41,71,86,87,107,],[50,50,50,50,50,50,50,]),'PUNTO_COMA':([19,27,28,31,32,33,34,38,51,74,78,79,83,89,90,91,95,103,104,111,112,117,120,123,128,129,],[-5,-35,-36,-55,-56,-57,-58,69,-4,-2,-26,-7,94,-3,-6,-8,-12,-14,-13,-15,-16,-9,-18,-17,-11,-10,]),'ADICION':([30,31,32,33,34,44,51,78,83,89,115,127,],[54,-55,-56,-57,-58,54,54,54,54,54,54,54,]),'RESTA':([30,31,32,33,34,44,51,78,83,89,115,127,],[55,-55,-56,-57,-58,55,55,55,55,55,55,55,]),'MULTIPLICACION':([30,31,32,33,34,44,51,78,83,89,115,127,],[56,-55,-56,-57,-58,56,56,56,56,56,56,56,]),'DIVISION':([30,31,32,33,34,44,51,78,83,89,115,127,],[57,-55,-56,-57,-58,57,57,57,57,57,57,57,]),'MODULO':([30,31,32,33,34,44,51,78,83,89,115,127,],[58,-55,-56,-57,-58,58,58,58,58,58,58,58,]),'MENOR_IGUAL':([30,31,32,33,34,44,51,78,83,89,115,127,],[59,-55,-56,-57,-58,59,59,59,59,59,59,59,]),'IGUAL':([30,31,32,33,34,44,51,78,83,89,115,127,],[60,-55,-56,-57,-58,60,60,60,60,60,60,60,]),'DIFERENTE':([30,31,32,33,34,44,51,78,83,89,115,127,],[61,-55,-56,-57,-58,61,61,61,61,61,61,61,]),'MAYOR':([30,31,32,33,34,44,51,78,83,89,115,127,],[62,-55,-56,-57,-58,62,62,62,62,62,62,62,]),'MAYOR_IGUAL':([30,31,32,33,34,44,51,78,83,89,115,127,],[63,-55,-56,-57,-58,63,63,63,63,63,63,63,]),'MENOR':([30,31,32,33,34,44,51,78,83,89,115,127,],[64,-55,-56,-57,-58,64,64,64,64,64,64,64,]),'COMA':([31,32,33,34,37,44,78,114,127,],[-55,-56,-57,-58,68,75,-26,121,-19,]),'D_PARENTESIS':([31,32,33,34,43,44,46,47,48,49,50,78,88,116,],[-55,-56,-57,-58,74,-24,-30,-31,-32,-33,-34,-26,-25,123,]),'DOS_PUNTOS':([31,32,33,34,78,115,],[-55,-56,-57,-58,-26,122,]),'RANGE':([67,93,],[81,101,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,35,52,66,100,118,119,],[1,65,77,80,108,124,125,]),'instruccion':([0,9,35,52,66,100,118,119,],[2,38,2,2,2,2,2,2,]),'print':([0,9,35,52,66,100,118,119,],[3,3,3,3,3,3,3,3,]),'asignacion':([5,37,],[18,18,]),'operador_matematico':([5,37,102,],[19,19,110,]),'condicion':([6,8,],[29,36,]),'valor':([6,8,16,18,53,69,75,76,84,97,106,121,122,],[30,30,44,51,78,83,44,89,44,44,115,115,127,]),'valores':([16,75,84,97,],[43,88,96,105,]),'type':([17,39,41,71,86,87,107,],[45,70,72,85,98,99,116,]),'operacion_binaria':([30,44,51,78,83,89,115,127,],[53,53,53,53,53,53,53,53,]),'claves_valores':([106,121,],[113,126,]),'clave_valor':([106,121,],[114,114,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> instruccion','body',1,'p_body','sintactico.py',9),
  ('instruccion -> print I_PARENTESIS valores D_PARENTESIS','instruccion',4,'p_impresion','sintactico.py',12),
  ('instruccion -> VAR ID type ASIGNACION valor','instruccion',5,'p_declaracion','sintactico.py',15),
  ('instruccion -> ID asignacion valor','instruccion',3,'p_asignacion','sintactico.py',18),
  ('instruccion -> ID operador_matematico','instruccion',2,'p_incremento_decremento','sintactico.py',21),
  ('instruccion -> IF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_condicion','sintactico.py',26),
  ('instruccion -> ELSE I_LLAVE body D_LLAVE','instruccion',4,'p_else_condicion','sintactico.py',29),
  ('instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_else_condicion','sintactico.py',32),
  ('instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',8,'p_for_each','sintactico.py',35),
  ('instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE','instruccion',10,'p_for_condicion','sintactico.py',38),
  ('instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',10,'p_for_map','sintactico.py',41),
  ('instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE D_LLAVE','instruccion',5,'p_array','sintactico.py',46),
  ('instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE D_LLAVE','instruccion',6,'p_array_length','sintactico.py',49),
  ('instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE valores D_LLAVE','instruccion',6,'p_array_con_valores','sintactico.py',52),
  ('instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE valores D_LLAVE','instruccion',7,'p_array_length_con_valores','sintactico.py',55),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE','instruccion',7,'p_map','sintactico.py',58),
  ('instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS','instruccion',8,'p_map_make','sintactico.py',61),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE','instruccion',8,'p_map_valores','sintactico.py',64),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','sintactico.py',67),
  ('claves_valores -> clave_valor','claves_valores',1,'p_multiple_clave_valor','sintactico.py',70),
  ('claves_valores -> clave_valor COMA claves_valores','claves_valores',3,'p_multiple_clave_valor','sintactico.py',71),
  ('condicion -> valor','condicion',1,'p_condicion','sintactico.py',74),
  ('iteracion_for -> ID','iteracion_for',1,'p_iteracion_for','sintactico.py',77),
  ('valores -> valor','valores',1,'p_multiples_valores','sintactico.py',85),
  ('valores -> valor COMA valores','valores',3,'p_multiples_valores','sintactico.py',86),
  ('valor -> valor operacion_binaria valor','valor',3,'p_operacion_mat','sintactico.py',89),
  ('print -> PRINTLN','print',1,'p_print_options','sintactico.py',92),
  ('print -> PRINTF','print',1,'p_print_options','sintactico.py',93),
  ('print -> PRINT','print',1,'p_print_options','sintactico.py',94),
  ('type -> BOOL','type',1,'p_tipo','sintactico.py',97),
  ('type -> STRINGTYPE','type',1,'p_tipo','sintactico.py',98),
  ('type -> INTEGER','type',1,'p_tipo','sintactico.py',99),
  ('type -> FLOAT32','type',1,'p_tipo','sintactico.py',100),
  ('type -> FLOAT64','type',1,'p_tipo','sintactico.py',101),
  ('operador_matematico -> INCREMENTO','operador_matematico',1,'p_operacion_mat_var','sintactico.py',104),
  ('operador_matematico -> DECREMENTO','operador_matematico',1,'p_operacion_mat_var','sintactico.py',105),
  ('asignacion -> ASIGNACION','asignacion',1,'p_operadores_asignacion','sintactico.py',108),
  ('asignacion -> ASIGNACION_ADICION','asignacion',1,'p_operadores_asignacion','sintactico.py',109),
  ('asignacion -> ASIGNACION_RESTA','asignacion',1,'p_operadores_asignacion','sintactico.py',110),
  ('asignacion -> ASIGNACION_MULTI','asignacion',1,'p_operadores_asignacion','sintactico.py',111),
  ('asignacion -> DECLARACION_ASIGNACION','asignacion',1,'p_operadores_asignacion','sintactico.py',112),
  ('asignacion -> ASIGNACION_DIVISION','asignacion',1,'p_operadores_asignacion','sintactico.py',113),
  ('asignacion -> ASIGNACION_MODULO','asignacion',1,'p_operadores_asignacion','sintactico.py',114),
  ('operacion_binaria -> ADICION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',117),
  ('operacion_binaria -> RESTA','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',118),
  ('operacion_binaria -> MULTIPLICACION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',119),
  ('operacion_binaria -> DIVISION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',120),
  ('operacion_binaria -> MODULO','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',121),
  ('operacion_binaria -> MENOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',124),
  ('operacion_binaria -> IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',125),
  ('operacion_binaria -> DIFERENTE','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',126),
  ('operacion_binaria -> MAYOR','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',127),
  ('operacion_binaria -> MAYOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',128),
  ('operacion_binaria -> MENOR','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',129),
  ('valor -> INT','valor',1,'p_valores','sintactico.py',132),
  ('valor -> DOUBLE','valor',1,'p_valores','sintactico.py',133),
  ('valor -> STRING','valor',1,'p_valores','sintactico.py',134),
  ('valor -> ID','valor',1,'p_valores','sintactico.py',135),
]
