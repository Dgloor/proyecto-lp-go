
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADICION AND ASIGNACION ASIGNACION_ADICION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTI ASIGNACION_RESTA BOOL BOOLEAN BREAK CASE CHAN COMA CONST CONTINUE DECLARACION_ASIGNACION DECREMENTO DEFAULT DEFER DIFERENTE DIVISION DOS_PUNTOS DOUBLE D_CORCHETE D_LLAVE D_PARENTESIS ELSE ELSEIF FALLTHROUGH FLOAT32 FLOAT64 FOR FUNC GO GOTO ID IDENTIFICADOR IF IGUAL IMPORT INCREMENTO INT INTEGER INTERFACE I_CORCHETE I_LLAVE I_PARENTESIS MAKE MAP MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PACKAGE PRINT PRINTF PRINTLN PUNTO PUNTO_COMA RANGE RESTA RETURN SELECT STRING STRINGTYPE STRUCT SWITCH TYPE VARgo : instruccion\n            | funcion go\n            | funcionbody : instruccion\n            | I_LLAVE instruct_expression D_LLAVE\n            | I_LLAVE varias_instrucciones D_LLAVE\n            | I_LLAVE varias_instrucciones instruct_expression D_LLAVE\n            | I_LLAVE D_LLAVEvarias_instrucciones : instruccion\n                            | instruccion varias_instruccionesinstruct_expression : RETURN valor\n                            | RETURN resultadoinstruccion : llamada_func\n                     | resultado_inc_dec\n                     | expressioninstruccion : print I_PARENTESIS valores D_PARENTESISinstruccion : VAR ID type ASIGNACION valor\n                   | VAR ID ASIGNACION valor\n                   | VAR ID ASIGNACION instruccioninstruccion : ID asignacion valor\n          | ID asignacion instruccionfuncion : FUNC ID cuerpo_funcuerpo_fun : parametrosMetodo bodyparametrosMetodo : I_PARENTESIS parametros D_PARENTESIS type\n                        | I_PARENTESIS parametros D_PARENTESISparametros : atributo\n                  | atributo COMA parametros\n                  | llamada_func : ID I_PARENTESIS llamada_params D_PARENTESISllamada_params : expression\n                      | expression COMA llamada_paramsinstruccion : IF condicion I_LLAVE body D_LLAVEinstruccion : ELSE I_LLAVE body D_LLAVEinstruccion : ELSEIF condicion I_LLAVE body D_LLAVEinstruccion : FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVEinstruccion : FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : array_int\n    | array_double\n    | array_string\n    | array_booleaninstruccion : array_length_int\n    | array_length_double\n    | array_length_string\n    | array_length_booleaninstruccion : array_con_valores_int\n    | array_con_valores_double\n    | array_con_valores_string\n    | array_con_valores_booleaninstruccion : array_length_con_valores_int\n    | array_length_con_valores_double\n    | array_length_con_valores_string\n    | array_length_con_valores_booleanarray_int : I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVEarray_double : I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVEarray_string : I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVEarray_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVEarray_length_int : I_CORCHETE INT D_CORCHETE INTEGER I_LLAVE D_LLAVEarray_length_double : I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVEarray_length_string : I_CORCHETE INT D_CORCHETE STRINGTYPE I_LLAVE D_LLAVEarray_length_boolean : I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVEarray_con_valores_int : I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVEarray_con_valores_double : I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVEarray_con_valores_string : I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVEarray_con_valores_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVEarray_length_con_valores_int : I_CORCHETE INT D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVEarray_length_con_valores_double : I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVEarray_length_con_valores_string : I_CORCHETE INT D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVEarray_length_con_valores_boolean : I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVEinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVEinstruccion : MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESISinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVEinstruccion : TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVEatributos_struct : atributo\n                | atributo atributos_structatributo : ID typeinstruccion : init_structinit_struct : VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE\n                    | ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVEclave_valor : valor DOS_PUNTOS valorclaves_valores : clave_valor\n          | clave_valor COMA claves_valorescondicion : valor\n                | I_PARENTESIS valor D_PARENTESISiteracion_for : IDexpression : valores\n                  | resultado\n                  | llamada_func\n                  | I_PARENTESIS resultado D_PARENTESISresultado : expression operacion_binaria expressionresultado_inc_dec : ID operador_matematicovalores : valor\n          | valor COMA valoresvalores_int : valor_int\n          | valor_int COMA valores_intvalores_double : valor_double\n          | valor_double COMA valores_doublevalores_string : valor_string\n          | valor_string COMA valores_stringvalores_boolean : valor_boolean\n          | valor_boolean COMA valores_booleanvalor : valor operacion_binaria valorprint : PRINTLN\n          | PRINTF\n          | PRINTtype : BOOL\n          | STRINGTYPE\n          | INTEGER\n          | FLOAT32\n          | FLOAT64operador_matematico : INCREMENTO\n          | DECREMENTOasignacion : ASIGNACION\n          | ASIGNACION_ADICION\n          | ASIGNACION_RESTA\n          | ASIGNACION_MULTI\n          | DECLARACION_ASIGNACION\n          | ASIGNACION_DIVISION\n          | ASIGNACION_MODULOoperacion_binaria : ADICION\n          | RESTA\n          | MULTIPLICACION\n          | DIVISION\n          | MODULOoperacion_binaria : MENOR_IGUAL\n          | IGUAL\n          | DIFERENTE\n          | MAYOR\n          | MAYOR_IGUAL\n          | MENORvalor : valor_int\n          | valor_double\n          | valor_string\n          | valor_boolean\n          | valor_variablevalor_int : INTvalor_double : DOUBLEvalor_string : STRINGvalor_boolean : BOOLEANvalor_variable : ID'
    
_lr_action_items = {'VAR':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[10,10,-13,-14,-15,-86,-140,-92,10,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,10,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,10,-90,-89,10,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,10,10,-4,10,-117,-22,10,-16,-18,-19,-29,-8,10,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,10,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,10,10,-72,-71,-37,-36,]),'ID':([0,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,125,126,135,136,137,138,139,140,141,142,143,144,145,149,151,152,153,155,168,169,174,177,178,179,185,188,190,193,196,199,208,209,210,211,212,213,214,215,216,218,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,262,263,264,269,270,],[11,11,-13,-14,-15,69,-86,70,-140,-92,88,88,91,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,97,-77,98,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,69,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,88,-88,-140,102,110,69,-91,115,-113,-114,-115,-116,-118,-119,-111,-112,88,88,88,-140,11,-90,-89,110,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,11,11,-4,11,115,156,88,-22,11,172,-16,173,88,-18,-19,-29,69,88,-8,183,11,-33,186,172,-23,-17,-32,-5,-6,-34,217,-54,-55,-56,-57,172,-25,172,-76,88,-79,-7,11,242,88,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,11,11,-72,88,88,-71,-37,-36,]),'IF':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[13,13,-13,-14,-15,-86,-140,-92,13,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,13,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,13,-90,-89,13,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,13,13,-4,13,-117,-22,13,-16,-18,-19,-29,-8,13,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,13,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,13,13,-72,-71,-37,-36,]),'ELSE':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[14,14,-13,-14,-15,-86,-140,-92,14,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,14,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,14,-90,-89,14,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,14,14,-4,14,-117,-22,14,-16,-18,-19,-29,-8,14,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,14,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,14,14,-72,-71,-37,-36,]),'ELSEIF':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[15,15,-13,-14,-15,-86,-140,-92,15,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,15,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,15,-90,-89,15,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,15,15,-4,15,-117,-22,15,-16,-18,-19,-29,-8,15,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,15,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,15,15,-72,-71,-37,-36,]),'FOR':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[16,16,-13,-14,-15,-86,-140,-92,16,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,16,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,16,-90,-89,16,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,16,16,-4,16,-117,-22,16,-16,-18,-19,-29,-8,16,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,16,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,16,16,-72,-71,-37,-36,]),'MAP':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,96,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[33,33,-13,-14,-15,-86,-140,-92,33,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,33,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,33,133,-90,-89,33,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,33,33,-4,33,-117,-22,33,-16,-18,-19,-29,-8,33,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,33,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,33,33,-72,-71,-37,-36,]),'MAKE':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[35,35,-13,-14,-15,-86,-140,-92,35,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,35,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,35,-90,-89,35,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,35,35,-4,35,-117,-22,35,-16,-18,-19,-29,-8,35,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,35,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,35,35,-72,-71,-37,-36,]),'TYPE':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[36,36,-13,-14,-15,-86,-140,-92,36,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,36,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,36,-90,-89,36,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,36,36,-4,36,-117,-22,36,-16,-18,-19,-29,-8,36,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,36,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,36,36,-72,-71,-37,-36,]),'FUNC':([0,3,4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,73,81,82,88,99,101,110,111,112,116,117,122,135,138,141,142,143,149,153,169,174,177,178,179,185,190,193,196,199,213,214,219,221,223,225,227,229,231,233,236,244,252,253,254,255,257,258,261,264,269,270,],[38,38,-13,-14,-15,-86,-140,-92,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,-91,-111,-112,-140,-90,-89,-140,-20,-21,-93,-102,-4,-22,-16,-18,-19,-29,-8,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-79,-7,-62,-63,-64,-65,-58,-59,-60,-61,-73,-70,-66,-67,-68,-69,-78,-35,-72,-71,-37,-36,]),'I_PARENTESIS':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,37,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,68,69,71,72,73,74,75,76,77,78,79,80,81,82,88,89,91,98,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,144,149,151,152,153,169,174,177,178,179,183,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[8,8,-13,-14,-15,65,8,-86,72,-92,87,87,8,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,96,-77,-87,-103,-104,-105,-137,-139,-136,-131,-132,-133,-134,-135,-138,8,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-88,72,8,8,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,8,72,137,-90,-89,8,-106,-107,-108,-109,-110,72,-20,-21,-93,-102,8,8,-4,8,-117,-22,8,-16,-18,-19,-29,8,-8,8,8,-33,-23,-17,-32,-5,-6,72,-34,-54,-55,-56,-57,-25,-79,-7,8,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,8,8,-72,-71,-37,-36,]),'PRINTLN':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[40,40,-13,-14,-15,-86,-140,-92,40,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,40,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,40,-90,-89,40,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,40,40,-4,40,-117,-22,40,-16,-18,-19,-29,-8,40,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,40,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,40,40,-72,-71,-37,-36,]),'PRINTF':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[41,41,-13,-14,-15,-86,-140,-92,41,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,41,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,41,-90,-89,41,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,41,41,-4,41,-117,-22,41,-16,-18,-19,-29,-8,41,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,41,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,41,41,-72,-71,-37,-36,]),'PRINT':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[42,42,-13,-14,-15,-86,-140,-92,42,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,42,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,42,-90,-89,42,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,42,42,-4,42,-117,-22,42,-16,-18,-19,-29,-8,42,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,42,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,42,42,-72,-71,-37,-36,]),'I_CORCHETE':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,39,43,44,45,46,47,48,49,50,51,68,69,71,73,74,75,76,77,78,79,80,81,82,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,133,135,136,138,141,142,143,149,152,153,169,174,177,178,179,185,190,193,196,199,209,213,214,215,219,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,264,269,270,],[34,34,-13,-14,-15,-86,-140,-92,34,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,93,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,34,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,-140,34,-90,-89,34,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,34,34,-4,34,-117,167,-22,34,-16,-18,-19,-29,-8,34,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-25,-79,-7,34,-62,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,34,34,-72,-71,-37,-36,]),'INT':([0,3,4,5,6,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,37,39,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,126,135,136,138,140,141,142,143,144,145,149,151,152,153,159,169,174,177,178,179,185,190,193,196,199,202,209,212,213,214,215,218,219,220,221,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,262,263,264,269,270,],[45,45,-13,-14,-15,45,-86,-140,-92,45,45,45,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,95,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,45,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,45,-88,-140,45,45,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,45,45,45,-140,45,-90,-89,45,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,45,45,-4,45,-117,45,-22,45,-16,45,-18,-19,-29,45,45,-8,45,45,-33,45,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,45,-25,45,-79,-7,45,45,-62,45,-63,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,45,45,-72,45,45,-71,-37,-36,]),'DOUBLE':([0,3,4,5,6,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,94,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,126,132,135,136,138,140,141,142,143,144,145,149,151,152,153,160,169,174,177,178,179,185,190,193,196,199,203,209,212,213,214,215,218,219,221,222,223,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,262,263,264,269,270,],[43,43,-13,-14,-15,43,-86,-140,-92,43,43,43,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,43,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,43,-88,-140,43,43,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,43,43,43,-140,43,129,-90,-89,43,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,43,43,-4,43,-117,43,164,-22,43,-16,43,-18,-19,-29,43,43,-8,43,43,-33,43,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,43,-25,43,-79,-7,43,43,-62,-63,43,-64,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,43,43,-72,43,43,-71,-37,-36,]),'STRING':([0,3,4,5,6,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,126,135,136,138,140,141,142,143,144,145,149,151,152,153,161,169,174,177,178,179,185,190,193,196,199,204,209,212,213,214,215,218,219,221,223,224,225,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,262,263,264,269,270,],[51,51,-13,-14,-15,51,-86,-140,-92,51,51,51,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,51,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,51,-88,-140,51,51,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,51,51,51,-140,51,-90,-89,51,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,51,51,-4,51,-117,51,-22,51,-16,51,-18,-19,-29,51,51,-8,51,51,-33,51,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,51,-25,51,-79,-7,51,51,-62,-63,-64,51,-65,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,51,51,-72,51,51,-71,-37,-36,]),'BOOLEAN':([0,3,4,5,6,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,94,99,101,104,105,106,107,108,109,110,111,112,116,117,118,120,122,123,124,126,132,135,136,138,140,141,142,143,144,145,149,151,152,153,162,169,174,177,178,179,185,190,193,196,199,205,209,212,213,214,215,218,219,221,223,225,226,227,229,231,233,236,238,244,252,253,254,255,257,258,259,260,261,262,263,264,269,270,],[44,44,-13,-14,-15,44,-86,-140,-92,44,44,44,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,44,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,44,-88,-140,44,44,-91,-117,-113,-114,-115,-116,-118,-119,-111,-112,44,44,44,-140,44,131,-90,-89,44,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,44,44,-4,44,-117,44,166,-22,44,-16,44,-18,-19,-29,44,44,-8,44,44,-33,44,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,44,-25,44,-79,-7,44,44,-62,-63,-64,-65,44,-58,-59,-60,-61,-73,-24,-70,-66,-67,-68,-69,-78,-35,44,44,-72,44,44,-71,-37,-36,]),'$end':([1,2,3,4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,52,68,69,73,81,82,88,99,101,110,111,112,116,117,122,135,138,141,142,143,149,153,169,174,177,178,179,185,190,193,196,199,213,214,219,221,223,225,227,229,231,233,236,244,252,253,254,255,257,258,261,264,269,270,],[0,-1,-3,-13,-14,-15,-86,-140,-92,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-2,-88,-140,-91,-111,-112,-140,-90,-89,-140,-20,-21,-93,-102,-4,-22,-16,-18,-19,-29,-8,-33,-23,-17,-32,-5,-6,-34,-54,-55,-56,-57,-79,-7,-62,-63,-64,-65,-58,-59,-60,-61,-73,-70,-66,-67,-68,-69,-78,-35,-72,-71,-37,-36,]),'PUNTO_COMA':([4,5,6,9,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,73,81,82,88,91,92,99,101,110,111,112,116,117,138,141,142,143,153,157,174,177,185,190,193,196,199,213,219,221,223,225,227,229,231,233,236,244,252,253,254,255,257,258,261,264,269,270,],[-13,-14,-15,-86,-92,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,-91,-111,-112,-140,-140,126,-90,-89,-140,-20,-21,-93,-102,-16,-18,-19,-29,-33,188,-17,-32,-34,-54,-55,-56,-57,-79,-62,-63,-64,-65,-58,-59,-60,-61,-73,-70,-66,-67,-68,-69,-78,-35,-72,-71,-37,-36,]),'D_LLAVE':([4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,73,81,82,88,99,101,105,106,107,108,109,110,111,112,116,117,120,121,122,138,141,142,143,146,148,149,150,152,153,154,159,160,161,162,174,176,177,178,179,180,181,182,183,184,185,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,211,213,214,218,219,221,223,225,227,228,229,230,231,232,233,234,236,237,240,241,244,245,246,248,249,250,251,252,253,254,255,257,258,261,264,265,266,267,268,269,270,],[-13,-14,-15,-86,-140,-92,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,-91,-111,-112,-140,-90,-89,-106,-107,-108,-109,-110,-140,-20,-21,-93,-102,149,153,-4,-16,-18,-19,-29,177,178,-8,179,-9,-33,185,190,193,196,199,-17,213,-32,-5,-6,214,-11,-12,-140,-10,-34,-54,219,-94,-55,221,-96,-56,223,-98,-57,225,-100,227,229,231,233,236,-74,-76,-79,-7,244,-62,-63,-64,-65,-58,252,-59,253,-60,254,-61,255,-73,-75,257,258,-70,261,-81,-95,-97,-99,-101,-66,-67,-68,-69,-78,-35,-72,-71,269,270,-82,-80,-37,-36,]),'RETURN':([4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,68,69,73,81,82,88,99,101,110,111,112,116,117,120,138,141,142,143,150,152,153,174,177,184,185,190,193,196,199,213,219,221,223,225,227,229,231,233,236,244,252,253,254,255,257,258,261,264,269,270,],[-13,-14,-15,-86,-140,-92,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-77,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,-91,-111,-112,-140,-90,-89,-140,-20,-21,-93,-102,151,-16,-18,-19,-29,151,-9,-33,-17,-32,-10,-34,-54,-55,-56,-57,-79,-62,-63,-64,-65,-58,-59,-60,-61,-73,-70,-66,-67,-68,-69,-78,-35,-72,-71,-37,-36,]),'ADICION':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,54,-86,-140,54,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,54,-88,-140,54,-140,-140,54,-89,-140,54,54,-93,54,54,54,-29,54,54,54,-87,-140,54,54,]),'RESTA':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,55,-86,-140,55,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,55,-88,-140,55,-140,-140,55,-89,-140,55,55,-93,55,55,55,-29,55,55,55,-87,-140,55,55,]),'MULTIPLICACION':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,56,-86,-140,56,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,56,-88,-140,56,-140,-140,56,-89,-140,56,56,-93,56,56,56,-29,56,56,56,-87,-140,56,56,]),'DIVISION':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,57,-86,-140,57,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,57,-88,-140,57,-140,-140,57,-89,-140,57,57,-93,57,57,57,-29,57,57,57,-87,-140,57,57,]),'MODULO':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,58,-86,-140,58,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,58,-88,-140,58,-140,-140,58,-89,-140,58,58,-93,58,58,58,-29,58,58,58,-87,-140,58,58,]),'MENOR_IGUAL':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,59,-86,-140,59,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,59,-88,-140,59,-140,-140,59,-89,-140,59,59,-93,59,59,59,-29,59,59,59,-87,-140,59,59,]),'IGUAL':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,60,-86,-140,60,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,60,-88,-140,60,-140,-140,60,-89,-140,60,60,-93,60,60,60,-29,60,60,60,-87,-140,60,60,]),'DIFERENTE':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,61,-86,-140,61,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,61,-88,-140,61,-140,-140,61,-89,-140,61,61,-93,61,61,61,-29,61,61,61,-87,-140,61,61,]),'MAYOR':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,62,-86,-140,62,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,62,-88,-140,62,-140,-140,62,-89,-140,62,62,-93,62,62,62,-29,62,62,62,-87,-140,62,62,]),'MAYOR_IGUAL':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,63,-86,-140,63,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,63,-88,-140,63,-140,-140,63,-89,-140,63,63,-93,63,63,63,-29,63,63,63,-87,-140,63,63,]),'MENOR':([4,6,9,11,12,39,43,44,45,46,47,48,49,50,51,66,67,68,69,86,88,91,99,101,110,111,114,116,117,119,141,143,157,174,181,182,183,247,268,],[-88,64,-86,-140,64,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-87,64,-88,-140,64,-140,-140,64,-89,-140,64,64,-93,64,64,64,-29,64,64,64,-87,-140,64,64,]),'D_PARENTESIS':([9,12,39,43,44,45,46,47,48,49,50,51,66,68,69,88,99,100,101,105,106,107,108,109,113,114,116,117,119,137,143,170,171,175,210,211,239,256,],[-86,-92,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,101,-88,-140,-140,-90,138,-89,-106,-107,-108,-109,-110,143,-30,-93,-102,147,-28,-29,209,-26,-31,-28,-76,-27,264,]),'COMA':([9,11,12,39,43,44,45,46,47,48,49,50,51,68,69,88,91,99,101,105,106,107,108,109,110,111,114,116,117,141,143,171,181,183,192,195,198,201,211,246,268,],[-86,-140,83,-87,-137,-139,-136,-131,-132,-133,-134,-135,-138,-88,-140,-140,125,-90,-89,-106,-107,-108,-109,-110,-140,83,144,-93,-102,83,-29,210,83,-140,220,222,224,226,-76,262,-80,]),'DECLARACION_ASIGNACION':([11,91,110,156,],[74,124,74,187,]),'ASIGNACION':([11,70,91,102,103,105,106,107,108,109,110,],[75,104,75,139,140,-106,-107,-108,-109,-110,75,]),'ASIGNACION_ADICION':([11,91,110,],[76,76,76,]),'ASIGNACION_RESTA':([11,91,110,],[77,77,77,]),'ASIGNACION_MULTI':([11,91,110,],[78,78,78,]),'ASIGNACION_DIVISION':([11,91,110,],[79,79,79,]),'ASIGNACION_MODULO':([11,91,110,],[80,80,80,]),'INCREMENTO':([11,91,110,217,],[81,81,81,81,]),'DECREMENTO':([11,91,110,217,],[82,82,82,82,]),'I_LLAVE':([14,43,44,45,46,47,48,49,50,51,81,82,85,86,88,89,90,105,106,107,108,109,115,117,118,123,128,129,130,131,134,136,147,163,164,165,166,173,186,189,209,215,238,242,243,259,260,],[89,-137,-139,-136,-131,-132,-133,-134,-135,-138,-111,-112,118,-83,-140,120,123,-106,-107,-108,-109,-110,145,-102,120,120,159,160,161,162,168,120,-84,202,203,204,205,212,215,218,-25,120,-24,259,260,120,120,]),'D_CORCHETE':([34,95,105,106,107,108,109,127,206,],[94,132,-106,-107,-108,-109,-110,158,235,]),'DOS_PUNTOS':([43,44,45,46,47,48,49,50,51,88,117,247,],[-137,-139,-136,-131,-132,-133,-134,-135,-138,-140,-102,263,]),'BOOL':([70,93,158,167,172,209,235,],[105,105,105,105,105,105,105,]),'STRINGTYPE':([70,93,94,132,158,167,172,209,235,],[106,106,130,165,106,106,106,106,106,]),'INTEGER':([70,93,94,132,158,167,172,209,235,],[107,107,128,163,107,107,107,107,107,]),'FLOAT32':([70,93,158,167,172,209,235,],[108,108,108,108,108,108,108,]),'FLOAT64':([70,93,158,167,172,209,235,],[109,109,109,109,109,109,109,]),'STRUCT':([97,],[134,]),'RANGE':([124,187,],[155,216,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'go':([0,3,],[1,52,]),'instruccion':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[2,2,92,112,122,142,122,152,122,122,152,122,122,122,]),'funcion':([0,3,],[3,3,]),'llamada_func':([0,3,8,16,53,71,72,89,104,118,120,123,136,144,151,152,215,259,260,],[4,4,68,4,68,4,68,4,4,4,4,4,4,68,68,4,4,4,4,]),'resultado_inc_dec':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expression':([0,3,8,16,53,71,72,89,104,118,120,123,136,144,151,152,215,259,260,],[6,6,67,6,99,6,114,6,6,6,6,6,6,114,67,6,6,6,6,]),'print':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'valores':([0,3,8,16,53,65,71,72,83,89,104,118,120,123,136,144,145,151,152,212,215,259,260,],[9,9,9,9,9,100,9,9,116,9,9,9,9,9,9,9,176,9,9,240,9,9,9,]),'valor':([0,3,8,13,15,16,53,65,71,72,83,84,87,89,104,118,120,123,126,136,140,144,145,151,152,212,215,218,259,260,262,263,],[12,12,12,86,86,12,12,12,111,12,12,117,119,12,141,12,12,12,157,12,174,12,12,181,12,12,12,247,12,12,247,268,]),'array_int':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'array_double':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array_string':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'array_boolean':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'array_length_int':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'array_length_double':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'array_length_string':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'array_length_boolean':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'array_con_valores_int':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'array_con_valores_double':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'array_con_valores_string':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'array_con_valores_boolean':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array_length_con_valores_int':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'array_length_con_valores_double':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'array_length_con_valores_string':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'array_length_con_valores_boolean':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'init_struct':([0,3,16,71,89,104,118,120,123,136,152,215,259,260,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'resultado':([0,3,8,16,53,71,72,89,104,118,120,123,136,144,151,152,215,259,260,],[39,39,66,39,39,39,39,39,39,39,39,39,39,39,182,39,39,39,39,]),'valor_int':([0,3,8,13,15,16,53,65,71,72,83,84,87,89,104,118,120,123,126,136,140,144,145,151,152,159,202,212,215,218,220,259,260,262,263,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,192,192,46,46,46,192,46,46,46,46,]),'valor_double':([0,3,8,13,15,16,53,65,71,72,83,84,87,89,104,118,120,123,126,136,140,144,145,151,152,160,203,212,215,218,222,259,260,262,263,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,195,195,47,47,47,195,47,47,47,47,]),'valor_string':([0,3,8,13,15,16,53,65,71,72,83,84,87,89,104,118,120,123,126,136,140,144,145,151,152,161,204,212,215,218,224,259,260,262,263,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,198,198,48,48,48,198,48,48,48,48,]),'valor_boolean':([0,3,8,13,15,16,53,65,71,72,83,84,87,89,104,118,120,123,126,136,140,144,145,151,152,162,205,212,215,218,226,259,260,262,263,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,201,201,49,49,49,201,49,49,49,49,]),'valor_variable':([0,3,8,13,15,16,53,65,71,72,83,84,87,89,104,118,120,123,126,136,140,144,145,151,152,212,215,218,259,260,262,263,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'operacion_binaria':([6,12,67,86,99,111,114,117,119,141,157,174,181,247,268,],[53,84,53,84,53,84,53,84,84,84,84,84,84,84,84,]),'asignacion':([11,91,110,],[71,71,71,]),'operador_matematico':([11,91,110,217,],[73,73,73,243,]),'condicion':([13,15,],[85,90,]),'type':([70,93,158,167,172,209,235,],[103,127,189,206,211,238,256,]),'llamada_params':([72,144,],[113,175,]),'body':([89,118,123,136,215,259,260,],[121,146,154,169,241,265,266,]),'cuerpo_fun':([98,],[135,]),'parametrosMetodo':([98,],[136,]),'instruct_expression':([120,150,],[148,180,]),'varias_instrucciones':([120,152,],[150,184,]),'parametros':([137,210,],[170,239,]),'atributo':([137,168,208,210,],[171,208,208,171,]),'valores_int':([159,202,220,],[191,228,248,]),'valores_double':([160,203,222,],[194,230,249,]),'valores_string':([161,204,224,],[197,232,250,]),'valores_boolean':([162,205,226,],[200,234,251,]),'atributos_struct':([168,208,],[207,237,]),'claves_valores':([218,262,],[245,267,]),'clave_valor':([218,262,],[246,246,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> go","S'",1,None,None,None),
  ('go -> instruccion','go',1,'p_go','new_syntax.py',18),
  ('go -> funcion go','go',2,'p_go','new_syntax.py',19),
  ('go -> funcion','go',1,'p_go','new_syntax.py',20),
  ('body -> instruccion','body',1,'p_body','new_syntax.py',23),
  ('body -> I_LLAVE instruct_expression D_LLAVE','body',3,'p_body','new_syntax.py',24),
  ('body -> I_LLAVE varias_instrucciones D_LLAVE','body',3,'p_body','new_syntax.py',25),
  ('body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE','body',4,'p_body','new_syntax.py',26),
  ('body -> I_LLAVE D_LLAVE','body',2,'p_body','new_syntax.py',27),
  ('varias_instrucciones -> instruccion','varias_instrucciones',1,'p_varias_instrucciones','new_syntax.py',30),
  ('varias_instrucciones -> instruccion varias_instrucciones','varias_instrucciones',2,'p_varias_instrucciones','new_syntax.py',31),
  ('instruct_expression -> RETURN valor','instruct_expression',2,'p_expression_result','new_syntax.py',34),
  ('instruct_expression -> RETURN resultado','instruct_expression',2,'p_expression_result','new_syntax.py',35),
  ('instruccion -> llamada_func','instruccion',1,'p_instrucciones','new_syntax.py',39),
  ('instruccion -> resultado_inc_dec','instruccion',1,'p_instrucciones','new_syntax.py',40),
  ('instruccion -> expression','instruccion',1,'p_instrucciones','new_syntax.py',41),
  ('instruccion -> print I_PARENTESIS valores D_PARENTESIS','instruccion',4,'p_impresion','new_syntax.py',44),
  ('instruccion -> VAR ID type ASIGNACION valor','instruccion',5,'p_declaracion','new_syntax.py',47),
  ('instruccion -> VAR ID ASIGNACION valor','instruccion',4,'p_declaracion','new_syntax.py',48),
  ('instruccion -> VAR ID ASIGNACION instruccion','instruccion',4,'p_declaracion','new_syntax.py',49),
  ('instruccion -> ID asignacion valor','instruccion',3,'p_asignacion','new_syntax.py',52),
  ('instruccion -> ID asignacion instruccion','instruccion',3,'p_asignacion','new_syntax.py',53),
  ('funcion -> FUNC ID cuerpo_fun','funcion',3,'p_funcion','new_syntax.py',56),
  ('cuerpo_fun -> parametrosMetodo body','cuerpo_fun',2,'p_body_fm','new_syntax.py',59),
  ('parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type','parametrosMetodo',4,'p_parametros_metodo','new_syntax.py',62),
  ('parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS','parametrosMetodo',3,'p_parametros_metodo','new_syntax.py',63),
  ('parametros -> atributo','parametros',1,'p_parametros','new_syntax.py',66),
  ('parametros -> atributo COMA parametros','parametros',3,'p_parametros','new_syntax.py',67),
  ('parametros -> <empty>','parametros',0,'p_parametros','new_syntax.py',68),
  ('llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS','llamada_func',4,'p_llamada_func','new_syntax.py',71),
  ('llamada_params -> expression','llamada_params',1,'p_llamada_params','new_syntax.py',74),
  ('llamada_params -> expression COMA llamada_params','llamada_params',3,'p_llamada_params','new_syntax.py',75),
  ('instruccion -> IF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_condicion','new_syntax.py',80),
  ('instruccion -> ELSE I_LLAVE body D_LLAVE','instruccion',4,'p_else_condicion','new_syntax.py',83),
  ('instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_else_condicion','new_syntax.py',86),
  ('instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',8,'p_for_each','new_syntax.py',89),
  ('instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE','instruccion',10,'p_for_condicion','new_syntax.py',92),
  ('instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',10,'p_for_map','new_syntax.py',95),
  ('instruccion -> array_int','instruccion',1,'p_array','new_syntax.py',100),
  ('instruccion -> array_double','instruccion',1,'p_array','new_syntax.py',101),
  ('instruccion -> array_string','instruccion',1,'p_array','new_syntax.py',102),
  ('instruccion -> array_boolean','instruccion',1,'p_array','new_syntax.py',103),
  ('instruccion -> array_length_int','instruccion',1,'p_array_length','new_syntax.py',106),
  ('instruccion -> array_length_double','instruccion',1,'p_array_length','new_syntax.py',107),
  ('instruccion -> array_length_string','instruccion',1,'p_array_length','new_syntax.py',108),
  ('instruccion -> array_length_boolean','instruccion',1,'p_array_length','new_syntax.py',109),
  ('instruccion -> array_con_valores_int','instruccion',1,'p_array_con_valores','new_syntax.py',112),
  ('instruccion -> array_con_valores_double','instruccion',1,'p_array_con_valores','new_syntax.py',113),
  ('instruccion -> array_con_valores_string','instruccion',1,'p_array_con_valores','new_syntax.py',114),
  ('instruccion -> array_con_valores_boolean','instruccion',1,'p_array_con_valores','new_syntax.py',115),
  ('instruccion -> array_length_con_valores_int','instruccion',1,'p_array_length_con_valores','new_syntax.py',118),
  ('instruccion -> array_length_con_valores_double','instruccion',1,'p_array_length_con_valores','new_syntax.py',119),
  ('instruccion -> array_length_con_valores_string','instruccion',1,'p_array_length_con_valores','new_syntax.py',120),
  ('instruccion -> array_length_con_valores_boolean','instruccion',1,'p_array_length_con_valores','new_syntax.py',121),
  ('array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE','array_int',5,'p_array_int','new_syntax.py',125),
  ('array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE','array_double',5,'p_array_double','new_syntax.py',128),
  ('array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE','array_string',5,'p_array_string','new_syntax.py',131),
  ('array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE','array_boolean',5,'p_array_boolean','new_syntax.py',134),
  ('array_length_int -> I_CORCHETE INT D_CORCHETE INTEGER I_LLAVE D_LLAVE','array_length_int',6,'p_array_length_int','new_syntax.py',137),
  ('array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE','array_length_double',6,'p_array_length_double','new_syntax.py',140),
  ('array_length_string -> I_CORCHETE INT D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE','array_length_string',6,'p_array_length_string','new_syntax.py',143),
  ('array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE','array_length_boolean',6,'p_array_length_boolean','new_syntax.py',146),
  ('array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE','array_con_valores_int',6,'p_array_con_valores_int','new_syntax.py',149),
  ('array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE','array_con_valores_double',6,'p_array_con_valores_double','new_syntax.py',152),
  ('array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE','array_con_valores_string',6,'p_array_con_valores_string','new_syntax.py',155),
  ('array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_con_valores_boolean',6,'p_array_con_valores_boolean','new_syntax.py',158),
  ('array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE','array_length_con_valores_int',7,'p_array_length_con_valores_int','new_syntax.py',161),
  ('array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE','array_length_con_valores_double',7,'p_array_length_con_valores_double','new_syntax.py',164),
  ('array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE','array_length_con_valores_string',7,'p_array_length_con_valores_string','new_syntax.py',167),
  ('array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_length_con_valores_boolean',7,'p_array_length_con_valores_boolean','new_syntax.py',170),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE','instruccion',7,'p_map','new_syntax.py',175),
  ('instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS','instruccion',8,'p_map_make','new_syntax.py',178),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE','instruccion',8,'p_map_valores','new_syntax.py',181),
  ('instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE','instruccion',6,'p_struct','new_syntax.py',184),
  ('atributos_struct -> atributo','atributos_struct',1,'p_atributos_struct','new_syntax.py',187),
  ('atributos_struct -> atributo atributos_struct','atributos_struct',2,'p_atributos_struct','new_syntax.py',188),
  ('atributo -> ID type','atributo',2,'p_atributo','new_syntax.py',191),
  ('instruccion -> init_struct','instruccion',1,'p_declaracion_struct','new_syntax.py',194),
  ('init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',8,'p_init_struct','new_syntax.py',197),
  ('init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',6,'p_init_struct','new_syntax.py',198),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','new_syntax.py',201),
  ('claves_valores -> clave_valor','claves_valores',1,'p_multiple_clave_valor','new_syntax.py',204),
  ('claves_valores -> clave_valor COMA claves_valores','claves_valores',3,'p_multiple_clave_valor','new_syntax.py',205),
  ('condicion -> valor','condicion',1,'p_condicion','new_syntax.py',208),
  ('condicion -> I_PARENTESIS valor D_PARENTESIS','condicion',3,'p_condicion','new_syntax.py',209),
  ('iteracion_for -> ID','iteracion_for',1,'p_iteracion_for','new_syntax.py',212),
  ('expression -> valores','expression',1,'p_expression_term','new_syntax.py',215),
  ('expression -> resultado','expression',1,'p_expression_term','new_syntax.py',216),
  ('expression -> llamada_func','expression',1,'p_expression_term','new_syntax.py',217),
  ('expression -> I_PARENTESIS resultado D_PARENTESIS','expression',3,'p_expression_term','new_syntax.py',218),
  ('resultado -> expression operacion_binaria expression','resultado',3,'p_expression_operation','new_syntax.py',221),
  ('resultado_inc_dec -> ID operador_matematico','resultado_inc_dec',2,'p_incremento_decremento','new_syntax.py',224),
  ('valores -> valor','valores',1,'p_multiples_valores','new_syntax.py',227),
  ('valores -> valor COMA valores','valores',3,'p_multiples_valores','new_syntax.py',228),
  ('valores_int -> valor_int','valores_int',1,'p_multiples_valores_int','new_syntax.py',231),
  ('valores_int -> valor_int COMA valores_int','valores_int',3,'p_multiples_valores_int','new_syntax.py',232),
  ('valores_double -> valor_double','valores_double',1,'p_multiples_valores_double','new_syntax.py',235),
  ('valores_double -> valor_double COMA valores_double','valores_double',3,'p_multiples_valores_double','new_syntax.py',236),
  ('valores_string -> valor_string','valores_string',1,'p_multiples_valores_string','new_syntax.py',239),
  ('valores_string -> valor_string COMA valores_string','valores_string',3,'p_multiples_valores_string','new_syntax.py',240),
  ('valores_boolean -> valor_boolean','valores_boolean',1,'p_multiples_valores_boolean','new_syntax.py',243),
  ('valores_boolean -> valor_boolean COMA valores_boolean','valores_boolean',3,'p_multiples_valores_boolean','new_syntax.py',244),
  ('valor -> valor operacion_binaria valor','valor',3,'p_operacion_mat','new_syntax.py',247),
  ('print -> PRINTLN','print',1,'p_print_options','new_syntax.py',250),
  ('print -> PRINTF','print',1,'p_print_options','new_syntax.py',251),
  ('print -> PRINT','print',1,'p_print_options','new_syntax.py',252),
  ('type -> BOOL','type',1,'p_tipo','new_syntax.py',255),
  ('type -> STRINGTYPE','type',1,'p_tipo','new_syntax.py',256),
  ('type -> INTEGER','type',1,'p_tipo','new_syntax.py',257),
  ('type -> FLOAT32','type',1,'p_tipo','new_syntax.py',258),
  ('type -> FLOAT64','type',1,'p_tipo','new_syntax.py',259),
  ('operador_matematico -> INCREMENTO','operador_matematico',1,'p_operacion_mat_var','new_syntax.py',262),
  ('operador_matematico -> DECREMENTO','operador_matematico',1,'p_operacion_mat_var','new_syntax.py',263),
  ('asignacion -> ASIGNACION','asignacion',1,'p_operadores_asignacion','new_syntax.py',266),
  ('asignacion -> ASIGNACION_ADICION','asignacion',1,'p_operadores_asignacion','new_syntax.py',267),
  ('asignacion -> ASIGNACION_RESTA','asignacion',1,'p_operadores_asignacion','new_syntax.py',268),
  ('asignacion -> ASIGNACION_MULTI','asignacion',1,'p_operadores_asignacion','new_syntax.py',269),
  ('asignacion -> DECLARACION_ASIGNACION','asignacion',1,'p_operadores_asignacion','new_syntax.py',270),
  ('asignacion -> ASIGNACION_DIVISION','asignacion',1,'p_operadores_asignacion','new_syntax.py',271),
  ('asignacion -> ASIGNACION_MODULO','asignacion',1,'p_operadores_asignacion','new_syntax.py',272),
  ('operacion_binaria -> ADICION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',275),
  ('operacion_binaria -> RESTA','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',276),
  ('operacion_binaria -> MULTIPLICACION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',277),
  ('operacion_binaria -> DIVISION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',278),
  ('operacion_binaria -> MODULO','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',279),
  ('operacion_binaria -> MENOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',282),
  ('operacion_binaria -> IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',283),
  ('operacion_binaria -> DIFERENTE','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',284),
  ('operacion_binaria -> MAYOR','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',285),
  ('operacion_binaria -> MAYOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',286),
  ('operacion_binaria -> MENOR','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',287),
  ('valor -> valor_int','valor',1,'p_valores','new_syntax.py',290),
  ('valor -> valor_double','valor',1,'p_valores','new_syntax.py',291),
  ('valor -> valor_string','valor',1,'p_valores','new_syntax.py',292),
  ('valor -> valor_boolean','valor',1,'p_valores','new_syntax.py',293),
  ('valor -> valor_variable','valor',1,'p_valores','new_syntax.py',294),
  ('valor_int -> INT','valor_int',1,'p_valores_int','new_syntax.py',297),
  ('valor_double -> DOUBLE','valor_double',1,'p_valores_double','new_syntax.py',300),
  ('valor_string -> STRING','valor_string',1,'p_valores_string','new_syntax.py',303),
  ('valor_boolean -> BOOLEAN','valor_boolean',1,'p_valores_boolean','new_syntax.py',306),
  ('valor_variable -> ID','valor_variable',1,'p_valores_variable','new_syntax.py',309),
]
