
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADICION AND ASIGNACION ASIGNACION_ADICION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTI ASIGNACION_RESTA BOOL BOOLEAN BREAK CASE CHAN COMA CONST CONTINUE DECLARACION_ASIGNACION DECREMENTO DEFAULT DEFER DIFERENTE DIVISION DOS_PUNTOS DOUBLE D_CORCHETE D_LLAVE D_PARENTESIS ELSE ELSEIF FALLTHROUGH FLOAT32 FLOAT64 FOR FUNC GO GOTO ID IDENTIFICADOR IF IGUAL IMPORT INCREMENTO INT INTEGER INTERFACE I_CORCHETE I_LLAVE I_PARENTESIS MAKE MAP MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PACKAGE PRINT PRINTF PRINTLN PUNTO PUNTO_COMA RANGE RESTA RETURN SELECT STRING STRINGTYPE STRUCT SWITCH TYPE VARbody : instruccioninstruccion : print I_PARENTESIS valores D_PARENTESISinstruccion : VAR ID type ASIGNACION valor\n                   | VAR ID ASIGNACION valor\n                   | VAR ID ASIGNACION instruccioninstruccion : ID asignacion valor\n          | ID asignacion instruccioninstruccion : ID operador_matematicoinstruccion : IF condicion I_LLAVE body D_LLAVEinstruccion : ELSE I_LLAVE body D_LLAVEinstruccion : ELSEIF condicion I_LLAVE body D_LLAVEinstruccion : FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVEinstruccion : FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : array_int\n    | array_double\n    | array_string\n    | array_booleaninstruccion : array_length_int\n    | array_length_double\n    | array_length_string\n    | array_length_booleaninstruccion : array_con_valores_int\n    | array_con_valores_double\n    | array_con_valores_string\n    | array_con_valores_booleaninstruccion : array_length_con_valores_int\n    | array_length_con_valores_double\n    | array_length_con_valores_string\n    | array_length_con_valores_booleanarray_int : I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVEarray_double : I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVEarray_string : I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVEarray_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVEarray_length_int : I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVEarray_length_double : I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVEarray_length_string : I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVEarray_length_boolean : I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVEarray_con_valores_int : I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVEarray_con_valores_double : I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVEarray_con_valores_string : I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVEarray_con_valores_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVEarray_length_con_valores_int : I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVEarray_length_con_valores_double : I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVEarray_length_con_valores_string : I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVEarray_length_con_valores_boolean : I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVEinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVEinstruccion : MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESISinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVEinstruccion : TYPE ID STRUCT I_LLAVE atributos D_LLAVEatributos : atributo\n                | atributo atributosatributo : ID typeinstruccion : init_structinit_struct : VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE\n                    | ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVEclave_valor : valor DOS_PUNTOS valorclaves_valores : clave_valor\n          | clave_valor COMA claves_valorescondicion : valor\n                | I_PARENTESIS valor D_PARENTESISiteracion_for : IDvalores : valor\n          | valor COMA valoresvalores_int : valor_int\n          | valor_int COMA valores_intvalores_double : valor_double\n          | valor_double COMA valores_doublevalores_string : valor_string\n          | valor_string COMA valores_stringvalores_boolean : valor_boolean\n          | valor_boolean COMA valores_booleanvalor : valor operacion_binaria valorprint : PRINTLN\n          | PRINTF\n          | PRINTtype : BOOL\n          | STRINGTYPE\n          | INTEGER\n          | FLOAT32\n          | FLOAT64operador_matematico : INCREMENTO\n          | DECREMENTOasignacion : ASIGNACION\n          | ASIGNACION_ADICION\n          | ASIGNACION_RESTA\n          | ASIGNACION_MULTI\n          | DECLARACION_ASIGNACION\n          | ASIGNACION_DIVISION\n          | ASIGNACION_MODULOoperacion_binaria : ADICION\n          | RESTA\n          | MULTIPLICACION\n          | DIVISION\n          | MODULOoperacion_binaria : MENOR_IGUAL\n          | IGUAL\n          | DIFERENTE\n          | MAYOR\n          | MAYOR_IGUAL\n          | MENORvalor : valor_int\n          | valor_double\n          | valor_string\n          | valor_boolean\n          | valor_variablevalor_int : INTvalor_double : DOUBLEvalor_string : STRINGvalor_boolean : BOOLEANvalor_variable : ID'
    
_lr_action_items = {'VAR':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[4,4,4,-88,-84,-85,-86,-87,-89,-90,4,4,4,4,-88,4,4,4,]),'ID':([0,4,6,8,9,29,34,35,36,38,39,40,41,42,43,44,49,60,73,74,75,76,77,78,83,84,85,86,87,88,89,90,91,92,93,94,95,98,99,100,101,111,112,113,116,122,135,144,165,166,168,169,171,189,211,212,214,215,],[5,35,59,59,62,68,59,71,79,82,-84,-85,-86,-87,-89,-90,59,5,79,-77,-78,-79,-80,-81,5,59,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,5,82,123,59,59,137,59,59,142,163,170,163,59,5,194,59,-53,5,5,59,59,]),'IF':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[6,6,6,-88,-84,-85,-86,-87,-89,-90,6,6,6,6,-88,6,6,6,]),'ELSE':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[7,7,7,-88,-84,-85,-86,-87,-89,-90,7,7,7,7,-88,7,7,7,]),'ELSEIF':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[8,8,8,-88,-84,-85,-86,-87,-89,-90,8,8,8,8,-88,8,8,8,]),'FOR':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[9,9,9,-88,-84,-85,-86,-87,-89,-90,9,9,9,9,-88,9,9,9,]),'MAP':([0,9,36,38,39,40,41,42,43,44,60,67,73,83,98,99,168,211,212,],[26,26,26,-88,-84,-85,-86,-87,-89,-90,26,108,26,26,26,-88,26,26,26,]),'MAKE':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[28,28,28,-88,-84,-85,-86,-87,-89,-90,28,28,28,28,-88,28,28,28,]),'TYPE':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[29,29,29,-88,-84,-85,-86,-87,-89,-90,29,29,29,29,-88,29,29,29,]),'PRINTLN':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[31,31,31,-88,-84,-85,-86,-87,-89,-90,31,31,31,31,-88,31,31,31,]),'PRINTF':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[32,32,32,-88,-84,-85,-86,-87,-89,-90,32,32,32,32,-88,32,32,32,]),'PRINT':([0,9,36,38,39,40,41,42,43,44,60,73,83,98,99,168,211,212,],[33,33,33,-88,-84,-85,-86,-87,-89,-90,33,33,33,33,-88,33,33,33,]),'I_CORCHETE':([0,9,26,36,38,39,40,41,42,43,44,60,73,83,98,99,108,168,211,212,],[27,27,64,27,-88,-84,-85,-86,-87,-89,-90,27,27,27,27,-88,134,27,27,27,]),'$end':([1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,37,45,46,50,51,52,53,54,55,56,57,58,59,79,80,81,110,114,115,118,120,138,140,141,146,149,152,155,167,172,174,176,178,180,182,184,186,190,196,204,205,206,207,209,210,213,216,221,222,],[0,-1,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-54,-8,-82,-83,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-111,-6,-7,-2,-4,-5,-73,-10,-3,-9,-11,-31,-32,-33,-34,-56,-39,-40,-41,-42,-35,-36,-37,-38,-50,-47,-43,-44,-45,-46,-55,-12,-49,-48,-14,-13,]),'D_LLAVE':([2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,37,45,46,50,51,52,53,54,55,56,57,58,59,70,74,75,76,77,78,79,80,81,97,110,114,115,117,118,120,121,126,127,128,129,136,138,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,167,171,172,174,176,178,180,181,182,183,184,185,186,187,189,190,191,192,193,196,197,198,200,201,202,203,204,205,206,207,209,210,213,216,217,218,219,220,221,222,],[-1,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-54,-8,-82,-83,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-63,-77,-78,-79,-80,-81,-111,-6,-7,120,-2,-4,-5,140,-73,-10,141,146,149,152,155,-64,-3,167,-9,-11,-31,172,-65,-32,174,-67,-33,176,-69,-34,178,-71,180,182,184,186,190,-51,-56,196,-39,-40,-41,-42,-35,204,-36,205,-37,206,-38,207,-53,-50,-52,209,210,-47,213,-58,-66,-68,-70,-72,-43,-44,-45,-46,-55,-12,-49,-48,221,222,-59,-57,-14,-13,]),'I_PARENTESIS':([3,6,8,28,31,32,33,],[34,49,49,67,-74,-75,-76,]),'DECLARACION_ASIGNACION':([5,62,79,123,],[38,99,38,143,]),'ASIGNACION':([5,35,62,71,72,74,75,76,77,78,79,],[39,73,39,112,113,-77,-78,-79,-80,-81,39,]),'ASIGNACION_ADICION':([5,62,79,],[40,40,40,]),'ASIGNACION_RESTA':([5,62,79,],[41,41,41,]),'ASIGNACION_MULTI':([5,62,79,],[42,42,42,]),'ASIGNACION_DIVISION':([5,62,79,],[43,43,43,]),'ASIGNACION_MODULO':([5,62,79,],[44,44,44,]),'INCREMENTO':([5,62,79,170,],[45,45,45,45,]),'DECREMENTO':([5,62,79,170,],[46,46,46,46,]),'INT':([6,8,27,34,36,38,39,40,41,42,43,44,49,65,73,84,85,86,87,88,89,90,91,92,93,94,95,99,101,107,111,113,116,126,158,166,171,173,214,215,],[55,55,66,55,55,-88,-84,-85,-86,-87,-89,-90,55,103,55,55,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-88,55,130,55,55,55,55,55,55,55,55,55,55,]),'DOUBLE':([6,8,34,36,38,39,40,41,42,43,44,49,65,73,84,85,86,87,88,89,90,91,92,93,94,95,99,101,107,111,113,116,127,159,166,171,175,214,215,],[56,56,56,56,-88,-84,-85,-86,-87,-89,-90,56,104,56,56,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-88,56,131,56,56,56,56,56,56,56,56,56,56,]),'STRING':([6,8,34,36,38,39,40,41,42,43,44,49,65,73,84,85,86,87,88,89,90,91,92,93,94,95,99,101,107,111,113,116,128,160,166,171,177,214,215,],[57,57,57,57,-88,-84,-85,-86,-87,-89,-90,57,105,57,57,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-88,57,132,57,57,57,57,57,57,57,57,57,57,]),'BOOLEAN':([6,8,34,36,38,39,40,41,42,43,44,49,65,73,84,85,86,87,88,89,90,91,92,93,94,95,99,101,107,111,113,116,129,161,166,171,179,214,215,],[58,58,58,58,-88,-84,-85,-86,-87,-89,-90,58,106,58,58,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-88,58,133,58,58,58,58,58,58,58,58,58,58,]),'I_LLAVE':([7,45,46,47,48,50,51,52,53,54,55,56,57,58,59,61,74,75,76,77,78,82,103,104,105,106,109,118,119,130,131,132,133,137,142,145,194,195,],[60,-82,-83,83,-60,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,98,-77,-78,-79,-80,-81,116,126,127,128,129,135,-73,-61,158,159,160,161,166,168,171,211,212,]),'PUNTO_COMA':([10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,37,45,46,50,51,52,53,54,55,56,57,58,59,63,79,80,81,110,114,115,118,120,124,138,140,141,146,149,152,155,167,172,174,176,178,180,182,184,186,190,196,204,205,206,207,209,210,213,216,221,222,],[-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-54,-8,-82,-83,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,101,-111,-6,-7,-2,-4,-5,-73,-10,144,-3,-9,-11,-31,-32,-33,-34,-56,-39,-40,-41,-42,-35,-36,-37,-38,-50,-47,-43,-44,-45,-46,-55,-12,-49,-48,-14,-13,]),'D_CORCHETE':([27,66,74,75,76,77,78,102,162,],[65,107,-77,-78,-79,-80,-81,125,188,]),'BOOL':([35,64,125,134,163,188,],[74,74,74,74,74,74,]),'STRINGTYPE':([35,64,125,134,163,188,],[75,75,75,75,75,75,]),'INTEGER':([35,64,125,134,163,188,],[76,76,76,76,76,76,]),'FLOAT32':([35,64,125,134,163,188,],[77,77,77,77,77,77,]),'FLOAT64':([35,64,125,134,163,188,],[78,78,78,78,78,78,]),'ADICION':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[85,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,85,-111,85,85,85,85,85,85,85,85,]),'RESTA':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[86,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,86,-111,86,86,86,86,86,86,86,86,]),'MULTIPLICACION':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[87,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,87,-111,87,87,87,87,87,87,87,87,]),'DIVISION':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[88,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,88,-111,88,88,88,88,88,88,88,88,]),'MODULO':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[89,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,89,-111,89,89,89,89,89,89,89,89,]),'MENOR_IGUAL':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[90,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,90,-111,90,90,90,90,90,90,90,90,]),'IGUAL':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[91,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,91,-111,91,91,91,91,91,91,91,91,]),'DIFERENTE':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[92,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,92,-111,92,92,92,92,92,92,92,92,]),'MAYOR':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[93,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,93,-111,93,93,93,93,93,93,93,93,]),'MAYOR_IGUAL':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[94,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,94,-111,94,94,94,94,94,94,94,94,]),'MENOR':([48,50,51,52,53,54,55,56,57,58,59,70,79,80,96,114,118,124,138,199,220,],[95,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,95,-111,95,95,95,95,95,95,95,95,]),'COMA':([50,51,52,53,54,55,56,57,58,59,62,70,118,148,151,154,157,198,220,],[-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,100,111,-73,173,175,177,179,214,-57,]),'D_PARENTESIS':([50,51,52,53,54,55,56,57,58,59,69,70,74,75,76,77,78,96,118,136,208,],[-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,110,-63,-77,-78,-79,-80,-81,119,-73,-64,216,]),'DOS_PUNTOS':([50,51,52,53,54,55,56,57,58,59,118,199,],[-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-73,215,]),'STRUCT':([68,],[109,]),'RANGE':([99,143,],[122,169,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,60,83,98,168,211,212,],[1,97,117,121,193,217,218,]),'instruccion':([0,9,36,60,73,83,98,168,211,212,],[2,63,81,2,115,2,2,2,2,2,]),'print':([0,9,36,60,73,83,98,168,211,212,],[3,3,3,3,3,3,3,3,3,3,]),'array_int':([0,9,36,60,73,83,98,168,211,212,],[10,10,10,10,10,10,10,10,10,10,]),'array_double':([0,9,36,60,73,83,98,168,211,212,],[11,11,11,11,11,11,11,11,11,11,]),'array_string':([0,9,36,60,73,83,98,168,211,212,],[12,12,12,12,12,12,12,12,12,12,]),'array_boolean':([0,9,36,60,73,83,98,168,211,212,],[13,13,13,13,13,13,13,13,13,13,]),'array_length_int':([0,9,36,60,73,83,98,168,211,212,],[14,14,14,14,14,14,14,14,14,14,]),'array_length_double':([0,9,36,60,73,83,98,168,211,212,],[15,15,15,15,15,15,15,15,15,15,]),'array_length_string':([0,9,36,60,73,83,98,168,211,212,],[16,16,16,16,16,16,16,16,16,16,]),'array_length_boolean':([0,9,36,60,73,83,98,168,211,212,],[17,17,17,17,17,17,17,17,17,17,]),'array_con_valores_int':([0,9,36,60,73,83,98,168,211,212,],[18,18,18,18,18,18,18,18,18,18,]),'array_con_valores_double':([0,9,36,60,73,83,98,168,211,212,],[19,19,19,19,19,19,19,19,19,19,]),'array_con_valores_string':([0,9,36,60,73,83,98,168,211,212,],[20,20,20,20,20,20,20,20,20,20,]),'array_con_valores_boolean':([0,9,36,60,73,83,98,168,211,212,],[21,21,21,21,21,21,21,21,21,21,]),'array_length_con_valores_int':([0,9,36,60,73,83,98,168,211,212,],[22,22,22,22,22,22,22,22,22,22,]),'array_length_con_valores_double':([0,9,36,60,73,83,98,168,211,212,],[23,23,23,23,23,23,23,23,23,23,]),'array_length_con_valores_string':([0,9,36,60,73,83,98,168,211,212,],[24,24,24,24,24,24,24,24,24,24,]),'array_length_con_valores_boolean':([0,9,36,60,73,83,98,168,211,212,],[25,25,25,25,25,25,25,25,25,25,]),'init_struct':([0,9,36,60,73,83,98,168,211,212,],[30,30,30,30,30,30,30,30,30,30,]),'asignacion':([5,62,79,],[36,36,36,]),'operador_matematico':([5,62,79,170,],[37,37,37,195,]),'condicion':([6,8,],[47,61,]),'valor':([6,8,34,36,49,73,84,101,111,113,116,166,171,214,215,],[48,48,70,80,96,114,118,124,70,138,70,70,199,199,220,]),'valor_int':([6,8,34,36,49,73,84,101,111,113,116,126,158,166,171,173,214,215,],[50,50,50,50,50,50,50,50,50,50,50,148,148,50,50,148,50,50,]),'valor_double':([6,8,34,36,49,73,84,101,111,113,116,127,159,166,171,175,214,215,],[51,51,51,51,51,51,51,51,51,51,51,151,151,51,51,151,51,51,]),'valor_string':([6,8,34,36,49,73,84,101,111,113,116,128,160,166,171,177,214,215,],[52,52,52,52,52,52,52,52,52,52,52,154,154,52,52,154,52,52,]),'valor_boolean':([6,8,34,36,49,73,84,101,111,113,116,129,161,166,171,179,214,215,],[53,53,53,53,53,53,53,53,53,53,53,157,157,53,53,157,53,53,]),'valor_variable':([6,8,34,36,49,73,84,101,111,113,116,166,171,214,215,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'valores':([34,111,116,166,],[69,136,139,192,]),'type':([35,64,125,134,163,188,],[72,102,145,162,189,208,]),'operacion_binaria':([48,70,80,96,114,118,124,138,199,220,],[84,84,84,84,84,84,84,84,84,84,]),'valores_int':([126,158,173,],[147,181,200,]),'valores_double':([127,159,175,],[150,183,201,]),'valores_string':([128,160,177,],[153,185,202,]),'valores_boolean':([129,161,179,],[156,187,203,]),'atributos':([135,165,],[164,191,]),'atributo':([135,165,],[165,165,]),'claves_valores':([171,214,],[197,219,]),'clave_valor':([171,214,],[198,198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> instruccion','body',1,'p_body','sintactico.py',18),
  ('instruccion -> print I_PARENTESIS valores D_PARENTESIS','instruccion',4,'p_impresion','sintactico.py',21),
  ('instruccion -> VAR ID type ASIGNACION valor','instruccion',5,'p_declaracion','sintactico.py',24),
  ('instruccion -> VAR ID ASIGNACION valor','instruccion',4,'p_declaracion','sintactico.py',25),
  ('instruccion -> VAR ID ASIGNACION instruccion','instruccion',4,'p_declaracion','sintactico.py',26),
  ('instruccion -> ID asignacion valor','instruccion',3,'p_asignacion','sintactico.py',29),
  ('instruccion -> ID asignacion instruccion','instruccion',3,'p_asignacion','sintactico.py',30),
  ('instruccion -> ID operador_matematico','instruccion',2,'p_incremento_decremento','sintactico.py',33),
  ('instruccion -> IF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_condicion','sintactico.py',38),
  ('instruccion -> ELSE I_LLAVE body D_LLAVE','instruccion',4,'p_else_condicion','sintactico.py',41),
  ('instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_else_condicion','sintactico.py',44),
  ('instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',8,'p_for_each','sintactico.py',47),
  ('instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE','instruccion',10,'p_for_condicion','sintactico.py',50),
  ('instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',10,'p_for_map','sintactico.py',53),
  ('instruccion -> array_int','instruccion',1,'p_array','sintactico.py',58),
  ('instruccion -> array_double','instruccion',1,'p_array','sintactico.py',59),
  ('instruccion -> array_string','instruccion',1,'p_array','sintactico.py',60),
  ('instruccion -> array_boolean','instruccion',1,'p_array','sintactico.py',61),
  ('instruccion -> array_length_int','instruccion',1,'p_array_length','sintactico.py',64),
  ('instruccion -> array_length_double','instruccion',1,'p_array_length','sintactico.py',65),
  ('instruccion -> array_length_string','instruccion',1,'p_array_length','sintactico.py',66),
  ('instruccion -> array_length_boolean','instruccion',1,'p_array_length','sintactico.py',67),
  ('instruccion -> array_con_valores_int','instruccion',1,'p_array_con_valores','sintactico.py',70),
  ('instruccion -> array_con_valores_double','instruccion',1,'p_array_con_valores','sintactico.py',71),
  ('instruccion -> array_con_valores_string','instruccion',1,'p_array_con_valores','sintactico.py',72),
  ('instruccion -> array_con_valores_boolean','instruccion',1,'p_array_con_valores','sintactico.py',73),
  ('instruccion -> array_length_con_valores_int','instruccion',1,'p_array_length_con_valores','sintactico.py',76),
  ('instruccion -> array_length_con_valores_double','instruccion',1,'p_array_length_con_valores','sintactico.py',77),
  ('instruccion -> array_length_con_valores_string','instruccion',1,'p_array_length_con_valores','sintactico.py',78),
  ('instruccion -> array_length_con_valores_boolean','instruccion',1,'p_array_length_con_valores','sintactico.py',79),
  ('array_int -> I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE','array_int',5,'p_array_int','sintactico.py',83),
  ('array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE','array_double',5,'p_array_double','sintactico.py',86),
  ('array_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE','array_string',5,'p_array_string','sintactico.py',89),
  ('array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE','array_boolean',5,'p_array_boolean','sintactico.py',92),
  ('array_length_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE','array_length_int',6,'p_array_length_int','sintactico.py',95),
  ('array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE','array_length_double',6,'p_array_length_double','sintactico.py',98),
  ('array_length_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE','array_length_string',6,'p_array_length_string','sintactico.py',101),
  ('array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE','array_length_boolean',6,'p_array_length_boolean','sintactico.py',104),
  ('array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE','array_con_valores_int',6,'p_array_con_valores_int','sintactico.py',107),
  ('array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE','array_con_valores_double',6,'p_array_con_valores_double','sintactico.py',110),
  ('array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE','array_con_valores_string',6,'p_array_con_valores_string','sintactico.py',113),
  ('array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_con_valores_boolean',6,'p_array_con_valores_boolean','sintactico.py',116),
  ('array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE','array_length_con_valores_int',7,'p_array_length_con_valores_int','sintactico.py',119),
  ('array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE','array_length_con_valores_double',7,'p_array_length_con_valores_double','sintactico.py',122),
  ('array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE','array_length_con_valores_string',7,'p_array_length_con_valores_string','sintactico.py',125),
  ('array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_length_con_valores_boolean',7,'p_array_length_con_valores_boolean','sintactico.py',128),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE','instruccion',7,'p_map','sintactico.py',133),
  ('instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS','instruccion',8,'p_map_make','sintactico.py',136),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE','instruccion',8,'p_map_valores','sintactico.py',139),
  ('instruccion -> TYPE ID STRUCT I_LLAVE atributos D_LLAVE','instruccion',6,'p_struct','sintactico.py',142),
  ('atributos -> atributo','atributos',1,'p_atributos','sintactico.py',145),
  ('atributos -> atributo atributos','atributos',2,'p_atributos','sintactico.py',146),
  ('atributo -> ID type','atributo',2,'p_atributo','sintactico.py',149),
  ('instruccion -> init_struct','instruccion',1,'p_declaracion_struct','sintactico.py',152),
  ('init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',8,'p_init_struct','sintactico.py',155),
  ('init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',6,'p_init_struct','sintactico.py',156),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','sintactico.py',159),
  ('claves_valores -> clave_valor','claves_valores',1,'p_multiple_clave_valor','sintactico.py',162),
  ('claves_valores -> clave_valor COMA claves_valores','claves_valores',3,'p_multiple_clave_valor','sintactico.py',163),
  ('condicion -> valor','condicion',1,'p_condicion','sintactico.py',166),
  ('condicion -> I_PARENTESIS valor D_PARENTESIS','condicion',3,'p_condicion','sintactico.py',167),
  ('iteracion_for -> ID','iteracion_for',1,'p_iteracion_for','sintactico.py',170),
  ('valores -> valor','valores',1,'p_multiples_valores','sintactico.py',180),
  ('valores -> valor COMA valores','valores',3,'p_multiples_valores','sintactico.py',181),
  ('valores_int -> valor_int','valores_int',1,'p_multiples_valores_int','sintactico.py',184),
  ('valores_int -> valor_int COMA valores_int','valores_int',3,'p_multiples_valores_int','sintactico.py',185),
  ('valores_double -> valor_double','valores_double',1,'p_multiples_valores_double','sintactico.py',188),
  ('valores_double -> valor_double COMA valores_double','valores_double',3,'p_multiples_valores_double','sintactico.py',189),
  ('valores_string -> valor_string','valores_string',1,'p_multiples_valores_string','sintactico.py',192),
  ('valores_string -> valor_string COMA valores_string','valores_string',3,'p_multiples_valores_string','sintactico.py',193),
  ('valores_boolean -> valor_boolean','valores_boolean',1,'p_multiples_valores_boolean','sintactico.py',196),
  ('valores_boolean -> valor_boolean COMA valores_boolean','valores_boolean',3,'p_multiples_valores_boolean','sintactico.py',197),
  ('valor -> valor operacion_binaria valor','valor',3,'p_operacion_mat','sintactico.py',200),
  ('print -> PRINTLN','print',1,'p_print_options','sintactico.py',203),
  ('print -> PRINTF','print',1,'p_print_options','sintactico.py',204),
  ('print -> PRINT','print',1,'p_print_options','sintactico.py',205),
  ('type -> BOOL','type',1,'p_tipo','sintactico.py',208),
  ('type -> STRINGTYPE','type',1,'p_tipo','sintactico.py',209),
  ('type -> INTEGER','type',1,'p_tipo','sintactico.py',210),
  ('type -> FLOAT32','type',1,'p_tipo','sintactico.py',211),
  ('type -> FLOAT64','type',1,'p_tipo','sintactico.py',212),
  ('operador_matematico -> INCREMENTO','operador_matematico',1,'p_operacion_mat_var','sintactico.py',215),
  ('operador_matematico -> DECREMENTO','operador_matematico',1,'p_operacion_mat_var','sintactico.py',216),
  ('asignacion -> ASIGNACION','asignacion',1,'p_operadores_asignacion','sintactico.py',219),
  ('asignacion -> ASIGNACION_ADICION','asignacion',1,'p_operadores_asignacion','sintactico.py',220),
  ('asignacion -> ASIGNACION_RESTA','asignacion',1,'p_operadores_asignacion','sintactico.py',221),
  ('asignacion -> ASIGNACION_MULTI','asignacion',1,'p_operadores_asignacion','sintactico.py',222),
  ('asignacion -> DECLARACION_ASIGNACION','asignacion',1,'p_operadores_asignacion','sintactico.py',223),
  ('asignacion -> ASIGNACION_DIVISION','asignacion',1,'p_operadores_asignacion','sintactico.py',224),
  ('asignacion -> ASIGNACION_MODULO','asignacion',1,'p_operadores_asignacion','sintactico.py',225),
  ('operacion_binaria -> ADICION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',228),
  ('operacion_binaria -> RESTA','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',229),
  ('operacion_binaria -> MULTIPLICACION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',230),
  ('operacion_binaria -> DIVISION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',231),
  ('operacion_binaria -> MODULO','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',232),
  ('operacion_binaria -> MENOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',235),
  ('operacion_binaria -> IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',236),
  ('operacion_binaria -> DIFERENTE','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',237),
  ('operacion_binaria -> MAYOR','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',238),
  ('operacion_binaria -> MAYOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',239),
  ('operacion_binaria -> MENOR','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',240),
  ('valor -> valor_int','valor',1,'p_valores','sintactico.py',243),
  ('valor -> valor_double','valor',1,'p_valores','sintactico.py',244),
  ('valor -> valor_string','valor',1,'p_valores','sintactico.py',245),
  ('valor -> valor_boolean','valor',1,'p_valores','sintactico.py',246),
  ('valor -> valor_variable','valor',1,'p_valores','sintactico.py',247),
  ('valor_int -> INT','valor_int',1,'p_valores_int','sintactico.py',250),
  ('valor_double -> DOUBLE','valor_double',1,'p_valores_double','sintactico.py',253),
  ('valor_string -> STRING','valor_string',1,'p_valores_string','sintactico.py',256),
  ('valor_boolean -> BOOLEAN','valor_boolean',1,'p_valores_boolean','sintactico.py',259),
  ('valor_variable -> ID','valor_variable',1,'p_valores_variable','sintactico.py',262),
]
