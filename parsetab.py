
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADICION AND ASIGNACION ASIGNACION_ADICION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTI ASIGNACION_RESTA BOOL BOOLEAN BREAK CASE CHAN COMA CONST CONTINUE DECLARACION_ASIGNACION DECREMENTO DEFAULT DEFER DIFERENTE DIVISION DOS_PUNTOS DOUBLE D_CORCHETE D_LLAVE D_PARENTESIS ELSE ELSEIF FALLTHROUGH FLOAT32 FLOAT64 FOR FUNC GO GOTO ID IDENTIFICADOR IF IGUAL IMPORT INCREMENTO INT INTEGER INTERFACE I_CORCHETE I_LLAVE I_PARENTESIS MAKE MAP MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PACKAGE PRINT PRINTF PRINTLN PUNTO PUNTO_COMA RANGE RESTA RETURN SELECT STRING STRINGTYPE STRUCT SWITCH TYPE VARgo : instruccion\n            | funcion go\n            | funcionbody : instruccion\n            | I_LLAVE instruct_expression D_LLAVE\n            | I_LLAVE varias_instrucciones \n            | I_LLAVE varias_instrucciones instruct_expression D_LLAVE\n            | I_LLAVE D_LLAVEvarias_instrucciones : instruccion\n                            | instruccion varias_instruccionesinstruct_expression : RETURN valorinstruccion : print I_PARENTESIS valores D_PARENTESISinstruccion : VAR ID type ASIGNACION valor\n                   | VAR ID ASIGNACION valor\n                   | VAR ID ASIGNACION instruccioninstruccion : ID asignacion valor\n          | ID asignacion instruccioninstruccion : ID operador_matematicofuncion : FUNC ID cuerpo_funcuerpo_fun : parametrosMetodo bodyparametrosMetodo : I_PARENTESIS parametros D_PARENTESIS typeparametros : atributo\n                  | atributo COMA parametros\n                  | instruccion : IF condicion I_LLAVE body D_LLAVEinstruccion : ELSE I_LLAVE body D_LLAVEinstruccion : ELSEIF condicion I_LLAVE body D_LLAVEinstruccion : FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVEinstruccion : FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : array_int\n    | array_double\n    | array_string\n    | array_booleaninstruccion : array_length_int\n    | array_length_double\n    | array_length_string\n    | array_length_booleaninstruccion : array_con_valores_int\n    | array_con_valores_double\n    | array_con_valores_string\n    | array_con_valores_booleaninstruccion : array_length_con_valores_int\n    | array_length_con_valores_double\n    | array_length_con_valores_string\n    | array_length_con_valores_booleanarray_int : I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVEarray_double : I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVEarray_string : I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVEarray_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVEarray_length_int : I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVEarray_length_double : I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVEarray_length_string : I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVEarray_length_boolean : I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVEarray_con_valores_int : I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVEarray_con_valores_double : I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVEarray_con_valores_string : I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVEarray_con_valores_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVEarray_length_con_valores_int : I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVEarray_length_con_valores_double : I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVEarray_length_con_valores_string : I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVEarray_length_con_valores_boolean : I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVEinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVEinstruccion : MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESISinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVEinstruccion : TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVEatributos_struct : atributo\n                | atributo atributos_structatributo : ID typeinstruccion : init_structinit_struct : VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE\n                    | ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVEclave_valor : valor DOS_PUNTOS valorclaves_valores : clave_valor\n          | clave_valor COMA claves_valorescondicion : valor\n                | I_PARENTESIS valor D_PARENTESISiteracion_for : IDvalores : valor\n          | valor COMA valoresvalores_int : valor_int\n          | valor_int COMA valores_intvalores_double : valor_double\n          | valor_double COMA valores_doublevalores_string : valor_string\n          | valor_string COMA valores_stringvalores_boolean : valor_boolean\n          | valor_boolean COMA valores_booleanvalor : valor operacion_binaria valorprint : PRINTLN\n          | PRINTF\n          | PRINTtype : BOOL\n          | STRINGTYPE\n          | INTEGER\n          | FLOAT32\n          | FLOAT64operador_matematico : INCREMENTO\n          | DECREMENTOasignacion : ASIGNACION\n          | ASIGNACION_ADICION\n          | ASIGNACION_RESTA\n          | ASIGNACION_MULTI\n          | DECLARACION_ASIGNACION\n          | ASIGNACION_DIVISION\n          | ASIGNACION_MODULOoperacion_binaria : ADICION\n          | RESTA\n          | MULTIPLICACION\n          | DIVISION\n          | MODULOoperacion_binaria : MENOR_IGUAL\n          | IGUAL\n          | DIFERENTE\n          | MAYOR\n          | MAYOR_IGUAL\n          | MENORvalor : valor_int\n          | valor_double\n          | valor_string\n          | valor_boolean\n          | valor_variablevalor_int : INTvalor_double : DOUBLEvalor_string : STRINGvalor_boolean : BOOLEANvalor_variable : ID'
    
_lr_action_items = {'VAR':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[5,5,5,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,5,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,5,5,-93,-94,-95,-96,-97,-127,-16,-17,5,5,-4,5,-104,-19,5,-12,-14,-15,-89,-8,-6,5,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,5,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,5,5,-65,-64,-30,-29,]),'ID':([0,3,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,88,89,90,91,92,93,94,95,96,97,98,99,101,103,104,105,106,107,116,117,118,119,120,121,122,123,124,125,127,130,131,132,133,134,136,149,150,156,158,159,162,163,166,168,171,174,177,186,188,189,190,191,192,193,194,196,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,240,241,242,247,248,],[6,6,38,62,62,65,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,71,-70,72,62,75,83,-18,86,-100,-101,-102,-103,-105,-106,-98,-99,62,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,6,83,-93,-94,-95,-96,-97,-127,-16,-17,6,62,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,6,-4,6,86,137,62,-19,6,153,-12,62,155,62,-14,-15,62,-89,-8,-6,62,6,-26,164,153,-20,-13,-25,-5,-10,-27,195,-47,-48,-49,-50,153,153,-69,62,-72,-7,6,220,62,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,6,6,-65,62,62,-64,-30,-29,]),'IF':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[7,7,7,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,7,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,7,7,-93,-94,-95,-96,-97,-127,-16,-17,7,7,-4,7,-104,-19,7,-12,-14,-15,-89,-8,-6,7,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,7,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,7,7,-65,-64,-30,-29,]),'ELSE':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[8,8,8,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,8,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,8,8,-93,-94,-95,-96,-97,-127,-16,-17,8,8,-4,8,-104,-19,8,-12,-14,-15,-89,-8,-6,8,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,8,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,8,8,-65,-64,-30,-29,]),'ELSEIF':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[9,9,9,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,9,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,9,9,-93,-94,-95,-96,-97,-127,-16,-17,9,9,-4,9,-104,-19,9,-12,-14,-15,-89,-8,-6,9,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,9,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,9,9,-65,-64,-30,-29,]),'FOR':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[10,10,10,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,10,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,10,10,-93,-94,-95,-96,-97,-127,-16,-17,10,10,-4,10,-104,-19,10,-12,-14,-15,-89,-8,-6,10,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,10,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,10,10,-65,-64,-30,-29,]),'MAP':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,70,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[27,27,27,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,27,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,27,114,27,-93,-94,-95,-96,-97,-127,-16,-17,27,27,-4,27,-104,-19,27,-12,-14,-15,-89,-8,-6,27,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,27,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,27,27,-65,-64,-30,-29,]),'MAKE':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[29,29,29,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,29,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,29,29,-93,-94,-95,-96,-97,-127,-16,-17,29,29,-4,29,-104,-19,29,-12,-14,-15,-89,-8,-6,29,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,29,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,29,29,-65,-64,-30,-29,]),'TYPE':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[30,30,30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,30,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,30,30,-93,-94,-95,-96,-97,-127,-16,-17,30,30,-4,30,-104,-19,30,-12,-14,-15,-89,-8,-6,30,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,30,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,30,30,-65,-64,-30,-29,]),'FUNC':([0,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,40,48,49,53,54,55,56,57,58,59,60,61,62,83,84,85,103,116,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,197,199,201,203,205,207,209,211,214,222,230,231,232,233,235,236,239,242,247,248,],[32,32,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,-18,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-127,-16,-17,-4,-19,-12,-14,-15,-89,-8,-6,-9,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,-55,-56,-57,-58,-51,-52,-53,-54,-66,-63,-59,-60,-61,-62,-71,-28,-65,-64,-30,-29,]),'PRINTLN':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[33,33,33,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,33,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,33,33,-93,-94,-95,-96,-97,-127,-16,-17,33,33,-4,33,-104,-19,33,-12,-14,-15,-89,-8,-6,33,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,33,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,33,33,-65,-64,-30,-29,]),'PRINTF':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[34,34,34,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,34,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,34,34,-93,-94,-95,-96,-97,-127,-16,-17,34,34,-4,34,-104,-19,34,-12,-14,-15,-89,-8,-6,34,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,34,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,34,34,-65,-64,-30,-29,]),'PRINT':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[35,35,35,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,35,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,35,35,-93,-94,-95,-96,-97,-127,-16,-17,35,35,-4,35,-104,-19,35,-12,-14,-15,-89,-8,-6,35,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,35,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,35,35,-65,-64,-30,-29,]),'I_CORCHETE':([0,3,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,31,39,40,41,42,43,44,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63,77,78,79,80,81,82,83,84,85,87,101,103,104,105,114,116,117,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,193,197,199,201,203,205,207,209,211,214,216,222,230,231,232,233,235,236,237,238,239,242,247,248,],[28,28,28,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,67,-70,28,-18,-104,-100,-101,-102,-103,-105,-106,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,28,28,-93,-94,-95,-96,-97,-127,-16,-17,28,28,-4,28,-104,148,-19,28,-12,-14,-15,-89,-8,-6,28,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,28,-55,-56,-57,-58,-51,-52,-53,-54,-66,-21,-63,-59,-60,-61,-62,-71,-28,28,28,-65,-64,-30,-29,]),'$end':([1,2,3,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,36,40,48,49,53,54,55,56,57,58,59,60,61,62,83,84,85,103,116,119,123,124,127,130,131,133,134,150,156,158,159,162,163,168,171,174,177,191,192,197,199,201,203,205,207,209,211,214,222,230,231,232,233,235,236,239,242,247,248,],[0,-1,-3,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,-2,-18,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-127,-16,-17,-4,-19,-12,-14,-15,-89,-8,-6,-9,-26,-20,-13,-25,-5,-10,-27,-47,-48,-49,-50,-72,-7,-55,-56,-57,-58,-51,-52,-53,-54,-66,-63,-59,-60,-61,-62,-71,-28,-65,-64,-30,-29,]),'I_PARENTESIS':([4,7,9,29,33,34,35,72,],[37,52,52,70,-90,-91,-92,118,]),'DECLARACION_ASIGNACION':([6,65,83,137,],[41,105,41,165,]),'ASIGNACION':([6,38,65,75,76,78,79,80,81,82,83,],[42,77,42,121,122,-93,-94,-95,-96,-97,42,]),'ASIGNACION_ADICION':([6,65,83,],[43,43,43,]),'ASIGNACION_RESTA':([6,65,83,],[44,44,44,]),'ASIGNACION_MULTI':([6,65,83,],[45,45,45,]),'ASIGNACION_DIVISION':([6,65,83,],[46,46,46,]),'ASIGNACION_MODULO':([6,65,83,],[47,47,47,]),'INCREMENTO':([6,65,83,195,],[48,48,48,48,]),'DECREMENTO':([6,65,83,195,],[49,49,49,49,]),'INT':([7,9,28,37,39,41,42,43,44,45,46,47,52,68,77,88,89,90,91,92,93,94,95,96,97,98,99,105,107,113,120,122,125,132,140,180,190,196,198,240,241,],[58,58,69,58,58,-104,-100,-101,-102,-103,-105,-106,58,109,58,58,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-104,58,144,58,58,58,58,58,58,58,58,58,58,58,]),'DOUBLE':([7,9,37,39,41,42,43,44,45,46,47,52,68,77,88,89,90,91,92,93,94,95,96,97,98,99,105,107,113,120,122,125,132,141,181,190,196,200,240,241,],[59,59,59,59,-104,-100,-101,-102,-103,-105,-106,59,110,59,59,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-104,59,145,59,59,59,59,59,59,59,59,59,59,59,]),'STRING':([7,9,37,39,41,42,43,44,45,46,47,52,68,77,88,89,90,91,92,93,94,95,96,97,98,99,105,107,113,120,122,125,132,142,182,190,196,202,240,241,],[60,60,60,60,-104,-100,-101,-102,-103,-105,-106,60,111,60,60,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-104,60,146,60,60,60,60,60,60,60,60,60,60,60,]),'BOOLEAN':([7,9,37,39,41,42,43,44,45,46,47,52,68,77,88,89,90,91,92,93,94,95,96,97,98,99,105,107,113,120,122,125,132,143,183,190,196,204,240,241,],[61,61,61,61,-104,-100,-101,-102,-103,-105,-106,61,112,61,61,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-104,61,147,61,61,61,61,61,61,61,61,61,61,61,]),'I_LLAVE':([8,48,49,50,51,53,54,55,56,57,58,59,60,61,62,63,64,78,79,80,81,82,86,87,104,109,110,111,112,115,117,127,128,144,145,146,147,155,164,167,193,216,220,221,237,238,],[63,-98,-99,87,-76,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,101,104,-93,-94,-95,-96,-97,125,101,101,140,141,142,143,149,101,-89,-77,180,181,182,183,190,193,196,101,-21,237,238,101,101,]),'PUNTO_COMA':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,40,48,49,53,54,55,56,57,58,59,60,61,62,66,83,84,85,119,123,124,127,134,138,156,158,163,168,171,174,177,191,197,199,201,203,205,207,209,211,214,222,230,231,232,233,235,236,239,242,247,248,],[-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,-18,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,107,-127,-16,-17,-12,-14,-15,-89,-26,166,-13,-25,-27,-47,-48,-49,-50,-72,-55,-56,-57,-58,-51,-52,-53,-54,-66,-63,-59,-60,-61,-62,-71,-28,-65,-64,-30,-29,]),'D_LLAVE':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,40,48,49,53,54,55,56,57,58,59,60,61,62,74,78,79,80,81,82,83,84,85,101,102,103,119,123,124,126,127,129,130,131,133,134,135,140,141,142,143,154,156,157,158,159,160,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,189,191,192,196,197,199,201,203,205,206,207,208,209,210,211,212,214,215,218,219,222,223,224,226,227,228,229,230,231,232,233,235,236,239,242,243,244,245,246,247,248,],[-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,-18,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-79,-93,-94,-95,-96,-97,-127,-16,-17,130,134,-4,-12,-14,-15,158,-89,159,-8,-6,-9,-26,163,168,171,174,177,-80,-13,191,-25,-5,192,-11,-10,-27,-47,197,-81,-48,199,-83,-49,201,-85,-50,203,-87,205,207,209,211,214,-67,-69,-72,-7,222,-55,-56,-57,-58,-51,230,-52,231,-53,232,-54,233,-66,-68,235,236,-63,239,-74,-82,-84,-86,-88,-59,-60,-61,-62,-71,-28,-65,-64,247,248,-75,-73,-30,-29,]),'RETURN':([11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,31,40,48,49,53,54,55,56,57,58,59,60,61,62,83,84,85,101,119,123,124,127,131,133,134,156,158,162,163,168,171,174,177,191,197,199,201,203,205,207,209,211,214,222,230,231,232,233,235,236,239,242,247,248,],[-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-70,-18,-98,-99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-127,-16,-17,132,-12,-14,-15,-89,132,-9,-26,-13,-25,-10,-27,-47,-48,-49,-50,-72,-55,-56,-57,-58,-51,-52,-53,-54,-66,-63,-59,-60,-61,-62,-71,-28,-65,-64,-30,-29,]),'D_CORCHETE':([28,69,78,79,80,81,82,108,184,],[68,113,-93,-94,-95,-96,-97,139,213,]),'BOOL':([38,67,139,148,153,187,213,],[78,78,78,78,78,78,78,]),'STRINGTYPE':([38,67,139,148,153,187,213,],[79,79,79,79,79,79,79,]),'INTEGER':([38,67,139,148,153,187,213,],[80,80,80,80,80,80,80,]),'FLOAT32':([38,67,139,148,153,187,213,],[81,81,81,81,81,81,81,]),'FLOAT64':([38,67,139,148,153,187,213,],[82,82,82,82,82,82,82,]),'ADICION':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[89,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,89,-127,89,89,89,89,89,89,89,89,89,]),'RESTA':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[90,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,90,-127,90,90,90,90,90,90,90,90,90,]),'MULTIPLICACION':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[91,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,91,-127,91,91,91,91,91,91,91,91,91,]),'DIVISION':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[92,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,92,-127,92,92,92,92,92,92,92,92,92,]),'MODULO':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[93,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,93,-127,93,93,93,93,93,93,93,93,93,]),'MENOR_IGUAL':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[94,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,94,-127,94,94,94,94,94,94,94,94,94,]),'IGUAL':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[95,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,95,-127,95,95,95,95,95,95,95,95,95,]),'DIFERENTE':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[96,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,96,-127,96,96,96,96,96,96,96,96,96,]),'MAYOR':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[97,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,97,-127,97,97,97,97,97,97,97,97,97,]),'MAYOR_IGUAL':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[98,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,98,-127,98,98,98,98,98,98,98,98,98,]),'MENOR':([51,53,54,55,56,57,58,59,60,61,62,74,83,84,100,123,127,138,156,161,225,246,],[99,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,99,-127,99,99,99,99,99,99,99,99,99,]),'COMA':([53,54,55,56,57,58,59,60,61,62,65,74,78,79,80,81,82,127,152,170,173,176,179,189,224,246,],[-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,106,120,-93,-94,-95,-96,-97,-89,188,198,200,202,204,-69,240,-73,]),'D_PARENTESIS':([53,54,55,56,57,58,59,60,61,62,73,74,78,79,80,81,82,100,118,127,151,152,154,188,189,217,234,],[-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,119,-79,-93,-94,-95,-96,-97,128,-24,-89,187,-22,-80,-24,-69,-23,242,]),'DOS_PUNTOS':([53,54,55,56,57,58,59,60,61,62,127,225,],[-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-89,241,]),'STRUCT':([71,],[115,]),'RANGE':([105,165,],[136,194,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'go':([0,3,],[1,36,]),'instruccion':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[2,2,66,85,103,124,103,133,103,103,133,103,103,103,]),'funcion':([0,3,],[3,3,]),'print':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'array_int':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'array_double':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'array_string':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'array_boolean':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'array_length_int':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'array_length_double':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'array_length_string':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'array_length_boolean':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array_con_valores_int':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'array_con_valores_double':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'array_con_valores_string':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'array_con_valores_boolean':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'array_length_con_valores_int':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'array_length_con_valores_double':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'array_length_con_valores_string':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'array_length_con_valores_boolean':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'init_struct':([0,3,10,39,63,77,87,101,104,117,133,193,237,238,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'asignacion':([6,65,83,],[39,39,39,]),'operador_matematico':([6,65,83,195,],[40,40,40,221,]),'condicion':([7,9,],[50,64,]),'valor':([7,9,37,39,52,77,88,107,120,122,125,132,190,196,240,241,],[51,51,74,84,100,123,127,138,74,156,74,161,74,225,225,246,]),'valor_int':([7,9,37,39,52,77,88,107,120,122,125,132,140,180,190,196,198,240,241,],[53,53,53,53,53,53,53,53,53,53,53,53,170,170,53,53,170,53,53,]),'valor_double':([7,9,37,39,52,77,88,107,120,122,125,132,141,181,190,196,200,240,241,],[54,54,54,54,54,54,54,54,54,54,54,54,173,173,54,54,173,54,54,]),'valor_string':([7,9,37,39,52,77,88,107,120,122,125,132,142,182,190,196,202,240,241,],[55,55,55,55,55,55,55,55,55,55,55,55,176,176,55,55,176,55,55,]),'valor_boolean':([7,9,37,39,52,77,88,107,120,122,125,132,143,183,190,196,204,240,241,],[56,56,56,56,56,56,56,56,56,56,56,56,179,179,56,56,179,56,56,]),'valor_variable':([7,9,37,39,52,77,88,107,120,122,125,132,190,196,240,241,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'valores':([37,120,125,190,],[73,154,157,218,]),'type':([38,67,139,148,153,187,213,],[76,108,167,184,189,216,234,]),'operacion_binaria':([51,74,84,100,123,127,138,156,161,225,246,],[88,88,88,88,88,88,88,88,88,88,88,]),'body':([63,87,104,117,193,237,238,],[102,126,135,150,219,243,244,]),'cuerpo_fun':([72,],[116,]),'parametrosMetodo':([72,],[117,]),'instruct_expression':([101,131,],[129,160,]),'varias_instrucciones':([101,133,],[131,162,]),'parametros':([118,188,],[151,217,]),'atributo':([118,149,186,188,],[152,186,186,152,]),'valores_int':([140,180,198,],[169,206,226,]),'valores_double':([141,181,200,],[172,208,227,]),'valores_string':([142,182,202,],[175,210,228,]),'valores_boolean':([143,183,204,],[178,212,229,]),'atributos_struct':([149,186,],[185,215,]),'claves_valores':([196,240,],[223,245,]),'clave_valor':([196,240,],[224,224,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> go","S'",1,None,None,None),
  ('go -> instruccion','go',1,'p_go','sintactico.py',18),
  ('go -> funcion go','go',2,'p_go','sintactico.py',19),
  ('go -> funcion','go',1,'p_go','sintactico.py',20),
  ('body -> instruccion','body',1,'p_body','sintactico.py',23),
  ('body -> I_LLAVE instruct_expression D_LLAVE','body',3,'p_body','sintactico.py',24),
  ('body -> I_LLAVE varias_instrucciones','body',2,'p_body','sintactico.py',25),
  ('body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE','body',4,'p_body','sintactico.py',26),
  ('body -> I_LLAVE D_LLAVE','body',2,'p_body','sintactico.py',27),
  ('varias_instrucciones -> instruccion','varias_instrucciones',1,'p_varias_instrucciones','sintactico.py',30),
  ('varias_instrucciones -> instruccion varias_instrucciones','varias_instrucciones',2,'p_varias_instrucciones','sintactico.py',31),
  ('instruct_expression -> RETURN valor','instruct_expression',2,'p_expression_result','sintactico.py',34),
  ('instruccion -> print I_PARENTESIS valores D_PARENTESIS','instruccion',4,'p_impresion','sintactico.py',37),
  ('instruccion -> VAR ID type ASIGNACION valor','instruccion',5,'p_declaracion','sintactico.py',40),
  ('instruccion -> VAR ID ASIGNACION valor','instruccion',4,'p_declaracion','sintactico.py',41),
  ('instruccion -> VAR ID ASIGNACION instruccion','instruccion',4,'p_declaracion','sintactico.py',42),
  ('instruccion -> ID asignacion valor','instruccion',3,'p_asignacion','sintactico.py',45),
  ('instruccion -> ID asignacion instruccion','instruccion',3,'p_asignacion','sintactico.py',46),
  ('instruccion -> ID operador_matematico','instruccion',2,'p_incremento_decremento','sintactico.py',49),
  ('funcion -> FUNC ID cuerpo_fun','funcion',3,'p_funcion','sintactico.py',52),
  ('cuerpo_fun -> parametrosMetodo body','cuerpo_fun',2,'p_body_fm','sintactico.py',55),
  ('parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type','parametrosMetodo',4,'p_parametros_metodo','sintactico.py',58),
  ('parametros -> atributo','parametros',1,'p_parametros','sintactico.py',61),
  ('parametros -> atributo COMA parametros','parametros',3,'p_parametros','sintactico.py',62),
  ('parametros -> <empty>','parametros',0,'p_parametros','sintactico.py',63),
  ('instruccion -> IF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_condicion','sintactico.py',68),
  ('instruccion -> ELSE I_LLAVE body D_LLAVE','instruccion',4,'p_else_condicion','sintactico.py',71),
  ('instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_else_condicion','sintactico.py',74),
  ('instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',8,'p_for_each','sintactico.py',77),
  ('instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE','instruccion',10,'p_for_condicion','sintactico.py',80),
  ('instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',10,'p_for_map','sintactico.py',83),
  ('instruccion -> array_int','instruccion',1,'p_array','sintactico.py',88),
  ('instruccion -> array_double','instruccion',1,'p_array','sintactico.py',89),
  ('instruccion -> array_string','instruccion',1,'p_array','sintactico.py',90),
  ('instruccion -> array_boolean','instruccion',1,'p_array','sintactico.py',91),
  ('instruccion -> array_length_int','instruccion',1,'p_array_length','sintactico.py',94),
  ('instruccion -> array_length_double','instruccion',1,'p_array_length','sintactico.py',95),
  ('instruccion -> array_length_string','instruccion',1,'p_array_length','sintactico.py',96),
  ('instruccion -> array_length_boolean','instruccion',1,'p_array_length','sintactico.py',97),
  ('instruccion -> array_con_valores_int','instruccion',1,'p_array_con_valores','sintactico.py',100),
  ('instruccion -> array_con_valores_double','instruccion',1,'p_array_con_valores','sintactico.py',101),
  ('instruccion -> array_con_valores_string','instruccion',1,'p_array_con_valores','sintactico.py',102),
  ('instruccion -> array_con_valores_boolean','instruccion',1,'p_array_con_valores','sintactico.py',103),
  ('instruccion -> array_length_con_valores_int','instruccion',1,'p_array_length_con_valores','sintactico.py',106),
  ('instruccion -> array_length_con_valores_double','instruccion',1,'p_array_length_con_valores','sintactico.py',107),
  ('instruccion -> array_length_con_valores_string','instruccion',1,'p_array_length_con_valores','sintactico.py',108),
  ('instruccion -> array_length_con_valores_boolean','instruccion',1,'p_array_length_con_valores','sintactico.py',109),
  ('array_int -> I_CORCHETE D_CORCHETE INT I_LLAVE D_LLAVE','array_int',5,'p_array_int','sintactico.py',113),
  ('array_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE D_LLAVE','array_double',5,'p_array_double','sintactico.py',116),
  ('array_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE D_LLAVE','array_string',5,'p_array_string','sintactico.py',119),
  ('array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE','array_boolean',5,'p_array_boolean','sintactico.py',122),
  ('array_length_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE D_LLAVE','array_length_int',6,'p_array_length_int','sintactico.py',125),
  ('array_length_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE D_LLAVE','array_length_double',6,'p_array_length_double','sintactico.py',128),
  ('array_length_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE D_LLAVE','array_length_string',6,'p_array_length_string','sintactico.py',131),
  ('array_length_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE D_LLAVE','array_length_boolean',6,'p_array_length_boolean','sintactico.py',134),
  ('array_con_valores_int -> I_CORCHETE D_CORCHETE INT I_LLAVE valores_int D_LLAVE','array_con_valores_int',6,'p_array_con_valores_int','sintactico.py',137),
  ('array_con_valores_double -> I_CORCHETE D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE','array_con_valores_double',6,'p_array_con_valores_double','sintactico.py',140),
  ('array_con_valores_string -> I_CORCHETE D_CORCHETE STRING I_LLAVE valores_string D_LLAVE','array_con_valores_string',6,'p_array_con_valores_string','sintactico.py',143),
  ('array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_con_valores_boolean',6,'p_array_con_valores_boolean','sintactico.py',146),
  ('array_length_con_valores_int -> I_CORCHETE INT D_CORCHETE INT I_LLAVE valores_int D_LLAVE','array_length_con_valores_int',7,'p_array_length_con_valores_int','sintactico.py',149),
  ('array_length_con_valores_double -> I_CORCHETE INT D_CORCHETE DOUBLE I_LLAVE valores_double D_LLAVE','array_length_con_valores_double',7,'p_array_length_con_valores_double','sintactico.py',152),
  ('array_length_con_valores_string -> I_CORCHETE INT D_CORCHETE STRING I_LLAVE valores_string D_LLAVE','array_length_con_valores_string',7,'p_array_length_con_valores_string','sintactico.py',155),
  ('array_length_con_valores_boolean -> I_CORCHETE INT D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_length_con_valores_boolean',7,'p_array_length_con_valores_boolean','sintactico.py',158),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE','instruccion',7,'p_map','sintactico.py',163),
  ('instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS','instruccion',8,'p_map_make','sintactico.py',166),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE','instruccion',8,'p_map_valores','sintactico.py',169),
  ('instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE','instruccion',6,'p_struct','sintactico.py',172),
  ('atributos_struct -> atributo','atributos_struct',1,'p_atributos_struct','sintactico.py',175),
  ('atributos_struct -> atributo atributos_struct','atributos_struct',2,'p_atributos_struct','sintactico.py',176),
  ('atributo -> ID type','atributo',2,'p_atributo','sintactico.py',179),
  ('instruccion -> init_struct','instruccion',1,'p_declaracion_struct','sintactico.py',182),
  ('init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',8,'p_init_struct','sintactico.py',185),
  ('init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',6,'p_init_struct','sintactico.py',186),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','sintactico.py',189),
  ('claves_valores -> clave_valor','claves_valores',1,'p_multiple_clave_valor','sintactico.py',192),
  ('claves_valores -> clave_valor COMA claves_valores','claves_valores',3,'p_multiple_clave_valor','sintactico.py',193),
  ('condicion -> valor','condicion',1,'p_condicion','sintactico.py',196),
  ('condicion -> I_PARENTESIS valor D_PARENTESIS','condicion',3,'p_condicion','sintactico.py',197),
  ('iteracion_for -> ID','iteracion_for',1,'p_iteracion_for','sintactico.py',200),
  ('valores -> valor','valores',1,'p_multiples_valores','sintactico.py',210),
  ('valores -> valor COMA valores','valores',3,'p_multiples_valores','sintactico.py',211),
  ('valores_int -> valor_int','valores_int',1,'p_multiples_valores_int','sintactico.py',214),
  ('valores_int -> valor_int COMA valores_int','valores_int',3,'p_multiples_valores_int','sintactico.py',215),
  ('valores_double -> valor_double','valores_double',1,'p_multiples_valores_double','sintactico.py',218),
  ('valores_double -> valor_double COMA valores_double','valores_double',3,'p_multiples_valores_double','sintactico.py',219),
  ('valores_string -> valor_string','valores_string',1,'p_multiples_valores_string','sintactico.py',222),
  ('valores_string -> valor_string COMA valores_string','valores_string',3,'p_multiples_valores_string','sintactico.py',223),
  ('valores_boolean -> valor_boolean','valores_boolean',1,'p_multiples_valores_boolean','sintactico.py',226),
  ('valores_boolean -> valor_boolean COMA valores_boolean','valores_boolean',3,'p_multiples_valores_boolean','sintactico.py',227),
  ('valor -> valor operacion_binaria valor','valor',3,'p_operacion_mat','sintactico.py',230),
  ('print -> PRINTLN','print',1,'p_print_options','sintactico.py',233),
  ('print -> PRINTF','print',1,'p_print_options','sintactico.py',234),
  ('print -> PRINT','print',1,'p_print_options','sintactico.py',235),
  ('type -> BOOL','type',1,'p_tipo','sintactico.py',238),
  ('type -> STRINGTYPE','type',1,'p_tipo','sintactico.py',239),
  ('type -> INTEGER','type',1,'p_tipo','sintactico.py',240),
  ('type -> FLOAT32','type',1,'p_tipo','sintactico.py',241),
  ('type -> FLOAT64','type',1,'p_tipo','sintactico.py',242),
  ('operador_matematico -> INCREMENTO','operador_matematico',1,'p_operacion_mat_var','sintactico.py',245),
  ('operador_matematico -> DECREMENTO','operador_matematico',1,'p_operacion_mat_var','sintactico.py',246),
  ('asignacion -> ASIGNACION','asignacion',1,'p_operadores_asignacion','sintactico.py',249),
  ('asignacion -> ASIGNACION_ADICION','asignacion',1,'p_operadores_asignacion','sintactico.py',250),
  ('asignacion -> ASIGNACION_RESTA','asignacion',1,'p_operadores_asignacion','sintactico.py',251),
  ('asignacion -> ASIGNACION_MULTI','asignacion',1,'p_operadores_asignacion','sintactico.py',252),
  ('asignacion -> DECLARACION_ASIGNACION','asignacion',1,'p_operadores_asignacion','sintactico.py',253),
  ('asignacion -> ASIGNACION_DIVISION','asignacion',1,'p_operadores_asignacion','sintactico.py',254),
  ('asignacion -> ASIGNACION_MODULO','asignacion',1,'p_operadores_asignacion','sintactico.py',255),
  ('operacion_binaria -> ADICION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',258),
  ('operacion_binaria -> RESTA','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',259),
  ('operacion_binaria -> MULTIPLICACION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',260),
  ('operacion_binaria -> DIVISION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',261),
  ('operacion_binaria -> MODULO','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',262),
  ('operacion_binaria -> MENOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',265),
  ('operacion_binaria -> IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',266),
  ('operacion_binaria -> DIFERENTE','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',267),
  ('operacion_binaria -> MAYOR','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',268),
  ('operacion_binaria -> MAYOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',269),
  ('operacion_binaria -> MENOR','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',270),
  ('valor -> valor_int','valor',1,'p_valores','sintactico.py',273),
  ('valor -> valor_double','valor',1,'p_valores','sintactico.py',274),
  ('valor -> valor_string','valor',1,'p_valores','sintactico.py',275),
  ('valor -> valor_boolean','valor',1,'p_valores','sintactico.py',276),
  ('valor -> valor_variable','valor',1,'p_valores','sintactico.py',277),
  ('valor_int -> INT','valor_int',1,'p_valores_int','sintactico.py',280),
  ('valor_double -> DOUBLE','valor_double',1,'p_valores_double','sintactico.py',283),
  ('valor_string -> STRING','valor_string',1,'p_valores_string','sintactico.py',286),
  ('valor_boolean -> BOOLEAN','valor_boolean',1,'p_valores_boolean','sintactico.py',289),
  ('valor_variable -> ID','valor_variable',1,'p_valores_variable','sintactico.py',292),
]
