
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADICION AND ASIGNACION ASIGNACION_ADICION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTI ASIGNACION_RESTA BOOL BOOLEAN BREAK CASE CHAN COMA CONST CONTINUE DECLARACION_ASIGNACION DECREMENTO DEFAULT DEFER DIFERENTE DIVISION DOS_PUNTOS DOUBLE D_CORCHETE D_LLAVE D_PARENTESIS ELSE ELSEIF FALLTHROUGH FLOAT32 FLOAT64 FOR FUNC GO GOTO ID IDENTIFICADOR IF IGUAL IMPORT INCREMENTO INT INTEGER INTERFACE I_CORCHETE I_LLAVE I_PARENTESIS MAKE MAP MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PACKAGE PRINT PRINTF PRINTLN PUNTO PUNTO_COMA RANGE RESTA RETURN SELECT STRING STRINGTYPE STRUCT SWITCH TYPE VARbody : instruccioninstruccion : print I_PARENTESIS valores D_PARENTESISinstruccion : VAR ID type ASIGNACION valor\n                   | VAR ID ASIGNACION valorinstruccion : ID asignacion valor\n          | ID asignacion instruccioninstruccion : ID operador_matematicoinstruccion : IF condicion I_LLAVE body D_LLAVEinstruccion : ELSE I_LLAVE body D_LLAVEinstruccion : ELSEIF condicion I_LLAVE body D_LLAVEinstruccion : FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVEinstruccion : FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : I_CORCHETE D_CORCHETE type I_LLAVE D_LLAVEinstruccion : I_CORCHETE INT D_CORCHETE type I_LLAVE D_LLAVEinstruccion : I_CORCHETE D_CORCHETE type I_LLAVE valores D_LLAVEinstruccion : I_CORCHETE INT D_CORCHETE type I_LLAVE valores D_LLAVEinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVEinstruccion : MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESISinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVEclave_valor : valor DOS_PUNTOS valorclaves_valores : clave_valor \n          | clave_valor COMA claves_valorescondicion : valor\n                | I_PARENTESIS valor D_PARENTESISiteracion_for : ID valores : valor\n          | valor COMA valoresvalor : valor operacion_binaria valorprint : PRINTLN\n          | PRINTF\n          | PRINTtype : BOOL\n          | STRINGTYPE\n          | INTEGER\n          | FLOAT32\n          | FLOAT64operador_matematico : INCREMENTO\n          | DECREMENTOasignacion : ASIGNACION\n          | ASIGNACION_ADICION\n          | ASIGNACION_RESTA\n          | ASIGNACION_MULTI\n          | DECLARACION_ASIGNACION\n          | ASIGNACION_DIVISION\n          | ASIGNACION_MODULOoperacion_binaria : ADICION\n          | RESTA\n          | MULTIPLICACION\n          | DIVISION\n          | MODULOoperacion_binaria : MENOR_IGUAL\n          | IGUAL\n          | DIFERENTE\n          | MAYOR\n          | MAYOR_IGUAL\n          | MENORvalor : INT\n          | DOUBLE\n          | STRING\n          | ID'
    
_lr_action_items = {'VAR':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[4,4,4,-40,-41,-42,-43,-44,-45,-46,4,4,4,-44,4,4,4,]),'ID':([0,4,6,8,9,16,18,20,21,22,23,24,25,26,31,36,47,56,57,58,59,60,61,62,63,64,65,66,67,68,71,72,73,74,80,81,88,91,101,104,107,108,113,125,126,128,129,],[5,17,35,35,38,35,53,-40,-41,-42,-43,-44,-45,-46,35,5,35,5,35,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,5,-44,89,35,35,35,99,35,109,35,5,116,35,5,5,35,35,]),'IF':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[6,6,6,-40,-41,-42,-43,-44,-45,-46,6,6,6,-44,6,6,6,]),'ELSE':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[7,7,7,-40,-41,-42,-43,-44,-45,-46,7,7,7,-44,7,7,7,]),'ELSEIF':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[8,8,8,-40,-41,-42,-43,-44,-45,-46,8,8,8,-44,8,8,8,]),'FOR':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[9,9,9,-40,-41,-42,-43,-44,-45,-46,9,9,9,-44,9,9,9,]),'I_CORCHETE':([0,9,11,18,20,21,22,23,24,25,26,36,56,71,72,78,107,125,126,],[10,10,42,10,-40,-41,-42,-43,-44,-45,-46,10,10,10,-44,94,10,10,10,]),'MAP':([0,9,18,20,21,22,23,24,25,26,36,43,56,71,72,107,125,126,],[11,11,11,-40,-41,-42,-43,-44,-45,-46,11,78,11,11,-44,11,11,11,]),'MAKE':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[12,12,12,-40,-41,-42,-43,-44,-45,-46,12,12,12,-44,12,12,12,]),'PRINTLN':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[13,13,13,-40,-41,-42,-43,-44,-45,-46,13,13,13,-44,13,13,13,]),'PRINTF':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[14,14,14,-40,-41,-42,-43,-44,-45,-46,14,14,14,-44,14,14,14,]),'PRINT':([0,9,18,20,21,22,23,24,25,26,36,56,71,72,107,125,126,],[15,15,15,-40,-41,-42,-43,-44,-45,-46,15,15,15,-44,15,15,15,]),'$end':([1,2,19,27,28,32,33,34,35,53,54,55,79,82,84,86,96,97,98,102,110,111,118,119,124,127,130,135,136,],[0,-1,-7,-38,-39,-58,-59,-60,-61,-61,-5,-6,-2,-4,-29,-9,-3,-8,-10,-14,-16,-15,-17,-18,-11,-20,-19,-13,-12,]),'D_LLAVE':([2,19,27,28,32,33,34,35,45,53,54,55,70,79,82,83,84,86,87,91,95,96,97,98,102,103,104,110,111,112,113,115,118,119,120,121,124,127,130,131,132,133,134,135,136,],[-1,-7,-38,-39,-58,-59,-60,-61,-27,-61,-5,-6,86,-2,-4,97,-29,-9,98,102,-28,-3,-8,-10,-14,110,111,-16,-15,118,119,124,-17,-18,127,-22,-11,-20,-19,135,136,-23,-21,-13,-12,]),'I_PARENTESIS':([3,6,8,12,13,14,15,],[16,31,31,43,-30,-31,-32,]),'ASIGNACION':([5,17,38,46,48,49,50,51,52,53,],[20,47,20,81,-33,-34,-35,-36,-37,20,]),'ASIGNACION_ADICION':([5,38,53,],[21,21,21,]),'ASIGNACION_RESTA':([5,38,53,],[22,22,22,]),'ASIGNACION_MULTI':([5,38,53,],[23,23,23,]),'DECLARACION_ASIGNACION':([5,38,53,89,],[24,72,24,100,]),'ASIGNACION_DIVISION':([5,38,53,],[25,25,25,]),'ASIGNACION_MODULO':([5,38,53,],[26,26,26,]),'INCREMENTO':([5,38,53,109,],[27,27,27,27,]),'DECREMENTO':([5,38,53,109,],[28,28,28,28,]),'INT':([6,8,10,16,18,20,21,22,23,24,25,26,31,47,57,58,59,60,61,62,63,64,65,66,67,68,72,74,80,81,91,104,113,128,129,],[32,32,41,32,32,-40,-41,-42,-43,-44,-45,-46,32,32,32,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-44,32,32,32,32,32,32,32,32,]),'DOUBLE':([6,8,16,18,20,21,22,23,24,25,26,31,47,57,58,59,60,61,62,63,64,65,66,67,68,72,74,80,81,91,104,113,128,129,],[33,33,33,33,-40,-41,-42,-43,-44,-45,-46,33,33,33,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-44,33,33,33,33,33,33,33,33,]),'STRING':([6,8,16,18,20,21,22,23,24,25,26,31,47,57,58,59,60,61,62,63,64,65,66,67,68,72,74,80,81,91,104,113,128,129,],[34,34,34,34,-40,-41,-42,-43,-44,-45,-46,34,34,34,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-44,34,34,34,34,34,34,34,34,]),'I_LLAVE':([7,27,28,29,30,32,33,34,35,37,48,49,50,51,52,75,84,85,92,99,105,116,117,],[36,-38,-39,56,-24,-58,-59,-60,-61,71,-33,-34,-35,-36,-37,91,-29,-25,104,107,113,125,126,]),'D_CORCHETE':([10,41,48,49,50,51,52,77,106,],[40,76,-33,-34,-35,-36,-37,93,114,]),'BOOL':([17,40,42,76,93,94,114,],[48,48,48,48,48,48,48,]),'STRINGTYPE':([17,40,42,76,93,94,114,],[49,49,49,49,49,49,49,]),'INTEGER':([17,40,42,76,93,94,114,],[50,50,50,50,50,50,50,]),'FLOAT32':([17,40,42,76,93,94,114,],[51,51,51,51,51,51,51,]),'FLOAT64':([17,40,42,76,93,94,114,],[52,52,52,52,52,52,52,]),'PUNTO_COMA':([19,27,28,32,33,34,35,39,53,54,55,79,82,84,86,90,96,97,98,102,110,111,118,119,124,127,130,135,136,],[-7,-38,-39,-58,-59,-60,-61,74,-61,-5,-6,-2,-4,-29,-9,101,-3,-8,-10,-14,-16,-15,-17,-18,-11,-20,-19,-13,-12,]),'ADICION':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[58,-58,-59,-60,-61,58,-61,58,58,58,58,58,58,58,58,]),'RESTA':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[59,-58,-59,-60,-61,59,-61,59,59,59,59,59,59,59,59,]),'MULTIPLICACION':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[60,-58,-59,-60,-61,60,-61,60,60,60,60,60,60,60,60,]),'DIVISION':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[61,-58,-59,-60,-61,61,-61,61,61,61,61,61,61,61,61,]),'MODULO':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[62,-58,-59,-60,-61,62,-61,62,62,62,62,62,62,62,62,]),'MENOR_IGUAL':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[63,-58,-59,-60,-61,63,-61,63,63,63,63,63,63,63,63,]),'IGUAL':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[64,-58,-59,-60,-61,64,-61,64,64,64,64,64,64,64,64,]),'DIFERENTE':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[65,-58,-59,-60,-61,65,-61,65,65,65,65,65,65,65,65,]),'MAYOR':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[66,-58,-59,-60,-61,66,-61,66,66,66,66,66,66,66,66,]),'MAYOR_IGUAL':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[67,-58,-59,-60,-61,67,-61,67,67,67,67,67,67,67,67,]),'MENOR':([30,32,33,34,35,45,53,54,69,82,84,90,96,122,134,],[68,-58,-59,-60,-61,68,-61,68,68,68,68,68,68,68,68,]),'COMA':([32,33,34,35,38,45,84,121,134,],[-58,-59,-60,-61,73,80,-29,128,-21,]),'D_PARENTESIS':([32,33,34,35,44,45,48,49,50,51,52,69,84,95,123,],[-58,-59,-60,-61,79,-27,-33,-34,-35,-36,-37,85,-29,-28,130,]),'DOS_PUNTOS':([32,33,34,35,84,122,],[-58,-59,-60,-61,-29,129,]),'RANGE':([72,100,],[88,108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,36,56,71,107,125,126,],[1,70,83,87,115,131,132,]),'instruccion':([0,9,18,36,56,71,107,125,126,],[2,39,55,2,2,2,2,2,2,]),'print':([0,9,18,36,56,71,107,125,126,],[3,3,3,3,3,3,3,3,3,]),'asignacion':([5,38,53,],[18,18,18,]),'operador_matematico':([5,38,53,109,],[19,19,19,117,]),'condicion':([6,8,],[29,37,]),'valor':([6,8,16,18,31,47,57,74,80,81,91,104,113,128,129,],[30,30,45,54,69,82,84,90,45,96,45,45,122,122,134,]),'valores':([16,80,91,104,],[44,95,103,112,]),'type':([17,40,42,76,93,94,114,],[46,75,77,92,105,106,123,]),'operacion_binaria':([30,45,54,69,82,84,90,96,122,134,],[57,57,57,57,57,57,57,57,57,57,]),'claves_valores':([113,128,],[120,133,]),'clave_valor':([113,128,],[121,121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> instruccion','body',1,'p_body','sintactico.py',18),
  ('instruccion -> print I_PARENTESIS valores D_PARENTESIS','instruccion',4,'p_impresion','sintactico.py',21),
  ('instruccion -> VAR ID type ASIGNACION valor','instruccion',5,'p_declaracion','sintactico.py',24),
  ('instruccion -> VAR ID ASIGNACION valor','instruccion',4,'p_declaracion','sintactico.py',25),
  ('instruccion -> ID asignacion valor','instruccion',3,'p_asignacion','sintactico.py',28),
  ('instruccion -> ID asignacion instruccion','instruccion',3,'p_asignacion','sintactico.py',29),
  ('instruccion -> ID operador_matematico','instruccion',2,'p_incremento_decremento','sintactico.py',32),
  ('instruccion -> IF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_condicion','sintactico.py',37),
  ('instruccion -> ELSE I_LLAVE body D_LLAVE','instruccion',4,'p_else_condicion','sintactico.py',40),
  ('instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_else_condicion','sintactico.py',43),
  ('instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',8,'p_for_each','sintactico.py',46),
  ('instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE','instruccion',10,'p_for_condicion','sintactico.py',49),
  ('instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',10,'p_for_map','sintactico.py',52),
  ('instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE D_LLAVE','instruccion',5,'p_array','sintactico.py',57),
  ('instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE D_LLAVE','instruccion',6,'p_array_length','sintactico.py',60),
  ('instruccion -> I_CORCHETE D_CORCHETE type I_LLAVE valores D_LLAVE','instruccion',6,'p_array_con_valores','sintactico.py',63),
  ('instruccion -> I_CORCHETE INT D_CORCHETE type I_LLAVE valores D_LLAVE','instruccion',7,'p_array_length_con_valores','sintactico.py',66),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE','instruccion',7,'p_map','sintactico.py',69),
  ('instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS','instruccion',8,'p_map_make','sintactico.py',72),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE','instruccion',8,'p_map_valores','sintactico.py',75),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','sintactico.py',78),
  ('claves_valores -> clave_valor','claves_valores',1,'p_multiple_clave_valor','sintactico.py',81),
  ('claves_valores -> clave_valor COMA claves_valores','claves_valores',3,'p_multiple_clave_valor','sintactico.py',82),
  ('condicion -> valor','condicion',1,'p_condicion','sintactico.py',85),
  ('condicion -> I_PARENTESIS valor D_PARENTESIS','condicion',3,'p_condicion','sintactico.py',86),
  ('iteracion_for -> ID','iteracion_for',1,'p_iteracion_for','sintactico.py',89),
  ('valores -> valor','valores',1,'p_multiples_valores','sintactico.py',97),
  ('valores -> valor COMA valores','valores',3,'p_multiples_valores','sintactico.py',98),
  ('valor -> valor operacion_binaria valor','valor',3,'p_operacion_mat','sintactico.py',101),
  ('print -> PRINTLN','print',1,'p_print_options','sintactico.py',104),
  ('print -> PRINTF','print',1,'p_print_options','sintactico.py',105),
  ('print -> PRINT','print',1,'p_print_options','sintactico.py',106),
  ('type -> BOOL','type',1,'p_tipo','sintactico.py',109),
  ('type -> STRINGTYPE','type',1,'p_tipo','sintactico.py',110),
  ('type -> INTEGER','type',1,'p_tipo','sintactico.py',111),
  ('type -> FLOAT32','type',1,'p_tipo','sintactico.py',112),
  ('type -> FLOAT64','type',1,'p_tipo','sintactico.py',113),
  ('operador_matematico -> INCREMENTO','operador_matematico',1,'p_operacion_mat_var','sintactico.py',116),
  ('operador_matematico -> DECREMENTO','operador_matematico',1,'p_operacion_mat_var','sintactico.py',117),
  ('asignacion -> ASIGNACION','asignacion',1,'p_operadores_asignacion','sintactico.py',120),
  ('asignacion -> ASIGNACION_ADICION','asignacion',1,'p_operadores_asignacion','sintactico.py',121),
  ('asignacion -> ASIGNACION_RESTA','asignacion',1,'p_operadores_asignacion','sintactico.py',122),
  ('asignacion -> ASIGNACION_MULTI','asignacion',1,'p_operadores_asignacion','sintactico.py',123),
  ('asignacion -> DECLARACION_ASIGNACION','asignacion',1,'p_operadores_asignacion','sintactico.py',124),
  ('asignacion -> ASIGNACION_DIVISION','asignacion',1,'p_operadores_asignacion','sintactico.py',125),
  ('asignacion -> ASIGNACION_MODULO','asignacion',1,'p_operadores_asignacion','sintactico.py',126),
  ('operacion_binaria -> ADICION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',129),
  ('operacion_binaria -> RESTA','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',130),
  ('operacion_binaria -> MULTIPLICACION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',131),
  ('operacion_binaria -> DIVISION','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',132),
  ('operacion_binaria -> MODULO','operacion_binaria',1,'p_operacion_mat_simbolos','sintactico.py',133),
  ('operacion_binaria -> MENOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',136),
  ('operacion_binaria -> IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',137),
  ('operacion_binaria -> DIFERENTE','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',138),
  ('operacion_binaria -> MAYOR','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',139),
  ('operacion_binaria -> MAYOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',140),
  ('operacion_binaria -> MENOR','operacion_binaria',1,'p_operacion_comp_simbolos','sintactico.py',141),
  ('valor -> INT','valor',1,'p_valores','sintactico.py',144),
  ('valor -> DOUBLE','valor',1,'p_valores','sintactico.py',145),
  ('valor -> STRING','valor',1,'p_valores','sintactico.py',146),
  ('valor -> ID','valor',1,'p_valores','sintactico.py',147),
]
