
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADICION AND ASIGNACION ASIGNACION_ADICION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTI ASIGNACION_RESTA BOOL BOOLEAN BREAK CASE CHAN COMA CONST CONTINUE DECLARACION_ASIGNACION DECREMENTO DEFAULT DEFER DIFERENTE DIVISION DOS_PUNTOS DOUBLE D_CORCHETE D_LLAVE D_PARENTESIS ELSE ELSEIF FALLTHROUGH FLOAT32 FLOAT64 FOR FUNC GO GOTO ID IDENTIFICADOR IF IGUAL IMPORT INCREMENTO INT INTEGER INTERFACE I_CORCHETE I_LLAVE I_PARENTESIS MAKE MAP MAYOR MAYOR_IGUAL MENOR MENOR_IGUAL MODULO MULTIPLICACION NOT OR PACKAGE PRINT PRINTF PRINTLN PUNTO PUNTO_COMA RANGE RESTA RETURN SELECT STRING STRINGTYPE STRUCT SWITCH TYPE VARgo : instruccion\n            | funcion go\n            | funcionbody : instruccion\n            | I_LLAVE instruct_expression D_LLAVE\n            | I_LLAVE varias_instrucciones D_LLAVE\n            | I_LLAVE varias_instrucciones instruct_expression D_LLAVE\n            | I_LLAVE D_LLAVEvarias_instrucciones : instruccion\n                            | instruccion varias_instruccionesinstruct_expression : RETURN valor\n                            | RETURN resultadoinstruccion : llamada_func\n                     | resultado_inc_dec\n                     | expressioninstruccion : print I_PARENTESIS valores D_PARENTESISinstruccion : VAR ID type ASIGNACION valor\n                   | VAR ID ASIGNACION valor\n                   | VAR ID ASIGNACION instruccion\n                   | VAR ID array_type_spec ASIGNACION instruccioninstruccion : ID asignacion valor\n          | ID asignacion instruccionfuncion : FUNC ID cuerpo_funcuerpo_fun : parametrosMetodo bodyparametrosMetodo : I_PARENTESIS parametros D_PARENTESIS type\n                        | I_PARENTESIS parametros D_PARENTESISparametros : atributo\n                  | atributo COMA parametros\n                  | llamada_func : ID I_PARENTESIS llamada_params D_PARENTESISllamada_params : expression\n                      | expression COMA llamada_paramsinstruccion : IF condicion I_LLAVE body D_LLAVEinstruccion : ELSE I_LLAVE body D_LLAVEinstruccion : ELSEIF condicion I_LLAVE body D_LLAVEinstruccion : FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVEinstruccion : FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVEinstruccion : array_int\n    | array_double\n    | array_string\n    | array_booleaninstruccion : array_length_int\n    | array_length_double\n    | array_length_string\n    | array_length_booleaninstruccion : array_con_valores_int\n    | array_con_valores_double\n    | array_con_valores_string\n    | array_con_valores_booleaninstruccion : array_length_con_valores_int\n    | array_length_con_valores_double\n    | array_length_con_valores_string\n    | array_length_con_valores_booleanarray_int : I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVEarray_double : I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVEarray_string : I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVEarray_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVEarray_length_int : array_length INTEGER I_LLAVE D_LLAVEarray_length_double : array_length floating_type I_LLAVE D_LLAVEarray_length_string : array_length STRINGTYPE I_LLAVE D_LLAVEarray_length_boolean : array_length BOOLEAN I_LLAVE D_LLAVEarray_con_valores_int : I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVEarray_con_valores_double : I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVEarray_con_valores_string : I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVEarray_con_valores_boolean : I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVEarray_length_con_valores_int : array_length INTEGER I_LLAVE valores_int D_LLAVEarray_length_con_valores_double : array_length floating_type I_LLAVE valores_double D_LLAVEarray_length_con_valores_string : array_length STRINGTYPE I_LLAVE valores_string D_LLAVEarray_length_con_valores_boolean : array_length BOOLEAN I_LLAVE valores_boolean D_LLAVEinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVEinstruccion : MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESISinstruccion : MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVEinstruccion : TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVEatributos_struct : atributo\n                | atributo atributos_structatributo : ID typeinstruccion : init_structinit_struct : VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE\n                    | ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVEclave_valor : valor DOS_PUNTOS valorclaves_valores : clave_valor\n          | clave_valor COMA claves_valorescondicion : valor\n                | I_PARENTESIS valor D_PARENTESISiteracion_for : IDexpression : valores\n                  | resultado\n                  | llamada_func\n                  | I_PARENTESIS resultado D_PARENTESISresultado : expression operacion_binaria expressionresultado_inc_dec : ID operador_matematicovalores : valor\n          | valor COMA valoresvalores_int : valor_int\n          | valor_int COMA valores_intvalores_double : valor_double\n          | valor_double COMA valores_doublevalores_string : valor_string\n          | valor_string COMA valores_stringvalores_boolean : valor_boolean\n          | valor_boolean COMA valores_booleanvalor : valor operacion_binaria valorprint : PRINTLN\n          | PRINTF\n          | PRINTarray_type_spec : array_length INTEGER\n          | array_length STRINGTYPE\n          | array_length BOOLEAN\n          | array_length floating_typearray_length : I_CORCHETE INT D_CORCHETEtype : BOOL\n          | STRINGTYPE\n          | INTEGER\n          | floating_type floating_type : FLOAT32\n          | FLOAT64operador_matematico : INCREMENTO\n          | DECREMENTOasignacion : ASIGNACION\n          | ASIGNACION_ADICION\n          | ASIGNACION_RESTA\n          | ASIGNACION_MULTI\n          | DECLARACION_ASIGNACION\n          | ASIGNACION_DIVISION\n          | ASIGNACION_MODULOoperacion_binaria : ADICION\n          | RESTA\n          | MULTIPLICACION\n          | DIVISION\n          | MODULOoperacion_binaria : MENOR_IGUAL\n          | IGUAL\n          | DIFERENTE\n          | MAYOR\n          | MAYOR_IGUAL\n          | MENORvalor : valor_int\n          | valor_double\n          | valor_string\n          | valor_boolean\n          | valor_variablevalor_int : INTvalor_double : DOUBLEvalor_string : STRINGvalor_boolean : BOOLEANvalor_variable : ID'
    
_lr_action_items = {'VAR':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[10,10,-13,-14,-15,-87,-147,-93,10,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,10,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,10,-116,-117,-91,-90,10,-112,-113,-114,-115,-147,-21,-22,-94,-103,10,10,-4,10,-124,-23,10,-16,-18,-19,10,-30,-8,10,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,10,-63,-64,-65,-66,-74,-25,-71,-79,-36,10,10,-73,-72,-38,-37,]),'ID':([0,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,36,37,38,39,43,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,134,135,144,145,146,151,152,153,154,155,156,161,162,163,167,169,170,171,173,182,183,187,190,193,196,200,201,204,205,206,212,215,217,219,221,223,227,228,229,230,231,233,235,237,239,240,241,242,243,245,246,247,248,249,251,253,263,268,269,270,271,272,273,274,275,280,281,],[11,11,-13,-14,-15,70,-87,71,-147,-93,89,89,92,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,98,-78,99,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,70,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,89,-89,-147,109,119,70,-92,124,-120,-121,-122,-123,-125,-126,-118,-119,89,89,89,-147,11,-116,-117,-91,-90,119,-112,-113,-114,-115,-147,-21,-22,-94,-103,11,11,-4,11,124,174,89,-23,11,186,-16,199,89,-18,-19,11,-30,70,89,-8,210,11,-34,213,186,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,244,-55,-56,-57,-58,186,-26,186,-77,-67,-68,-69,-70,89,-80,-7,11,261,89,-63,-64,-65,-66,-74,-25,-71,-79,-36,11,11,-73,89,89,-72,-38,-37,]),'IF':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[13,13,-13,-14,-15,-87,-147,-93,13,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,13,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,13,-116,-117,-91,-90,13,-112,-113,-114,-115,-147,-21,-22,-94,-103,13,13,-4,13,-124,-23,13,-16,-18,-19,13,-30,-8,13,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,13,-63,-64,-65,-66,-74,-25,-71,-79,-36,13,13,-73,-72,-38,-37,]),'ELSE':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[14,14,-13,-14,-15,-87,-147,-93,14,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,14,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,14,-116,-117,-91,-90,14,-112,-113,-114,-115,-147,-21,-22,-94,-103,14,14,-4,14,-124,-23,14,-16,-18,-19,14,-30,-8,14,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,14,-63,-64,-65,-66,-74,-25,-71,-79,-36,14,14,-73,-72,-38,-37,]),'ELSEIF':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[15,15,-13,-14,-15,-87,-147,-93,15,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,15,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,15,-116,-117,-91,-90,15,-112,-113,-114,-115,-147,-21,-22,-94,-103,15,15,-4,15,-124,-23,15,-16,-18,-19,15,-30,-8,15,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,15,-63,-64,-65,-66,-74,-25,-71,-79,-36,15,15,-73,-72,-38,-37,]),'FOR':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[16,16,-13,-14,-15,-87,-147,-93,16,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,16,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,16,-116,-117,-91,-90,16,-112,-113,-114,-115,-147,-21,-22,-94,-103,16,16,-4,16,-124,-23,16,-16,-18,-19,16,-30,-8,16,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,16,-63,-64,-65,-66,-74,-25,-71,-79,-36,16,16,-73,-72,-38,-37,]),'MAP':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,97,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[33,33,-13,-14,-15,-87,-147,-93,33,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,33,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,33,142,-116,-117,-91,-90,33,-112,-113,-114,-115,-147,-21,-22,-94,-103,33,33,-4,33,-124,-23,33,-16,-18,-19,33,-30,-8,33,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,33,-63,-64,-65,-66,-74,-25,-71,-79,-36,33,33,-73,-72,-38,-37,]),'MAKE':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[35,35,-13,-14,-15,-87,-147,-93,35,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,35,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,35,-116,-117,-91,-90,35,-112,-113,-114,-115,-147,-21,-22,-94,-103,35,35,-4,35,-124,-23,35,-16,-18,-19,35,-30,-8,35,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,35,-63,-64,-65,-66,-74,-25,-71,-79,-36,35,35,-73,-72,-38,-37,]),'TYPE':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[36,36,-13,-14,-15,-87,-147,-93,36,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,36,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,36,-116,-117,-91,-90,36,-112,-113,-114,-115,-147,-21,-22,-94,-103,36,36,-4,36,-124,-23,36,-16,-18,-19,36,-30,-8,36,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,36,-63,-64,-65,-66,-74,-25,-71,-79,-36,36,36,-73,-72,-38,-37,]),'FUNC':([0,3,4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,74,82,83,89,106,108,119,120,121,125,126,131,144,151,154,155,161,167,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,231,233,235,237,240,241,246,247,248,249,251,263,268,269,272,275,280,281,],[38,38,-13,-14,-15,-87,-147,-93,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,-92,-118,-119,-147,-91,-90,-147,-21,-22,-94,-103,-4,-23,-16,-18,-19,-30,-8,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-67,-68,-69,-70,-80,-7,-63,-64,-65,-66,-74,-71,-79,-36,-73,-72,-38,-37,]),'I_PARENTESIS':([0,3,4,5,6,7,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,35,37,39,40,41,42,43,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,69,70,72,73,74,75,76,77,78,79,80,81,82,83,89,90,92,99,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,162,167,169,170,171,183,187,190,193,196,200,201,204,205,206,210,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[8,8,-13,-14,-15,66,8,-87,73,-93,88,88,8,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,97,-78,-88,-104,-105,-106,-146,-143,-138,-139,-140,-141,-142,-144,-145,8,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-89,73,8,8,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,8,73,146,-116,-117,-91,-90,8,-112,-113,-114,-115,73,-21,-22,-94,-103,8,8,-4,8,-124,-23,8,-16,-18,-19,8,-30,8,-8,8,8,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,73,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,8,-63,-64,-65,-66,-74,-25,-71,-79,-36,8,8,-73,-72,-38,-37,]),'PRINTLN':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[40,40,-13,-14,-15,-87,-147,-93,40,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,40,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,40,-116,-117,-91,-90,40,-112,-113,-114,-115,-147,-21,-22,-94,-103,40,40,-4,40,-124,-23,40,-16,-18,-19,40,-30,-8,40,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,40,-63,-64,-65,-66,-74,-25,-71,-79,-36,40,40,-73,-72,-38,-37,]),'PRINTF':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[41,41,-13,-14,-15,-87,-147,-93,41,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,41,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,41,-116,-117,-91,-90,41,-112,-113,-114,-115,-147,-21,-22,-94,-103,41,41,-4,41,-124,-23,41,-16,-18,-19,41,-30,-8,41,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,41,-63,-64,-65,-66,-74,-25,-71,-79,-36,41,41,-73,-72,-38,-37,]),'PRINT':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[42,42,-13,-14,-15,-87,-147,-93,42,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,42,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,42,-116,-117,-91,-90,42,-112,-113,-114,-115,-147,-21,-22,-94,-103,42,42,-4,42,-124,-23,42,-16,-18,-19,42,-30,-8,42,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,42,-63,-64,-65,-66,-74,-25,-71,-79,-36,42,42,-73,-72,-38,-37,]),'I_CORCHETE':([0,3,4,5,6,9,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,37,39,43,45,46,47,48,49,50,51,52,69,70,71,72,74,75,76,77,78,79,80,81,82,83,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,142,144,145,151,154,155,156,161,167,170,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,240,241,242,246,247,248,249,251,253,263,268,269,270,271,272,275,280,281,],[34,34,-13,-14,-15,-87,-147,-93,34,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,94,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,118,34,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,-147,34,-116,-117,-91,-90,34,-112,-113,-114,-115,-147,-21,-22,-94,-103,34,34,-4,34,-124,181,-23,34,-16,-18,-19,34,-30,-8,34,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,-80,-7,34,-63,-64,-65,-66,-74,-25,-71,-79,-36,34,34,-73,-72,-38,-37,]),'INT':([0,3,4,5,6,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,37,39,43,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,104,105,106,108,111,113,114,115,116,118,119,120,121,125,126,127,129,131,132,133,135,144,145,147,151,153,154,155,156,161,162,163,167,169,170,171,177,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,232,233,235,237,239,240,241,242,245,246,247,248,249,251,253,263,268,269,270,271,272,273,274,275,280,281,],[45,45,-13,-14,-15,45,-87,-147,-93,45,45,45,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,96,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,45,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,45,-89,-147,45,45,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,45,45,45,-147,45,-116,-117,-91,-90,45,-112,-113,-114,-115,96,-147,-21,-22,-94,-103,45,45,-4,45,-124,45,-23,45,45,-16,45,-18,-19,45,-30,45,45,-8,45,45,-34,45,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,45,-68,-69,-70,45,-80,-7,45,45,-63,-64,-65,-66,-74,-25,-71,-79,-36,45,45,-73,45,45,-72,-38,-37,]),'DOUBLE':([0,3,4,5,6,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,135,144,145,148,151,153,154,155,156,161,162,163,167,169,170,171,178,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,234,235,237,239,240,241,242,245,246,247,248,249,251,253,263,268,269,270,271,272,273,274,275,280,281,],[51,51,-13,-14,-15,51,-87,-147,-93,51,51,51,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,51,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,51,-89,-147,51,51,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,51,51,51,-147,51,-116,-117,-91,-90,51,-112,-113,-114,-115,-147,-21,-22,-94,-103,51,51,-4,51,-124,51,-23,51,51,-16,51,-18,-19,51,-30,51,51,-8,51,51,-34,51,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,51,-69,-70,51,-80,-7,51,51,-63,-64,-65,-66,-74,-25,-71,-79,-36,51,51,-73,51,51,-72,-38,-37,]),'STRING':([0,3,4,5,6,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,104,105,106,108,111,113,114,115,116,119,120,121,125,126,127,129,131,132,133,135,144,145,149,151,153,154,155,156,161,162,163,167,169,170,171,179,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,236,237,239,240,241,242,245,246,247,248,249,251,253,263,268,269,270,271,272,273,274,275,280,281,],[52,52,-13,-14,-15,52,-87,-147,-93,52,52,52,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,52,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,52,-89,-147,52,52,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,52,52,52,-147,52,-116,-117,-91,-90,52,-112,-113,-114,-115,-147,-21,-22,-94,-103,52,52,-4,52,-124,52,-23,52,52,-16,52,-18,-19,52,-30,52,52,-8,52,52,-34,52,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,52,-70,52,-80,-7,52,52,-63,-64,-65,-66,-74,-25,-71,-79,-36,52,52,-73,52,52,-72,-38,-37,]),'BOOLEAN':([0,3,4,5,6,8,9,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,44,45,46,47,48,49,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,95,104,105,106,108,111,113,114,115,116,117,119,120,121,125,126,127,129,131,132,133,135,141,144,145,150,151,153,154,155,156,161,162,163,167,169,170,171,180,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,228,231,233,235,237,238,239,240,241,242,245,246,247,248,249,251,253,263,268,269,270,271,272,273,274,275,280,281,],[43,43,-13,-14,-15,43,-87,-147,-93,43,43,43,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,103,-143,-138,-139,-140,-141,-142,-144,-145,43,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,43,-89,-147,43,43,-92,-124,-120,-121,-122,-123,-125,-126,-118,-119,43,43,43,-147,43,140,-116,-117,-91,-90,43,-112,-113,-114,-115,159,-147,-21,-22,-94,-103,43,43,-4,43,-124,43,-111,-23,43,43,-16,43,-18,-19,43,-30,43,43,-8,43,43,-34,43,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-26,-67,-68,-69,-70,43,43,-80,-7,43,43,-63,-64,-65,-66,-74,-25,-71,-79,-36,43,43,-73,43,43,-72,-38,-37,]),'$end':([1,2,3,4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,53,69,70,74,82,83,89,106,108,119,120,121,125,126,131,144,151,154,155,161,167,171,183,187,190,193,196,200,201,204,205,206,212,217,219,221,223,231,233,235,237,240,241,246,247,248,249,251,263,268,269,272,275,280,281,],[0,-1,-3,-13,-14,-15,-87,-147,-93,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-2,-89,-147,-92,-118,-119,-147,-91,-90,-147,-21,-22,-94,-103,-4,-23,-16,-18,-19,-30,-8,-34,-24,-59,-60,-61,-62,-17,-20,-33,-5,-6,-35,-55,-56,-57,-58,-67,-68,-69,-70,-80,-7,-63,-64,-65,-66,-74,-71,-79,-36,-73,-72,-38,-37,]),'PUNTO_COMA':([4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,74,82,83,89,92,93,106,108,119,120,121,125,126,151,154,155,161,171,175,187,190,193,196,200,201,204,212,217,219,221,223,231,233,235,237,240,246,247,248,249,251,263,268,269,272,275,280,281,],[-13,-14,-15,-87,-147,-93,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,-92,-118,-119,-147,-147,135,-91,-90,-147,-21,-22,-94,-103,-16,-18,-19,-30,-34,215,-59,-60,-61,-62,-17,-20,-33,-35,-55,-56,-57,-58,-67,-68,-69,-70,-80,-63,-64,-65,-66,-74,-71,-79,-36,-73,-72,-38,-37,]),'D_LLAVE':([4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,74,82,83,89,104,105,106,108,113,114,115,116,119,120,121,125,126,129,130,131,147,148,149,150,151,154,155,161,164,166,167,168,170,171,172,177,178,179,180,187,188,189,190,191,192,193,194,195,196,197,198,200,201,203,204,205,206,207,208,209,210,211,212,217,218,219,220,221,222,223,224,226,227,230,231,233,235,237,240,241,245,246,247,248,249,251,252,255,256,257,258,259,260,263,264,265,268,269,272,275,276,277,278,279,280,281,],[-13,-14,-15,-87,-147,-93,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,-92,-118,-119,-147,-116,-117,-91,-90,-112,-113,-114,-115,-147,-21,-22,-94,-103,167,171,-4,187,190,193,196,-16,-18,-19,-30,204,205,-8,206,-9,-34,212,217,219,221,223,-59,231,-95,-60,233,-97,-61,235,-99,-62,237,-101,-17,-20,240,-33,-5,-6,241,-11,-12,-147,-10,-35,-55,246,-56,247,-57,248,-58,249,251,-75,-77,-67,-68,-69,-70,-80,-7,263,-63,-64,-65,-66,-74,-76,-96,-98,-100,-102,268,269,-71,272,-82,-79,-36,-73,-72,280,281,-83,-81,-38,-37,]),'RETURN':([4,5,6,9,11,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,37,39,43,45,46,47,48,49,50,51,52,69,70,74,82,83,89,106,108,119,120,121,125,126,129,151,154,155,161,168,170,171,187,190,193,196,200,201,204,211,212,217,219,221,223,231,233,235,237,240,246,247,248,249,251,263,268,269,272,275,280,281,],[-13,-14,-15,-87,-147,-93,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-78,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,-92,-118,-119,-147,-91,-90,-147,-21,-22,-94,-103,169,-16,-18,-19,-30,169,-9,-34,-59,-60,-61,-62,-17,-20,-33,-10,-35,-55,-56,-57,-58,-67,-68,-69,-70,-80,-63,-64,-65,-66,-74,-71,-79,-36,-73,-72,-38,-37,]),'ADICION':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,55,-87,-147,55,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,55,-89,-147,55,-147,-147,55,-90,-147,55,55,-94,55,55,55,-30,55,55,55,-88,-147,55,55,]),'RESTA':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,56,-87,-147,56,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,56,-89,-147,56,-147,-147,56,-90,-147,56,56,-94,56,56,56,-30,56,56,56,-88,-147,56,56,]),'MULTIPLICACION':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,57,-87,-147,57,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,57,-89,-147,57,-147,-147,57,-90,-147,57,57,-94,57,57,57,-30,57,57,57,-88,-147,57,57,]),'DIVISION':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,58,-87,-147,58,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,58,-89,-147,58,-147,-147,58,-90,-147,58,58,-94,58,58,58,-30,58,58,58,-88,-147,58,58,]),'MODULO':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,59,-87,-147,59,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,59,-89,-147,59,-147,-147,59,-90,-147,59,59,-94,59,59,59,-30,59,59,59,-88,-147,59,59,]),'MENOR_IGUAL':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,60,-87,-147,60,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,60,-89,-147,60,-147,-147,60,-90,-147,60,60,-94,60,60,60,-30,60,60,60,-88,-147,60,60,]),'IGUAL':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,61,-87,-147,61,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,61,-89,-147,61,-147,-147,61,-90,-147,61,61,-94,61,61,61,-30,61,61,61,-88,-147,61,61,]),'DIFERENTE':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,62,-87,-147,62,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,62,-89,-147,62,-147,-147,62,-90,-147,62,62,-94,62,62,62,-30,62,62,62,-88,-147,62,62,]),'MAYOR':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,63,-87,-147,63,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,63,-89,-147,63,-147,-147,63,-90,-147,63,63,-94,63,63,63,-30,63,63,63,-88,-147,63,63,]),'MAYOR_IGUAL':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,64,-87,-147,64,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,64,-89,-147,64,-147,-147,64,-90,-147,64,64,-94,64,64,64,-30,64,64,64,-88,-147,64,64,]),'MENOR':([4,6,9,11,12,39,43,45,46,47,48,49,50,51,52,67,68,69,70,87,89,92,106,108,119,120,123,125,126,128,154,161,175,200,208,209,210,266,279,],[-89,65,-87,-147,65,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-88,65,-89,-147,65,-147,-147,65,-90,-147,65,65,-94,65,65,65,-30,65,65,65,-88,-147,65,65,]),'D_PARENTESIS':([9,12,39,43,45,46,47,48,49,50,51,52,67,69,70,89,104,105,106,107,108,113,114,115,116,122,123,125,126,128,146,161,184,185,202,229,230,254,267,],[-87,-93,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,108,-89,-147,-147,-116,-117,-91,151,-90,-112,-113,-114,-115,161,-31,-94,-103,165,-29,-30,228,-27,-32,-29,-77,-28,275,]),'COMA':([9,11,12,39,43,45,46,47,48,49,50,51,52,69,70,89,92,104,105,106,108,113,114,115,116,119,120,123,125,126,154,161,185,189,192,195,198,208,210,230,265,279,],[-87,-147,84,-88,-146,-143,-138,-139,-140,-141,-142,-144,-145,-89,-147,-147,134,-116,-117,-91,-90,-112,-113,-114,-115,-147,84,162,-94,-103,84,-30,229,232,234,236,238,84,-147,-77,273,-81,]),'DECLARACION_ASIGNACION':([11,92,119,174,],[75,133,75,214,]),'ASIGNACION':([11,71,92,104,105,109,110,112,113,114,115,116,119,157,158,159,160,],[76,111,76,-116,-117,152,153,156,-112,-113,-114,-115,76,-107,-108,-109,-110,]),'ASIGNACION_ADICION':([11,92,119,],[77,77,77,]),'ASIGNACION_RESTA':([11,92,119,],[78,78,78,]),'ASIGNACION_MULTI':([11,92,119,],[79,79,79,]),'ASIGNACION_DIVISION':([11,92,119,],[80,80,80,]),'ASIGNACION_MODULO':([11,92,119,],[81,81,81,]),'INCREMENTO':([11,92,119,244,],[82,82,82,82,]),'DECREMENTO':([11,92,119,244,],[83,83,83,83,]),'I_LLAVE':([14,43,45,46,47,48,49,50,51,52,82,83,86,87,89,90,91,100,101,102,103,104,105,113,114,115,116,124,126,127,132,137,138,139,140,143,145,165,199,213,216,228,242,253,261,262,270,271,],[90,-146,-143,-138,-139,-140,-141,-142,-144,-145,-118,-119,127,-84,-147,129,132,147,148,149,150,-116,-117,-112,-113,-114,-115,163,-103,129,129,177,178,179,180,182,129,-85,239,242,245,-26,129,-25,270,271,129,129,]),'D_CORCHETE':([34,96,104,105,113,114,115,116,136,225,],[95,141,-116,-117,-112,-113,-114,-115,176,250,]),'DOS_PUNTOS':([43,45,46,47,48,49,50,51,52,89,126,266,],[-146,-143,-138,-139,-140,-141,-142,-144,-145,-147,-103,274,]),'INTEGER':([44,71,94,95,117,141,176,181,186,228,250,],[100,115,115,137,157,-111,115,115,115,115,115,]),'STRINGTYPE':([44,71,94,95,117,141,176,181,186,228,250,],[102,114,114,139,158,-111,114,114,114,114,114,]),'FLOAT32':([44,71,94,95,117,141,176,181,186,228,250,],[104,104,104,104,104,-111,104,104,104,104,104,]),'FLOAT64':([44,71,94,95,117,141,176,181,186,228,250,],[105,105,105,105,105,-111,105,105,105,105,105,]),'BOOL':([71,94,176,181,186,228,250,],[113,113,113,113,113,113,113,]),'STRUCT':([98,],[143,]),'RANGE':([133,214,],[173,243,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'go':([0,3,],[1,53,]),'instruccion':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[2,2,93,121,131,155,131,170,131,131,201,170,131,131,131,]),'funcion':([0,3,],[3,3,]),'llamada_func':([0,3,8,16,54,72,73,90,111,127,129,132,145,156,162,169,170,242,270,271,],[4,4,69,4,69,4,69,4,4,4,4,4,4,4,69,69,4,4,4,4,]),'resultado_inc_dec':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'expression':([0,3,8,16,54,72,73,90,111,127,129,132,145,156,162,169,170,242,270,271,],[6,6,68,6,106,6,123,6,6,6,6,6,6,6,123,68,6,6,6,6,]),'print':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'valores':([0,3,8,16,54,66,72,73,84,90,111,127,129,132,145,156,162,163,169,170,239,242,270,271,],[9,9,9,9,9,107,9,9,125,9,9,9,9,9,9,9,9,203,9,9,259,9,9,9,]),'valor':([0,3,8,13,15,16,54,66,72,73,84,85,88,90,111,127,129,132,135,145,153,156,162,163,169,170,239,242,245,270,271,273,274,],[12,12,12,87,87,12,12,12,120,12,12,126,128,12,154,12,12,12,175,12,200,12,12,12,208,12,12,12,266,12,12,266,279,]),'array_int':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'array_double':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array_string':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'array_boolean':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'array_length_int':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'array_length_double':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'array_length_string':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'array_length_boolean':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'array_con_valores_int':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'array_con_valores_double':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'array_con_valores_string':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'array_con_valores_boolean':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'array_length_con_valores_int':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'array_length_con_valores_double':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'array_length_con_valores_string':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'array_length_con_valores_boolean':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'init_struct':([0,3,16,72,90,111,127,129,132,145,156,170,242,270,271,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'resultado':([0,3,8,16,54,72,73,90,111,127,129,132,145,156,162,169,170,242,270,271,],[39,39,67,39,39,39,39,39,39,39,39,39,39,39,39,209,39,39,39,39,]),'array_length':([0,3,16,71,72,90,111,127,129,132,145,156,170,242,270,271,],[44,44,44,117,44,44,44,44,44,44,44,44,44,44,44,44,]),'valor_int':([0,3,8,13,15,16,54,66,72,73,84,85,88,90,111,127,129,132,135,145,147,153,156,162,163,169,170,177,232,239,242,245,270,271,273,274,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,189,46,46,46,46,46,46,189,189,46,46,46,46,46,46,46,]),'valor_double':([0,3,8,13,15,16,54,66,72,73,84,85,88,90,111,127,129,132,135,145,148,153,156,162,163,169,170,178,234,239,242,245,270,271,273,274,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,192,47,47,47,47,47,47,192,192,47,47,47,47,47,47,47,]),'valor_string':([0,3,8,13,15,16,54,66,72,73,84,85,88,90,111,127,129,132,135,145,149,153,156,162,163,169,170,179,236,239,242,245,270,271,273,274,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,195,48,48,48,48,48,48,195,195,48,48,48,48,48,48,48,]),'valor_boolean':([0,3,8,13,15,16,54,66,72,73,84,85,88,90,111,127,129,132,135,145,150,153,156,162,163,169,170,180,238,239,242,245,270,271,273,274,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,198,49,49,49,49,49,49,198,198,49,49,49,49,49,49,49,]),'valor_variable':([0,3,8,13,15,16,54,66,72,73,84,85,88,90,111,127,129,132,135,145,153,156,162,163,169,170,239,242,245,270,271,273,274,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'operacion_binaria':([6,12,68,87,106,120,123,126,128,154,175,200,208,266,279,],[54,85,54,85,54,85,54,85,85,85,85,85,85,85,85,]),'asignacion':([11,92,119,],[72,72,72,]),'operador_matematico':([11,92,119,244,],[74,74,74,262,]),'condicion':([13,15,],[86,91,]),'floating_type':([44,71,94,95,117,176,181,186,228,250,],[101,116,116,138,160,116,116,116,116,116,]),'type':([71,94,176,181,186,228,250,],[110,136,216,225,230,253,267,]),'array_type_spec':([71,],[112,]),'llamada_params':([73,162,],[122,202,]),'body':([90,127,132,145,242,270,271,],[130,164,172,183,260,276,277,]),'cuerpo_fun':([99,],[144,]),'parametrosMetodo':([99,],[145,]),'instruct_expression':([129,168,],[166,207,]),'varias_instrucciones':([129,170,],[168,211,]),'parametros':([146,229,],[184,254,]),'atributo':([146,182,227,229,],[185,227,227,185,]),'valores_int':([147,177,232,],[188,218,255,]),'valores_double':([148,178,234,],[191,220,256,]),'valores_string':([149,179,236,],[194,222,257,]),'valores_boolean':([150,180,238,],[197,224,258,]),'atributos_struct':([182,227,],[226,252,]),'claves_valores':([245,273,],[264,278,]),'clave_valor':([245,273,],[265,265,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> go","S'",1,None,None,None),
  ('go -> instruccion','go',1,'p_go','new_syntax.py',18),
  ('go -> funcion go','go',2,'p_go','new_syntax.py',19),
  ('go -> funcion','go',1,'p_go','new_syntax.py',20),
  ('body -> instruccion','body',1,'p_body','new_syntax.py',23),
  ('body -> I_LLAVE instruct_expression D_LLAVE','body',3,'p_body','new_syntax.py',24),
  ('body -> I_LLAVE varias_instrucciones D_LLAVE','body',3,'p_body','new_syntax.py',25),
  ('body -> I_LLAVE varias_instrucciones instruct_expression D_LLAVE','body',4,'p_body','new_syntax.py',26),
  ('body -> I_LLAVE D_LLAVE','body',2,'p_body','new_syntax.py',27),
  ('varias_instrucciones -> instruccion','varias_instrucciones',1,'p_varias_instrucciones','new_syntax.py',30),
  ('varias_instrucciones -> instruccion varias_instrucciones','varias_instrucciones',2,'p_varias_instrucciones','new_syntax.py',31),
  ('instruct_expression -> RETURN valor','instruct_expression',2,'p_expression_result','new_syntax.py',34),
  ('instruct_expression -> RETURN resultado','instruct_expression',2,'p_expression_result','new_syntax.py',35),
  ('instruccion -> llamada_func','instruccion',1,'p_instrucciones','new_syntax.py',39),
  ('instruccion -> resultado_inc_dec','instruccion',1,'p_instrucciones','new_syntax.py',40),
  ('instruccion -> expression','instruccion',1,'p_instrucciones','new_syntax.py',41),
  ('instruccion -> print I_PARENTESIS valores D_PARENTESIS','instruccion',4,'p_impresion','new_syntax.py',44),
  ('instruccion -> VAR ID type ASIGNACION valor','instruccion',5,'p_declaracion','new_syntax.py',47),
  ('instruccion -> VAR ID ASIGNACION valor','instruccion',4,'p_declaracion','new_syntax.py',48),
  ('instruccion -> VAR ID ASIGNACION instruccion','instruccion',4,'p_declaracion','new_syntax.py',49),
  ('instruccion -> VAR ID array_type_spec ASIGNACION instruccion','instruccion',5,'p_declaracion','new_syntax.py',50),
  ('instruccion -> ID asignacion valor','instruccion',3,'p_asignacion','new_syntax.py',53),
  ('instruccion -> ID asignacion instruccion','instruccion',3,'p_asignacion','new_syntax.py',54),
  ('funcion -> FUNC ID cuerpo_fun','funcion',3,'p_funcion','new_syntax.py',57),
  ('cuerpo_fun -> parametrosMetodo body','cuerpo_fun',2,'p_body_fm','new_syntax.py',60),
  ('parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS type','parametrosMetodo',4,'p_parametros_metodo','new_syntax.py',63),
  ('parametrosMetodo -> I_PARENTESIS parametros D_PARENTESIS','parametrosMetodo',3,'p_parametros_metodo','new_syntax.py',64),
  ('parametros -> atributo','parametros',1,'p_parametros','new_syntax.py',67),
  ('parametros -> atributo COMA parametros','parametros',3,'p_parametros','new_syntax.py',68),
  ('parametros -> <empty>','parametros',0,'p_parametros','new_syntax.py',69),
  ('llamada_func -> ID I_PARENTESIS llamada_params D_PARENTESIS','llamada_func',4,'p_llamada_func','new_syntax.py',72),
  ('llamada_params -> expression','llamada_params',1,'p_llamada_params','new_syntax.py',75),
  ('llamada_params -> expression COMA llamada_params','llamada_params',3,'p_llamada_params','new_syntax.py',76),
  ('instruccion -> IF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_condicion','new_syntax.py',81),
  ('instruccion -> ELSE I_LLAVE body D_LLAVE','instruccion',4,'p_else_condicion','new_syntax.py',84),
  ('instruccion -> ELSEIF condicion I_LLAVE body D_LLAVE','instruccion',5,'p_if_else_condicion','new_syntax.py',87),
  ('instruccion -> FOR ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',8,'p_for_each','new_syntax.py',90),
  ('instruccion -> FOR instruccion PUNTO_COMA valor PUNTO_COMA ID operador_matematico I_LLAVE body D_LLAVE','instruccion',10,'p_for_condicion','new_syntax.py',93),
  ('instruccion -> FOR ID COMA ID DECLARACION_ASIGNACION RANGE ID I_LLAVE body D_LLAVE','instruccion',10,'p_for_map','new_syntax.py',96),
  ('instruccion -> array_int','instruccion',1,'p_array','new_syntax.py',101),
  ('instruccion -> array_double','instruccion',1,'p_array','new_syntax.py',102),
  ('instruccion -> array_string','instruccion',1,'p_array','new_syntax.py',103),
  ('instruccion -> array_boolean','instruccion',1,'p_array','new_syntax.py',104),
  ('instruccion -> array_length_int','instruccion',1,'p_array_length','new_syntax.py',107),
  ('instruccion -> array_length_double','instruccion',1,'p_array_length','new_syntax.py',108),
  ('instruccion -> array_length_string','instruccion',1,'p_array_length','new_syntax.py',109),
  ('instruccion -> array_length_boolean','instruccion',1,'p_array_length','new_syntax.py',110),
  ('instruccion -> array_con_valores_int','instruccion',1,'p_array_con_valores','new_syntax.py',113),
  ('instruccion -> array_con_valores_double','instruccion',1,'p_array_con_valores','new_syntax.py',114),
  ('instruccion -> array_con_valores_string','instruccion',1,'p_array_con_valores','new_syntax.py',115),
  ('instruccion -> array_con_valores_boolean','instruccion',1,'p_array_con_valores','new_syntax.py',116),
  ('instruccion -> array_length_con_valores_int','instruccion',1,'p_array_length_con_valores','new_syntax.py',119),
  ('instruccion -> array_length_con_valores_double','instruccion',1,'p_array_length_con_valores','new_syntax.py',120),
  ('instruccion -> array_length_con_valores_string','instruccion',1,'p_array_length_con_valores','new_syntax.py',121),
  ('instruccion -> array_length_con_valores_boolean','instruccion',1,'p_array_length_con_valores','new_syntax.py',122),
  ('array_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE D_LLAVE','array_int',5,'p_array_int','new_syntax.py',126),
  ('array_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE D_LLAVE','array_double',5,'p_array_double','new_syntax.py',129),
  ('array_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE D_LLAVE','array_string',5,'p_array_string','new_syntax.py',132),
  ('array_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE D_LLAVE','array_boolean',5,'p_array_boolean','new_syntax.py',135),
  ('array_length_int -> array_length INTEGER I_LLAVE D_LLAVE','array_length_int',4,'p_array_length_int','new_syntax.py',138),
  ('array_length_double -> array_length floating_type I_LLAVE D_LLAVE','array_length_double',4,'p_array_length_double','new_syntax.py',141),
  ('array_length_string -> array_length STRINGTYPE I_LLAVE D_LLAVE','array_length_string',4,'p_array_length_string','new_syntax.py',144),
  ('array_length_boolean -> array_length BOOLEAN I_LLAVE D_LLAVE','array_length_boolean',4,'p_array_length_boolean','new_syntax.py',147),
  ('array_con_valores_int -> I_CORCHETE D_CORCHETE INTEGER I_LLAVE valores_int D_LLAVE','array_con_valores_int',6,'p_array_con_valores_int','new_syntax.py',150),
  ('array_con_valores_double -> I_CORCHETE D_CORCHETE floating_type I_LLAVE valores_double D_LLAVE','array_con_valores_double',6,'p_array_con_valores_double','new_syntax.py',153),
  ('array_con_valores_string -> I_CORCHETE D_CORCHETE STRINGTYPE I_LLAVE valores_string D_LLAVE','array_con_valores_string',6,'p_array_con_valores_string','new_syntax.py',156),
  ('array_con_valores_boolean -> I_CORCHETE D_CORCHETE BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_con_valores_boolean',6,'p_array_con_valores_boolean','new_syntax.py',159),
  ('array_length_con_valores_int -> array_length INTEGER I_LLAVE valores_int D_LLAVE','array_length_con_valores_int',5,'p_array_length_con_valores_int','new_syntax.py',162),
  ('array_length_con_valores_double -> array_length floating_type I_LLAVE valores_double D_LLAVE','array_length_con_valores_double',5,'p_array_length_con_valores_double','new_syntax.py',165),
  ('array_length_con_valores_string -> array_length STRINGTYPE I_LLAVE valores_string D_LLAVE','array_length_con_valores_string',5,'p_array_length_con_valores_string','new_syntax.py',168),
  ('array_length_con_valores_boolean -> array_length BOOLEAN I_LLAVE valores_boolean D_LLAVE','array_length_con_valores_boolean',5,'p_array_length_con_valores_boolean','new_syntax.py',171),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE D_LLAVE','instruccion',7,'p_map','new_syntax.py',176),
  ('instruccion -> MAKE I_PARENTESIS MAP I_CORCHETE type D_CORCHETE type D_PARENTESIS','instruccion',8,'p_map_make','new_syntax.py',179),
  ('instruccion -> MAP I_CORCHETE type D_CORCHETE type I_LLAVE claves_valores D_LLAVE','instruccion',8,'p_map_valores','new_syntax.py',182),
  ('instruccion -> TYPE ID STRUCT I_LLAVE atributos_struct D_LLAVE','instruccion',6,'p_struct','new_syntax.py',185),
  ('atributos_struct -> atributo','atributos_struct',1,'p_atributos_struct','new_syntax.py',188),
  ('atributos_struct -> atributo atributos_struct','atributos_struct',2,'p_atributos_struct','new_syntax.py',189),
  ('atributo -> ID type','atributo',2,'p_atributo','new_syntax.py',192),
  ('instruccion -> init_struct','instruccion',1,'p_declaracion_struct','new_syntax.py',195),
  ('init_struct -> VAR ID ID ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',8,'p_init_struct','new_syntax.py',198),
  ('init_struct -> ID DECLARACION_ASIGNACION ID I_LLAVE valores D_LLAVE','init_struct',6,'p_init_struct','new_syntax.py',199),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','new_syntax.py',202),
  ('claves_valores -> clave_valor','claves_valores',1,'p_multiple_clave_valor','new_syntax.py',205),
  ('claves_valores -> clave_valor COMA claves_valores','claves_valores',3,'p_multiple_clave_valor','new_syntax.py',206),
  ('condicion -> valor','condicion',1,'p_condicion','new_syntax.py',209),
  ('condicion -> I_PARENTESIS valor D_PARENTESIS','condicion',3,'p_condicion','new_syntax.py',210),
  ('iteracion_for -> ID','iteracion_for',1,'p_iteracion_for','new_syntax.py',213),
  ('expression -> valores','expression',1,'p_expression_term','new_syntax.py',216),
  ('expression -> resultado','expression',1,'p_expression_term','new_syntax.py',217),
  ('expression -> llamada_func','expression',1,'p_expression_term','new_syntax.py',218),
  ('expression -> I_PARENTESIS resultado D_PARENTESIS','expression',3,'p_expression_term','new_syntax.py',219),
  ('resultado -> expression operacion_binaria expression','resultado',3,'p_expression_operation','new_syntax.py',222),
  ('resultado_inc_dec -> ID operador_matematico','resultado_inc_dec',2,'p_incremento_decremento','new_syntax.py',225),
  ('valores -> valor','valores',1,'p_multiples_valores','new_syntax.py',228),
  ('valores -> valor COMA valores','valores',3,'p_multiples_valores','new_syntax.py',229),
  ('valores_int -> valor_int','valores_int',1,'p_multiples_valores_int','new_syntax.py',232),
  ('valores_int -> valor_int COMA valores_int','valores_int',3,'p_multiples_valores_int','new_syntax.py',233),
  ('valores_double -> valor_double','valores_double',1,'p_multiples_valores_double','new_syntax.py',236),
  ('valores_double -> valor_double COMA valores_double','valores_double',3,'p_multiples_valores_double','new_syntax.py',237),
  ('valores_string -> valor_string','valores_string',1,'p_multiples_valores_string','new_syntax.py',240),
  ('valores_string -> valor_string COMA valores_string','valores_string',3,'p_multiples_valores_string','new_syntax.py',241),
  ('valores_boolean -> valor_boolean','valores_boolean',1,'p_multiples_valores_boolean','new_syntax.py',244),
  ('valores_boolean -> valor_boolean COMA valores_boolean','valores_boolean',3,'p_multiples_valores_boolean','new_syntax.py',245),
  ('valor -> valor operacion_binaria valor','valor',3,'p_operacion_mat','new_syntax.py',248),
  ('print -> PRINTLN','print',1,'p_print_options','new_syntax.py',251),
  ('print -> PRINTF','print',1,'p_print_options','new_syntax.py',252),
  ('print -> PRINT','print',1,'p_print_options','new_syntax.py',253),
  ('array_type_spec -> array_length INTEGER','array_type_spec',2,'p_tipo_array','new_syntax.py',256),
  ('array_type_spec -> array_length STRINGTYPE','array_type_spec',2,'p_tipo_array','new_syntax.py',257),
  ('array_type_spec -> array_length BOOLEAN','array_type_spec',2,'p_tipo_array','new_syntax.py',258),
  ('array_type_spec -> array_length floating_type','array_type_spec',2,'p_tipo_array','new_syntax.py',259),
  ('array_length -> I_CORCHETE INT D_CORCHETE','array_length',3,'p_array_length_notype','new_syntax.py',262),
  ('type -> BOOL','type',1,'p_tipo','new_syntax.py',265),
  ('type -> STRINGTYPE','type',1,'p_tipo','new_syntax.py',266),
  ('type -> INTEGER','type',1,'p_tipo','new_syntax.py',267),
  ('type -> floating_type','type',1,'p_tipo','new_syntax.py',268),
  ('floating_type -> FLOAT32','floating_type',1,'p_tipo_flotante','new_syntax.py',271),
  ('floating_type -> FLOAT64','floating_type',1,'p_tipo_flotante','new_syntax.py',272),
  ('operador_matematico -> INCREMENTO','operador_matematico',1,'p_operacion_mat_var','new_syntax.py',275),
  ('operador_matematico -> DECREMENTO','operador_matematico',1,'p_operacion_mat_var','new_syntax.py',276),
  ('asignacion -> ASIGNACION','asignacion',1,'p_operadores_asignacion','new_syntax.py',279),
  ('asignacion -> ASIGNACION_ADICION','asignacion',1,'p_operadores_asignacion','new_syntax.py',280),
  ('asignacion -> ASIGNACION_RESTA','asignacion',1,'p_operadores_asignacion','new_syntax.py',281),
  ('asignacion -> ASIGNACION_MULTI','asignacion',1,'p_operadores_asignacion','new_syntax.py',282),
  ('asignacion -> DECLARACION_ASIGNACION','asignacion',1,'p_operadores_asignacion','new_syntax.py',283),
  ('asignacion -> ASIGNACION_DIVISION','asignacion',1,'p_operadores_asignacion','new_syntax.py',284),
  ('asignacion -> ASIGNACION_MODULO','asignacion',1,'p_operadores_asignacion','new_syntax.py',285),
  ('operacion_binaria -> ADICION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',288),
  ('operacion_binaria -> RESTA','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',289),
  ('operacion_binaria -> MULTIPLICACION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',290),
  ('operacion_binaria -> DIVISION','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',291),
  ('operacion_binaria -> MODULO','operacion_binaria',1,'p_operacion_mat_simbolos','new_syntax.py',292),
  ('operacion_binaria -> MENOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',295),
  ('operacion_binaria -> IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',296),
  ('operacion_binaria -> DIFERENTE','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',297),
  ('operacion_binaria -> MAYOR','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',298),
  ('operacion_binaria -> MAYOR_IGUAL','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',299),
  ('operacion_binaria -> MENOR','operacion_binaria',1,'p_operacion_comp_simbolos','new_syntax.py',300),
  ('valor -> valor_int','valor',1,'p_valores','new_syntax.py',303),
  ('valor -> valor_double','valor',1,'p_valores','new_syntax.py',304),
  ('valor -> valor_string','valor',1,'p_valores','new_syntax.py',305),
  ('valor -> valor_boolean','valor',1,'p_valores','new_syntax.py',306),
  ('valor -> valor_variable','valor',1,'p_valores','new_syntax.py',307),
  ('valor_int -> INT','valor_int',1,'p_valores_int','new_syntax.py',310),
  ('valor_double -> DOUBLE','valor_double',1,'p_valores_double','new_syntax.py',313),
  ('valor_string -> STRING','valor_string',1,'p_valores_string','new_syntax.py',316),
  ('valor_boolean -> BOOLEAN','valor_boolean',1,'p_valores_boolean','new_syntax.py',319),
  ('valor_variable -> ID','valor_variable',1,'p_valores_variable','new_syntax.py',322),
]
